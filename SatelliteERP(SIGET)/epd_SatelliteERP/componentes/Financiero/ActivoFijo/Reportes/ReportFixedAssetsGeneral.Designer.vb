'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ReportFixedAssetsGeneral"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ReportFixedAssetsGeneral
    Inherits Global.System.Data.DataSet
    
    Private tableERP_FixedAssets_SP_GetGeneralReport As ERP_FixedAssets_SP_GetGeneralReportDataTable
    
    Private tableERP_FixedAssets_SP_GetReportTypeAssets As ERP_FixedAssets_SP_GetReportTypeAssetsDataTable
    
    Private tableERP_GetBodyReportInventory_transfers As ERP_GetBodyReportInventory_transfersDataTable
    
    Private tableERP_Finance_Get_DepreciationFixedAsset As ERP_Finance_Get_DepreciationFixedAssetDataTable
    
    Private tableSP_ERP_Inventory_ReporteAmortizacion As SP_ERP_Inventory_ReporteAmortizacionDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ERP_FixedAssets_SP_GetGeneralReport")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_FixedAssets_SP_GetGeneralReportDataTable(ds.Tables("ERP_FixedAssets_SP_GetGeneralReport")))
            End If
            If (Not (ds.Tables("ERP_FixedAssets_SP_GetReportTypeAssets")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_FixedAssets_SP_GetReportTypeAssetsDataTable(ds.Tables("ERP_FixedAssets_SP_GetReportTypeAssets")))
            End If
            If (Not (ds.Tables("ERP_GetBodyReportInventory_transfers")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_GetBodyReportInventory_transfersDataTable(ds.Tables("ERP_GetBodyReportInventory_transfers")))
            End If
            If (Not (ds.Tables("ERP_Finance_Get_DepreciationFixedAsset")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_Get_DepreciationFixedAssetDataTable(ds.Tables("ERP_Finance_Get_DepreciationFixedAsset")))
            End If
            If (Not (ds.Tables("SP_ERP_Inventory_ReporteAmortizacion")) Is Nothing) Then
                MyBase.Tables.Add(New SP_ERP_Inventory_ReporteAmortizacionDataTable(ds.Tables("SP_ERP_Inventory_ReporteAmortizacion")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_FixedAssets_SP_GetGeneralReport() As ERP_FixedAssets_SP_GetGeneralReportDataTable
        Get
            Return Me.tableERP_FixedAssets_SP_GetGeneralReport
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_FixedAssets_SP_GetReportTypeAssets() As ERP_FixedAssets_SP_GetReportTypeAssetsDataTable
        Get
            Return Me.tableERP_FixedAssets_SP_GetReportTypeAssets
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_GetBodyReportInventory_transfers() As ERP_GetBodyReportInventory_transfersDataTable
        Get
            Return Me.tableERP_GetBodyReportInventory_transfers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_Finance_Get_DepreciationFixedAsset() As ERP_Finance_Get_DepreciationFixedAssetDataTable
        Get
            Return Me.tableERP_Finance_Get_DepreciationFixedAsset
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SP_ERP_Inventory_ReporteAmortizacion() As SP_ERP_Inventory_ReporteAmortizacionDataTable
        Get
            Return Me.tableSP_ERP_Inventory_ReporteAmortizacion
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ReportFixedAssetsGeneral = CType(MyBase.Clone,ReportFixedAssetsGeneral)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ERP_FixedAssets_SP_GetGeneralReport")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_FixedAssets_SP_GetGeneralReportDataTable(ds.Tables("ERP_FixedAssets_SP_GetGeneralReport")))
            End If
            If (Not (ds.Tables("ERP_FixedAssets_SP_GetReportTypeAssets")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_FixedAssets_SP_GetReportTypeAssetsDataTable(ds.Tables("ERP_FixedAssets_SP_GetReportTypeAssets")))
            End If
            If (Not (ds.Tables("ERP_GetBodyReportInventory_transfers")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_GetBodyReportInventory_transfersDataTable(ds.Tables("ERP_GetBodyReportInventory_transfers")))
            End If
            If (Not (ds.Tables("ERP_Finance_Get_DepreciationFixedAsset")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_Get_DepreciationFixedAssetDataTable(ds.Tables("ERP_Finance_Get_DepreciationFixedAsset")))
            End If
            If (Not (ds.Tables("SP_ERP_Inventory_ReporteAmortizacion")) Is Nothing) Then
                MyBase.Tables.Add(New SP_ERP_Inventory_ReporteAmortizacionDataTable(ds.Tables("SP_ERP_Inventory_ReporteAmortizacion")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableERP_FixedAssets_SP_GetGeneralReport = CType(MyBase.Tables("ERP_FixedAssets_SP_GetGeneralReport"),ERP_FixedAssets_SP_GetGeneralReportDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_FixedAssets_SP_GetGeneralReport) Is Nothing) Then
                Me.tableERP_FixedAssets_SP_GetGeneralReport.InitVars
            End If
        End If
        Me.tableERP_FixedAssets_SP_GetReportTypeAssets = CType(MyBase.Tables("ERP_FixedAssets_SP_GetReportTypeAssets"),ERP_FixedAssets_SP_GetReportTypeAssetsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_FixedAssets_SP_GetReportTypeAssets) Is Nothing) Then
                Me.tableERP_FixedAssets_SP_GetReportTypeAssets.InitVars
            End If
        End If
        Me.tableERP_GetBodyReportInventory_transfers = CType(MyBase.Tables("ERP_GetBodyReportInventory_transfers"),ERP_GetBodyReportInventory_transfersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_GetBodyReportInventory_transfers) Is Nothing) Then
                Me.tableERP_GetBodyReportInventory_transfers.InitVars
            End If
        End If
        Me.tableERP_Finance_Get_DepreciationFixedAsset = CType(MyBase.Tables("ERP_Finance_Get_DepreciationFixedAsset"),ERP_Finance_Get_DepreciationFixedAssetDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_Finance_Get_DepreciationFixedAsset) Is Nothing) Then
                Me.tableERP_Finance_Get_DepreciationFixedAsset.InitVars
            End If
        End If
        Me.tableSP_ERP_Inventory_ReporteAmortizacion = CType(MyBase.Tables("SP_ERP_Inventory_ReporteAmortizacion"),SP_ERP_Inventory_ReporteAmortizacionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSP_ERP_Inventory_ReporteAmortizacion) Is Nothing) Then
                Me.tableSP_ERP_Inventory_ReporteAmortizacion.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ReportFixedAssetsGeneral"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ReportFixedAssetsGeneral.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableERP_FixedAssets_SP_GetGeneralReport = New ERP_FixedAssets_SP_GetGeneralReportDataTable()
        MyBase.Tables.Add(Me.tableERP_FixedAssets_SP_GetGeneralReport)
        Me.tableERP_FixedAssets_SP_GetReportTypeAssets = New ERP_FixedAssets_SP_GetReportTypeAssetsDataTable()
        MyBase.Tables.Add(Me.tableERP_FixedAssets_SP_GetReportTypeAssets)
        Me.tableERP_GetBodyReportInventory_transfers = New ERP_GetBodyReportInventory_transfersDataTable()
        MyBase.Tables.Add(Me.tableERP_GetBodyReportInventory_transfers)
        Me.tableERP_Finance_Get_DepreciationFixedAsset = New ERP_Finance_Get_DepreciationFixedAssetDataTable()
        MyBase.Tables.Add(Me.tableERP_Finance_Get_DepreciationFixedAsset)
        Me.tableSP_ERP_Inventory_ReporteAmortizacion = New SP_ERP_Inventory_ReporteAmortizacionDataTable()
        MyBase.Tables.Add(Me.tableSP_ERP_Inventory_ReporteAmortizacion)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_FixedAssets_SP_GetGeneralReport() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_FixedAssets_SP_GetReportTypeAssets() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_GetBodyReportInventory_transfers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_Finance_Get_DepreciationFixedAsset() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSP_ERP_Inventory_ReporteAmortizacion() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ReportFixedAssetsGeneral = New ReportFixedAssetsGeneral()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_FixedAssets_SP_GetGeneralReportRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_FixedAssets_SP_GetGeneralReportRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_GetBodyReportInventory_transfersRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_GetBodyReportInventory_transfersRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_Finance_Get_DepreciationFixedAssetRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_Finance_Get_DepreciationFixedAssetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SP_ERP_Inventory_ReporteAmortizacionRowChangeEventHandler(ByVal sender As Object, ByVal e As SP_ERP_Inventory_ReporteAmortizacionRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_FixedAssets_SP_GetGeneralReportDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_FixedAssets_SP_GetGeneralReportRow)
        
        Private columnCodigo As Global.System.Data.DataColumn
        
        Private columnNumeroSerie As Global.System.Data.DataColumn
        
        Private columnUbicacionSecundaria As Global.System.Data.DataColumn
        
        Private columnUbicacionPrimaria As Global.System.Data.DataColumn
        
        Private columnValorAdquisicion As Global.System.Data.DataColumn
        
        Private columnUnidadOrganizativa As Global.System.Data.DataColumn
        
        Private columnBien As Global.System.Data.DataColumn
        
        Private columnObservaciones As Global.System.Data.DataColumn
        
        Private columnMarca As Global.System.Data.DataColumn
        
        Private columnModelo As Global.System.Data.DataColumn
        
        Private columnClasificacion As Global.System.Data.DataColumn
        
        Private columnSubClasificacion As Global.System.Data.DataColumn
        
        Private columnFechaAdquisicion As Global.System.Data.DataColumn
        
        Private columnUbicacionTemporal As Global.System.Data.DataColumn
        
        Private columnNumeroDocumentoCompra As Global.System.Data.DataColumn
        
        Private columnResponsable As Global.System.Data.DataColumn
        
        Private columnProveedor As Global.System.Data.DataColumn
        
        Private columnFecha_Caducidad As Global.System.Data.DataColumn
        
        Private columnForma_Adquisicion As Global.System.Data.DataColumn
        
        Private columnmaterial As Global.System.Data.DataColumn
        
        Private columncolor As Global.System.Data.DataColumn
        
        Private columndescargado As Global.System.Data.DataColumn
        
        Private columnfecha_descargo As Global.System.Data.DataColumn
        
        Private columndescripcion_descargo As Global.System.Data.DataColumn
        
        Private columnnombrestado As Global.System.Data.DataColumn
        
        Private columnCodBarras As Global.System.Data.DataColumn
        
        Private columnInvoice_numbers As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_FixedAssets_SP_GetGeneralReport"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumeroSerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UbicacionSecundariaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUbicacionSecundaria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UbicacionPrimariaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUbicacionPrimaria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValorAdquisicionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorAdquisicion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UnidadOrganizativaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidadOrganizativa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BienColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBien
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservaciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MarcaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMarca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModeloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClasificacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClasificacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubClasificacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubClasificacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaAdquisicionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaAdquisicion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UbicacionTemporalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUbicacionTemporal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumeroDocumentoCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroDocumentoCompra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResponsableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResponsable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProveedorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProveedor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Fecha_CaducidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha_Caducidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Forma_AdquisicionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForma_Adquisicion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property materialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property colorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property descargadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescargado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fecha_descargoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_descargo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property descripcion_descargoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescripcion_descargo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nombrestadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombrestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodBarrasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodBarras
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Invoice_numbersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_numbers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_FixedAssets_SP_GetGeneralReportRow
            Get
                Return CType(Me.Rows(index),ERP_FixedAssets_SP_GetGeneralReportRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_FixedAssets_SP_GetGeneralReportRowChanging As ERP_FixedAssets_SP_GetGeneralReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_FixedAssets_SP_GetGeneralReportRowChanged As ERP_FixedAssets_SP_GetGeneralReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_FixedAssets_SP_GetGeneralReportRowDeleting As ERP_FixedAssets_SP_GetGeneralReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_FixedAssets_SP_GetGeneralReportRowDeleted As ERP_FixedAssets_SP_GetGeneralReportRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_FixedAssets_SP_GetGeneralReportRow(ByVal row As ERP_FixedAssets_SP_GetGeneralReportRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_FixedAssets_SP_GetGeneralReportRow( _
                    ByVal Codigo As String,  _
                    ByVal NumeroSerie As String,  _
                    ByVal UbicacionSecundaria As String,  _
                    ByVal UbicacionPrimaria As String,  _
                    ByVal ValorAdquisicion As Decimal,  _
                    ByVal UnidadOrganizativa As String,  _
                    ByVal Bien As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Marca As String,  _
                    ByVal Modelo As String,  _
                    ByVal Clasificacion As String,  _
                    ByVal SubClasificacion As String,  _
                    ByVal FechaAdquisicion As String,  _
                    ByVal UbicacionTemporal As String,  _
                    ByVal NumeroDocumentoCompra As String,  _
                    ByVal Responsable As String,  _
                    ByVal Proveedor As String,  _
                    ByVal Fecha_Caducidad As String,  _
                    ByVal Forma_Adquisicion As String,  _
                    ByVal material As String,  _
                    ByVal color As String,  _
                    ByVal descargado As String,  _
                    ByVal fecha_descargo As String,  _
                    ByVal descripcion_descargo As String,  _
                    ByVal nombrestado As String,  _
                    ByVal CodBarras As String,  _
                    ByVal Invoice_numbers As String) As ERP_FixedAssets_SP_GetGeneralReportRow
            Dim rowERP_FixedAssets_SP_GetGeneralReportRow As ERP_FixedAssets_SP_GetGeneralReportRow = CType(Me.NewRow,ERP_FixedAssets_SP_GetGeneralReportRow)
            Dim columnValuesArray() As Object = New Object() {Codigo, NumeroSerie, UbicacionSecundaria, UbicacionPrimaria, ValorAdquisicion, UnidadOrganizativa, Bien, Observaciones, Marca, Modelo, Clasificacion, SubClasificacion, FechaAdquisicion, UbicacionTemporal, NumeroDocumentoCompra, Responsable, Proveedor, Fecha_Caducidad, Forma_Adquisicion, material, color, descargado, fecha_descargo, descripcion_descargo, nombrestado, CodBarras, Invoice_numbers}
            rowERP_FixedAssets_SP_GetGeneralReportRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_FixedAssets_SP_GetGeneralReportRow)
            Return rowERP_FixedAssets_SP_GetGeneralReportRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_FixedAssets_SP_GetGeneralReportDataTable = CType(MyBase.Clone,ERP_FixedAssets_SP_GetGeneralReportDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_FixedAssets_SP_GetGeneralReportDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCodigo = MyBase.Columns("Codigo")
            Me.columnNumeroSerie = MyBase.Columns("NumeroSerie")
            Me.columnUbicacionSecundaria = MyBase.Columns("UbicacionSecundaria")
            Me.columnUbicacionPrimaria = MyBase.Columns("UbicacionPrimaria")
            Me.columnValorAdquisicion = MyBase.Columns("ValorAdquisicion")
            Me.columnUnidadOrganizativa = MyBase.Columns("UnidadOrganizativa")
            Me.columnBien = MyBase.Columns("Bien")
            Me.columnObservaciones = MyBase.Columns("Observaciones")
            Me.columnMarca = MyBase.Columns("Marca")
            Me.columnModelo = MyBase.Columns("Modelo")
            Me.columnClasificacion = MyBase.Columns("Clasificacion")
            Me.columnSubClasificacion = MyBase.Columns("SubClasificacion")
            Me.columnFechaAdquisicion = MyBase.Columns("FechaAdquisicion")
            Me.columnUbicacionTemporal = MyBase.Columns("UbicacionTemporal")
            Me.columnNumeroDocumentoCompra = MyBase.Columns("NumeroDocumentoCompra")
            Me.columnResponsable = MyBase.Columns("Responsable")
            Me.columnProveedor = MyBase.Columns("Proveedor")
            Me.columnFecha_Caducidad = MyBase.Columns("Fecha_Caducidad")
            Me.columnForma_Adquisicion = MyBase.Columns("Forma_Adquisicion")
            Me.columnmaterial = MyBase.Columns("material")
            Me.columncolor = MyBase.Columns("color")
            Me.columndescargado = MyBase.Columns("descargado")
            Me.columnfecha_descargo = MyBase.Columns("fecha_descargo")
            Me.columndescripcion_descargo = MyBase.Columns("descripcion_descargo")
            Me.columnnombrestado = MyBase.Columns("nombrestado")
            Me.columnCodBarras = MyBase.Columns("CodBarras")
            Me.columnInvoice_numbers = MyBase.Columns("Invoice_numbers")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCodigo = New Global.System.Data.DataColumn("Codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.columnNumeroSerie = New Global.System.Data.DataColumn("NumeroSerie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroSerie)
            Me.columnUbicacionSecundaria = New Global.System.Data.DataColumn("UbicacionSecundaria", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUbicacionSecundaria)
            Me.columnUbicacionPrimaria = New Global.System.Data.DataColumn("UbicacionPrimaria", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUbicacionPrimaria)
            Me.columnValorAdquisicion = New Global.System.Data.DataColumn("ValorAdquisicion", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorAdquisicion)
            Me.columnUnidadOrganizativa = New Global.System.Data.DataColumn("UnidadOrganizativa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidadOrganizativa)
            Me.columnBien = New Global.System.Data.DataColumn("Bien", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBien)
            Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservaciones)
            Me.columnMarca = New Global.System.Data.DataColumn("Marca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMarca)
            Me.columnModelo = New Global.System.Data.DataColumn("Modelo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelo)
            Me.columnClasificacion = New Global.System.Data.DataColumn("Clasificacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClasificacion)
            Me.columnSubClasificacion = New Global.System.Data.DataColumn("SubClasificacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubClasificacion)
            Me.columnFechaAdquisicion = New Global.System.Data.DataColumn("FechaAdquisicion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaAdquisicion)
            Me.columnUbicacionTemporal = New Global.System.Data.DataColumn("UbicacionTemporal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUbicacionTemporal)
            Me.columnNumeroDocumentoCompra = New Global.System.Data.DataColumn("NumeroDocumentoCompra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroDocumentoCompra)
            Me.columnResponsable = New Global.System.Data.DataColumn("Responsable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResponsable)
            Me.columnProveedor = New Global.System.Data.DataColumn("Proveedor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProveedor)
            Me.columnFecha_Caducidad = New Global.System.Data.DataColumn("Fecha_Caducidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha_Caducidad)
            Me.columnForma_Adquisicion = New Global.System.Data.DataColumn("Forma_Adquisicion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForma_Adquisicion)
            Me.columnmaterial = New Global.System.Data.DataColumn("material", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterial)
            Me.columncolor = New Global.System.Data.DataColumn("color", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolor)
            Me.columndescargado = New Global.System.Data.DataColumn("descargado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescargado)
            Me.columnfecha_descargo = New Global.System.Data.DataColumn("fecha_descargo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_descargo)
            Me.columndescripcion_descargo = New Global.System.Data.DataColumn("descripcion_descargo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescripcion_descargo)
            Me.columnnombrestado = New Global.System.Data.DataColumn("nombrestado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombrestado)
            Me.columnCodBarras = New Global.System.Data.DataColumn("CodBarras", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodBarras)
            Me.columnInvoice_numbers = New Global.System.Data.DataColumn("Invoice_numbers", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_numbers)
            Me.columnCodigo.MaxLength = 50
            Me.columnNumeroSerie.MaxLength = 150
            Me.columnUbicacionSecundaria.MaxLength = 150
            Me.columnUbicacionPrimaria.MaxLength = 150
            Me.columnUnidadOrganizativa.ReadOnly = true
            Me.columnUnidadOrganizativa.MaxLength = 1
            Me.columnBien.MaxLength = 2147483647
            Me.columnObservaciones.MaxLength = 100
            Me.columnMarca.ReadOnly = true
            Me.columnMarca.MaxLength = 150
            Me.columnModelo.ReadOnly = true
            Me.columnModelo.MaxLength = 150
            Me.columnClasificacion.ReadOnly = true
            Me.columnClasificacion.MaxLength = 50
            Me.columnSubClasificacion.ReadOnly = true
            Me.columnSubClasificacion.MaxLength = 100
            Me.columnFechaAdquisicion.ReadOnly = true
            Me.columnFechaAdquisicion.MaxLength = 25
            Me.columnUbicacionTemporal.ReadOnly = true
            Me.columnUbicacionTemporal.MaxLength = 1
            Me.columnNumeroDocumentoCompra.ReadOnly = true
            Me.columnNumeroDocumentoCompra.MaxLength = 1
            Me.columnResponsable.ReadOnly = true
            Me.columnResponsable.MaxLength = 203
            Me.columnProveedor.MaxLength = 100
            Me.columnFecha_Caducidad.ReadOnly = true
            Me.columnFecha_Caducidad.MaxLength = 1
            Me.columnForma_Adquisicion.ReadOnly = true
            Me.columnForma_Adquisicion.MaxLength = 1
            Me.columnmaterial.ReadOnly = true
            Me.columnmaterial.MaxLength = 50
            Me.columncolor.ReadOnly = true
            Me.columncolor.MaxLength = 50
            Me.columndescargado.ReadOnly = true
            Me.columndescargado.MaxLength = 1
            Me.columnfecha_descargo.ReadOnly = true
            Me.columnfecha_descargo.MaxLength = 1
            Me.columndescripcion_descargo.ReadOnly = true
            Me.columndescripcion_descargo.MaxLength = 1
            Me.columnnombrestado.ReadOnly = true
            Me.columnnombrestado.MaxLength = 50
            Me.columnCodBarras.ReadOnly = true
            Me.columnCodBarras.MaxLength = 1
            Me.columnInvoice_numbers.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_FixedAssets_SP_GetGeneralReportRow() As ERP_FixedAssets_SP_GetGeneralReportRow
            Return CType(Me.NewRow,ERP_FixedAssets_SP_GetGeneralReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_FixedAssets_SP_GetGeneralReportRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_FixedAssets_SP_GetGeneralReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_FixedAssets_SP_GetGeneralReportRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_FixedAssets_SP_GetGeneralReportRowChanged(Me, New ERP_FixedAssets_SP_GetGeneralReportRowChangeEvent(CType(e.Row,ERP_FixedAssets_SP_GetGeneralReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_FixedAssets_SP_GetGeneralReportRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_FixedAssets_SP_GetGeneralReportRowChanging(Me, New ERP_FixedAssets_SP_GetGeneralReportRowChangeEvent(CType(e.Row,ERP_FixedAssets_SP_GetGeneralReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_FixedAssets_SP_GetGeneralReportRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_FixedAssets_SP_GetGeneralReportRowDeleted(Me, New ERP_FixedAssets_SP_GetGeneralReportRowChangeEvent(CType(e.Row,ERP_FixedAssets_SP_GetGeneralReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_FixedAssets_SP_GetGeneralReportRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_FixedAssets_SP_GetGeneralReportRowDeleting(Me, New ERP_FixedAssets_SP_GetGeneralReportRowChangeEvent(CType(e.Row,ERP_FixedAssets_SP_GetGeneralReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_FixedAssets_SP_GetGeneralReportRow(ByVal row As ERP_FixedAssets_SP_GetGeneralReportRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ReportFixedAssetsGeneral = New ReportFixedAssetsGeneral()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_FixedAssets_SP_GetGeneralReportDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_FixedAssets_SP_GetReportTypeAssetsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_FixedAssets_SP_GetReportTypeAssetsRow)
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnCanttotal As Global.System.Data.DataColumn
        
        Private columncantActivos As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_FixedAssets_SP_GetReportTypeAssets"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CanttotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCanttotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cantActivosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantActivos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_FixedAssets_SP_GetReportTypeAssetsRow
            Get
                Return CType(Me.Rows(index),ERP_FixedAssets_SP_GetReportTypeAssetsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_FixedAssets_SP_GetReportTypeAssetsRowChanging As ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_FixedAssets_SP_GetReportTypeAssetsRowChanged As ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_FixedAssets_SP_GetReportTypeAssetsRowDeleting As ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_FixedAssets_SP_GetReportTypeAssetsRowDeleted As ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_FixedAssets_SP_GetReportTypeAssetsRow(ByVal row As ERP_FixedAssets_SP_GetReportTypeAssetsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_FixedAssets_SP_GetReportTypeAssetsRow(ByVal nombre As String, ByVal Canttotal As Decimal, ByVal cantActivos As Integer) As ERP_FixedAssets_SP_GetReportTypeAssetsRow
            Dim rowERP_FixedAssets_SP_GetReportTypeAssetsRow As ERP_FixedAssets_SP_GetReportTypeAssetsRow = CType(Me.NewRow,ERP_FixedAssets_SP_GetReportTypeAssetsRow)
            Dim columnValuesArray() As Object = New Object() {nombre, Canttotal, cantActivos}
            rowERP_FixedAssets_SP_GetReportTypeAssetsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_FixedAssets_SP_GetReportTypeAssetsRow)
            Return rowERP_FixedAssets_SP_GetReportTypeAssetsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_FixedAssets_SP_GetReportTypeAssetsDataTable = CType(MyBase.Clone,ERP_FixedAssets_SP_GetReportTypeAssetsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_FixedAssets_SP_GetReportTypeAssetsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnCanttotal = MyBase.Columns("Canttotal")
            Me.columncantActivos = MyBase.Columns("cantActivos")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnCanttotal = New Global.System.Data.DataColumn("Canttotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCanttotal)
            Me.columncantActivos = New Global.System.Data.DataColumn("cantActivos", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantActivos)
            Me.columnnombre.MaxLength = 300
            Me.columnCanttotal.ReadOnly = true
            Me.columncantActivos.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_FixedAssets_SP_GetReportTypeAssetsRow() As ERP_FixedAssets_SP_GetReportTypeAssetsRow
            Return CType(Me.NewRow,ERP_FixedAssets_SP_GetReportTypeAssetsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_FixedAssets_SP_GetReportTypeAssetsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_FixedAssets_SP_GetReportTypeAssetsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_FixedAssets_SP_GetReportTypeAssetsRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_FixedAssets_SP_GetReportTypeAssetsRowChanged(Me, New ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEvent(CType(e.Row,ERP_FixedAssets_SP_GetReportTypeAssetsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_FixedAssets_SP_GetReportTypeAssetsRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_FixedAssets_SP_GetReportTypeAssetsRowChanging(Me, New ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEvent(CType(e.Row,ERP_FixedAssets_SP_GetReportTypeAssetsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_FixedAssets_SP_GetReportTypeAssetsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_FixedAssets_SP_GetReportTypeAssetsRowDeleted(Me, New ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEvent(CType(e.Row,ERP_FixedAssets_SP_GetReportTypeAssetsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_FixedAssets_SP_GetReportTypeAssetsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_FixedAssets_SP_GetReportTypeAssetsRowDeleting(Me, New ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEvent(CType(e.Row,ERP_FixedAssets_SP_GetReportTypeAssetsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_FixedAssets_SP_GetReportTypeAssetsRow(ByVal row As ERP_FixedAssets_SP_GetReportTypeAssetsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ReportFixedAssetsGeneral = New ReportFixedAssetsGeneral()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_FixedAssets_SP_GetReportTypeAssetsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_GetBodyReportInventory_transfersDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_GetBodyReportInventory_transfersRow)
        
        Private columnNumber_Purchase As Global.System.Data.DataColumn
        
        Private columnClasificacion As Global.System.Data.DataColumn
        
        Private columnSubClasificacion As Global.System.Data.DataColumn
        
        Private columnActivoPasado As Global.System.Data.DataColumn
        
        Private columnAntiguodueno As Global.System.Data.DataColumn
        
        Private columnNuevodueno As Global.System.Data.DataColumn
        
        Private columnFechatrasferencia As Global.System.Data.DataColumn
        
        Private columnfechaDesde As Global.System.Data.DataColumn
        
        Private columnfechaHasta As Global.System.Data.DataColumn
        
        Private _columnMotivo_Transferencia As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_GetBodyReportInventory_transfers"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Number_PurchaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumber_Purchase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClasificacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClasificacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubClasificacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubClasificacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActivoPasadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActivoPasado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AntiguoduenoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAntiguodueno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NuevoduenoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNuevodueno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechatrasferenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechatrasferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fechaDesdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechaDesde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fechaHastaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechaHasta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Motivo_TransferenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnMotivo_Transferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_GetBodyReportInventory_transfersRow
            Get
                Return CType(Me.Rows(index),ERP_GetBodyReportInventory_transfersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_GetBodyReportInventory_transfersRowChanging As ERP_GetBodyReportInventory_transfersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_GetBodyReportInventory_transfersRowChanged As ERP_GetBodyReportInventory_transfersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_GetBodyReportInventory_transfersRowDeleting As ERP_GetBodyReportInventory_transfersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_GetBodyReportInventory_transfersRowDeleted As ERP_GetBodyReportInventory_transfersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_GetBodyReportInventory_transfersRow(ByVal row As ERP_GetBodyReportInventory_transfersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_GetBodyReportInventory_transfersRow(ByVal Number_Purchase As String, ByVal Clasificacion As String, ByVal SubClasificacion As String, ByVal ActivoPasado As String, ByVal Antiguodueno As String, ByVal Nuevodueno As String, ByVal Fechatrasferencia As String, ByVal fechaDesde As Date, ByVal fechaHasta As Date, ByVal _Motivo_Transferencia As String) As ERP_GetBodyReportInventory_transfersRow
            Dim rowERP_GetBodyReportInventory_transfersRow As ERP_GetBodyReportInventory_transfersRow = CType(Me.NewRow,ERP_GetBodyReportInventory_transfersRow)
            Dim columnValuesArray() As Object = New Object() {Number_Purchase, Clasificacion, SubClasificacion, ActivoPasado, Antiguodueno, Nuevodueno, Fechatrasferencia, fechaDesde, fechaHasta, _Motivo_Transferencia}
            rowERP_GetBodyReportInventory_transfersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_GetBodyReportInventory_transfersRow)
            Return rowERP_GetBodyReportInventory_transfersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_GetBodyReportInventory_transfersDataTable = CType(MyBase.Clone,ERP_GetBodyReportInventory_transfersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_GetBodyReportInventory_transfersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNumber_Purchase = MyBase.Columns("Number_Purchase")
            Me.columnClasificacion = MyBase.Columns("Clasificacion")
            Me.columnSubClasificacion = MyBase.Columns("SubClasificacion")
            Me.columnActivoPasado = MyBase.Columns("ActivoPasado")
            Me.columnAntiguodueno = MyBase.Columns("Antiguodueno")
            Me.columnNuevodueno = MyBase.Columns("Nuevodueno")
            Me.columnFechatrasferencia = MyBase.Columns("Fechatrasferencia")
            Me.columnfechaDesde = MyBase.Columns("fechaDesde")
            Me.columnfechaHasta = MyBase.Columns("fechaHasta")
            Me._columnMotivo_Transferencia = MyBase.Columns("Motivo_Transferencia")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNumber_Purchase = New Global.System.Data.DataColumn("Number_Purchase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumber_Purchase)
            Me.columnClasificacion = New Global.System.Data.DataColumn("Clasificacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClasificacion)
            Me.columnSubClasificacion = New Global.System.Data.DataColumn("SubClasificacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubClasificacion)
            Me.columnActivoPasado = New Global.System.Data.DataColumn("ActivoPasado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActivoPasado)
            Me.columnAntiguodueno = New Global.System.Data.DataColumn("Antiguodueno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAntiguodueno)
            Me.columnNuevodueno = New Global.System.Data.DataColumn("Nuevodueno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNuevodueno)
            Me.columnFechatrasferencia = New Global.System.Data.DataColumn("Fechatrasferencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechatrasferencia)
            Me.columnfechaDesde = New Global.System.Data.DataColumn("fechaDesde", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechaDesde)
            Me.columnfechaHasta = New Global.System.Data.DataColumn("fechaHasta", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechaHasta)
            Me._columnMotivo_Transferencia = New Global.System.Data.DataColumn("Motivo_Transferencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnMotivo_Transferencia.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_Motivo_Transferencia")
            Me._columnMotivo_Transferencia.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_Motivo_TransferenciaColumn")
            Me._columnMotivo_Transferencia.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnMotivo_Transferencia")
            Me._columnMotivo_Transferencia.ExtendedProperties.Add("Generator_UserColumnName", "Motivo_Transferencia")
            MyBase.Columns.Add(Me._columnMotivo_Transferencia)
            Me.columnNumber_Purchase.MaxLength = 50
            Me.columnClasificacion.MaxLength = 50
            Me.columnSubClasificacion.MaxLength = 100
            Me.columnActivoPasado.MaxLength = 50
            Me.columnAntiguodueno.ReadOnly = true
            Me.columnAntiguodueno.MaxLength = 101
            Me.columnNuevodueno.ReadOnly = true
            Me.columnNuevodueno.MaxLength = 101
            Me.columnFechatrasferencia.ReadOnly = true
            Me.columnFechatrasferencia.MaxLength = 51
            Me._columnMotivo_Transferencia.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_GetBodyReportInventory_transfersRow() As ERP_GetBodyReportInventory_transfersRow
            Return CType(Me.NewRow,ERP_GetBodyReportInventory_transfersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_GetBodyReportInventory_transfersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_GetBodyReportInventory_transfersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_GetBodyReportInventory_transfersRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_GetBodyReportInventory_transfersRowChanged(Me, New ERP_GetBodyReportInventory_transfersRowChangeEvent(CType(e.Row,ERP_GetBodyReportInventory_transfersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_GetBodyReportInventory_transfersRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_GetBodyReportInventory_transfersRowChanging(Me, New ERP_GetBodyReportInventory_transfersRowChangeEvent(CType(e.Row,ERP_GetBodyReportInventory_transfersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_GetBodyReportInventory_transfersRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_GetBodyReportInventory_transfersRowDeleted(Me, New ERP_GetBodyReportInventory_transfersRowChangeEvent(CType(e.Row,ERP_GetBodyReportInventory_transfersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_GetBodyReportInventory_transfersRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_GetBodyReportInventory_transfersRowDeleting(Me, New ERP_GetBodyReportInventory_transfersRowChangeEvent(CType(e.Row,ERP_GetBodyReportInventory_transfersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_GetBodyReportInventory_transfersRow(ByVal row As ERP_GetBodyReportInventory_transfersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ReportFixedAssetsGeneral = New ReportFixedAssetsGeneral()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_GetBodyReportInventory_transfersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_Finance_Get_DepreciationFixedAssetDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_Finance_Get_DepreciationFixedAssetRow)
        
        Private columnAnio As Global.System.Data.DataColumn
        
        Private columnDepreciacionAnual As Global.System.Data.DataColumn
        
        Private columnDepreciacionAcumulada As Global.System.Data.DataColumn
        
        Private columnValorEnLibros As Global.System.Data.DataColumn
        
        Private columnFechaDepreciacion As Global.System.Data.DataColumn
        
        Private columnisaproved As Global.System.Data.DataColumn
        
        Private columnID_FixedAssets As Global.System.Data.DataColumn
        
        Private columnId_Company_FK As Global.System.Data.DataColumn
        
        Private columnID_Provider_FK As Global.System.Data.DataColumn
        
        Private columnId_TypeCustomerCustomer_FK As Global.System.Data.DataColumn
        
        Private columnId_Depreciation_FK As Global.System.Data.DataColumn
        
        Private columnId_Location_FK As Global.System.Data.DataColumn
        
        Private columnId_ResponsiblePerson_FK As Global.System.Data.DataColumn
        
        Private columnName_FiexdAssets As Global.System.Data.DataColumn
        
        Private columnInvoice_numbers As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnNumber_Purchase As Global.System.Data.DataColumn
        
        Private columnDate_Acquisition As Global.System.Data.DataColumn
        
        Private columnResidualValue As Global.System.Data.DataColumn
        
        Private columnDate_Accounting As Global.System.Data.DataColumn
        
        Private columnAmount_Acquired As Global.System.Data.DataColumn
        
        Private columnAmount_AccumulatedDepreciation As Global.System.Data.DataColumn
        
        Private columnbalancebooks As Global.System.Data.DataColumn
        
        Private columnbalancebookdate As Global.System.Data.DataColumn
        
        Private columndateDepreciationBalanceBook As Global.System.Data.DataColumn
        
        Private columnUsersCreate As Global.System.Data.DataColumn
        
        Private columnDateCreate As Global.System.Data.DataColumn
        
        Private columnUsersModify As Global.System.Data.DataColumn
        
        Private columnDateModify As Global.System.Data.DataColumn
        
        Private columnActive As Global.System.Data.DataColumn
        
        Private columnID_FixedAssets_Sub As Global.System.Data.DataColumn
        
        Private columnId_FixedAssetsType As Global.System.Data.DataColumn
        
        Private columnID_Modelo As Global.System.Data.DataColumn
        
        Private columnID_Marca As Global.System.Data.DataColumn
        
        Private columnNumero_Serie As Global.System.Data.DataColumn
        
        Private columnID_Legacy As Global.System.Data.DataColumn
        
        Private columnObservations As Global.System.Data.DataColumn
        
        Private columnid_estado_FK As Global.System.Data.DataColumn
        
        Private columncolor As Global.System.Data.DataColumn
        
        Private columnmaterial As Global.System.Data.DataColumn
        
        Private columnisDepreciated As Global.System.Data.DataColumn
        
        Private columndateDepreciated As Global.System.Data.DataColumn
        
        Private columnCapitalizable As Global.System.Data.DataColumn
        
        Private columnResidualValueCalc As Global.System.Data.DataColumn
        
        Private columnAmount_AccumulatedDepreciationCal As Global.System.Data.DataColumn
        
        Private columntipoactivo As Global.System.Data.DataColumn
        
        Private columnName_Depreciation As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_Finance_Get_DepreciationFixedAsset"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DepreciacionAnualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepreciacionAnual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DepreciacionAcumuladaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepreciacionAcumulada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValorEnLibrosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorEnLibros
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaDepreciacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaDepreciacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isaprovedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisaproved
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_FixedAssetsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_FixedAssets
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_Company_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Company_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Provider_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Provider_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_TypeCustomerCustomer_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_TypeCustomerCustomer_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_Depreciation_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Depreciation_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_Location_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Location_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_ResponsiblePerson_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_ResponsiblePerson_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_FiexdAssetsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_FiexdAssets
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Invoice_numbersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoice_numbers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Number_PurchaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumber_Purchase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Date_AcquisitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Acquisition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResidualValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResidualValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Date_AccountingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Accounting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amount_AcquiredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount_Acquired
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amount_AccumulatedDepreciationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount_AccumulatedDepreciation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property balancebooksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbalancebooks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property balancebookdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbalancebookdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dateDepreciationBalanceBookColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndateDepreciationBalanceBook
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UsersCreateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsersCreate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateCreateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateCreate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UsersModifyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsersModify
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateModifyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateModify
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActive
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_FixedAssets_SubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_FixedAssets_Sub
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_FixedAssetsTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_FixedAssetsType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_ModeloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Modelo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_MarcaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Marca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Numero_SerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumero_Serie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_LegacyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Legacy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ObservationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_estado_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_estado_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property colorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncolor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property materialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaterial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isDepreciatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisDepreciated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dateDepreciatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndateDepreciated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CapitalizableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCapitalizable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResidualValueCalcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResidualValueCalc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amount_AccumulatedDepreciationCalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount_AccumulatedDepreciationCal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tipoactivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipoactivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_DepreciationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Depreciation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_Finance_Get_DepreciationFixedAssetRow
            Get
                Return CType(Me.Rows(index),ERP_Finance_Get_DepreciationFixedAssetRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Get_DepreciationFixedAssetRowChanging As ERP_Finance_Get_DepreciationFixedAssetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Get_DepreciationFixedAssetRowChanged As ERP_Finance_Get_DepreciationFixedAssetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Get_DepreciationFixedAssetRowDeleting As ERP_Finance_Get_DepreciationFixedAssetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Get_DepreciationFixedAssetRowDeleted As ERP_Finance_Get_DepreciationFixedAssetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_Finance_Get_DepreciationFixedAssetRow(ByVal row As ERP_Finance_Get_DepreciationFixedAssetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_Finance_Get_DepreciationFixedAssetRow( _
                    ByVal Anio As String,  _
                    ByVal DepreciacionAnual As Decimal,  _
                    ByVal DepreciacionAcumulada As Decimal,  _
                    ByVal ValorEnLibros As Decimal,  _
                    ByVal FechaDepreciacion As String,  _
                    ByVal isaproved As Integer,  _
                    ByVal Id_Company_FK As Long,  _
                    ByVal ID_Provider_FK As Long,  _
                    ByVal Id_TypeCustomerCustomer_FK As Long,  _
                    ByVal Id_Depreciation_FK As Long,  _
                    ByVal Id_Location_FK As Long,  _
                    ByVal Id_ResponsiblePerson_FK As Long,  _
                    ByVal Name_FiexdAssets As String,  _
                    ByVal Invoice_numbers As String,  _
                    ByVal Description As String,  _
                    ByVal Number_Purchase As String,  _
                    ByVal Date_Acquisition As Date,  _
                    ByVal ResidualValue As Decimal,  _
                    ByVal Date_Accounting As Date,  _
                    ByVal Amount_Acquired As Decimal,  _
                    ByVal Amount_AccumulatedDepreciation As Decimal,  _
                    ByVal balancebooks As Decimal,  _
                    ByVal balancebookdate As Date,  _
                    ByVal dateDepreciationBalanceBook As Date,  _
                    ByVal UsersCreate As String,  _
                    ByVal DateCreate As Date,  _
                    ByVal UsersModify As String,  _
                    ByVal DateModify As Date,  _
                    ByVal Active As Boolean,  _
                    ByVal ID_FixedAssets_Sub As Long,  _
                    ByVal Id_FixedAssetsType As Long,  _
                    ByVal ID_Modelo As Long,  _
                    ByVal ID_Marca As Long,  _
                    ByVal Numero_Serie As String,  _
                    ByVal ID_Legacy As String,  _
                    ByVal Observations As String,  _
                    ByVal id_estado_FK As Integer,  _
                    ByVal color As Long,  _
                    ByVal material As Long,  _
                    ByVal isDepreciated As Boolean,  _
                    ByVal dateDepreciated As Date,  _
                    ByVal Capitalizable As Boolean,  _
                    ByVal ResidualValueCalc As Decimal,  _
                    ByVal Amount_AccumulatedDepreciationCal As Decimal,  _
                    ByVal tipoactivo As String,  _
                    ByVal Name_Depreciation As String) As ERP_Finance_Get_DepreciationFixedAssetRow
            Dim rowERP_Finance_Get_DepreciationFixedAssetRow As ERP_Finance_Get_DepreciationFixedAssetRow = CType(Me.NewRow,ERP_Finance_Get_DepreciationFixedAssetRow)
            Dim columnValuesArray() As Object = New Object() {Anio, DepreciacionAnual, DepreciacionAcumulada, ValorEnLibros, FechaDepreciacion, isaproved, Nothing, Id_Company_FK, ID_Provider_FK, Id_TypeCustomerCustomer_FK, Id_Depreciation_FK, Id_Location_FK, Id_ResponsiblePerson_FK, Name_FiexdAssets, Invoice_numbers, Description, Number_Purchase, Date_Acquisition, ResidualValue, Date_Accounting, Amount_Acquired, Amount_AccumulatedDepreciation, balancebooks, balancebookdate, dateDepreciationBalanceBook, UsersCreate, DateCreate, UsersModify, DateModify, Active, ID_FixedAssets_Sub, Id_FixedAssetsType, ID_Modelo, ID_Marca, Numero_Serie, ID_Legacy, Observations, id_estado_FK, color, material, isDepreciated, dateDepreciated, Capitalizable, ResidualValueCalc, Amount_AccumulatedDepreciationCal, tipoactivo, Name_Depreciation}
            rowERP_Finance_Get_DepreciationFixedAssetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_Finance_Get_DepreciationFixedAssetRow)
            Return rowERP_Finance_Get_DepreciationFixedAssetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID_FixedAssets(ByVal ID_FixedAssets As Long) As ERP_Finance_Get_DepreciationFixedAssetRow
            Return CType(Me.Rows.Find(New Object() {ID_FixedAssets}),ERP_Finance_Get_DepreciationFixedAssetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_Finance_Get_DepreciationFixedAssetDataTable = CType(MyBase.Clone,ERP_Finance_Get_DepreciationFixedAssetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_Finance_Get_DepreciationFixedAssetDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAnio = MyBase.Columns("Anio")
            Me.columnDepreciacionAnual = MyBase.Columns("DepreciacionAnual")
            Me.columnDepreciacionAcumulada = MyBase.Columns("DepreciacionAcumulada")
            Me.columnValorEnLibros = MyBase.Columns("ValorEnLibros")
            Me.columnFechaDepreciacion = MyBase.Columns("FechaDepreciacion")
            Me.columnisaproved = MyBase.Columns("isaproved")
            Me.columnID_FixedAssets = MyBase.Columns("ID_FixedAssets")
            Me.columnId_Company_FK = MyBase.Columns("Id_Company_FK")
            Me.columnID_Provider_FK = MyBase.Columns("ID_Provider_FK")
            Me.columnId_TypeCustomerCustomer_FK = MyBase.Columns("Id_TypeCustomerCustomer_FK")
            Me.columnId_Depreciation_FK = MyBase.Columns("Id_Depreciation_FK")
            Me.columnId_Location_FK = MyBase.Columns("Id_Location_FK")
            Me.columnId_ResponsiblePerson_FK = MyBase.Columns("Id_ResponsiblePerson_FK")
            Me.columnName_FiexdAssets = MyBase.Columns("Name_FiexdAssets")
            Me.columnInvoice_numbers = MyBase.Columns("Invoice_numbers")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnNumber_Purchase = MyBase.Columns("Number_Purchase")
            Me.columnDate_Acquisition = MyBase.Columns("Date_Acquisition")
            Me.columnResidualValue = MyBase.Columns("ResidualValue")
            Me.columnDate_Accounting = MyBase.Columns("Date_Accounting")
            Me.columnAmount_Acquired = MyBase.Columns("Amount_Acquired")
            Me.columnAmount_AccumulatedDepreciation = MyBase.Columns("Amount_AccumulatedDepreciation")
            Me.columnbalancebooks = MyBase.Columns("balancebooks")
            Me.columnbalancebookdate = MyBase.Columns("balancebookdate")
            Me.columndateDepreciationBalanceBook = MyBase.Columns("dateDepreciationBalanceBook")
            Me.columnUsersCreate = MyBase.Columns("UsersCreate")
            Me.columnDateCreate = MyBase.Columns("DateCreate")
            Me.columnUsersModify = MyBase.Columns("UsersModify")
            Me.columnDateModify = MyBase.Columns("DateModify")
            Me.columnActive = MyBase.Columns("Active")
            Me.columnID_FixedAssets_Sub = MyBase.Columns("ID_FixedAssets_Sub")
            Me.columnId_FixedAssetsType = MyBase.Columns("Id_FixedAssetsType")
            Me.columnID_Modelo = MyBase.Columns("ID_Modelo")
            Me.columnID_Marca = MyBase.Columns("ID_Marca")
            Me.columnNumero_Serie = MyBase.Columns("Numero_Serie")
            Me.columnID_Legacy = MyBase.Columns("ID_Legacy")
            Me.columnObservations = MyBase.Columns("Observations")
            Me.columnid_estado_FK = MyBase.Columns("id_estado_FK")
            Me.columncolor = MyBase.Columns("color")
            Me.columnmaterial = MyBase.Columns("material")
            Me.columnisDepreciated = MyBase.Columns("isDepreciated")
            Me.columndateDepreciated = MyBase.Columns("dateDepreciated")
            Me.columnCapitalizable = MyBase.Columns("Capitalizable")
            Me.columnResidualValueCalc = MyBase.Columns("ResidualValueCalc")
            Me.columnAmount_AccumulatedDepreciationCal = MyBase.Columns("Amount_AccumulatedDepreciationCal")
            Me.columntipoactivo = MyBase.Columns("tipoactivo")
            Me.columnName_Depreciation = MyBase.Columns("Name_Depreciation")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAnio = New Global.System.Data.DataColumn("Anio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnio)
            Me.columnDepreciacionAnual = New Global.System.Data.DataColumn("DepreciacionAnual", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepreciacionAnual)
            Me.columnDepreciacionAcumulada = New Global.System.Data.DataColumn("DepreciacionAcumulada", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepreciacionAcumulada)
            Me.columnValorEnLibros = New Global.System.Data.DataColumn("ValorEnLibros", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorEnLibros)
            Me.columnFechaDepreciacion = New Global.System.Data.DataColumn("FechaDepreciacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaDepreciacion)
            Me.columnisaproved = New Global.System.Data.DataColumn("isaproved", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisaproved)
            Me.columnID_FixedAssets = New Global.System.Data.DataColumn("ID_FixedAssets", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_FixedAssets)
            Me.columnId_Company_FK = New Global.System.Data.DataColumn("Id_Company_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Company_FK)
            Me.columnID_Provider_FK = New Global.System.Data.DataColumn("ID_Provider_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Provider_FK)
            Me.columnId_TypeCustomerCustomer_FK = New Global.System.Data.DataColumn("Id_TypeCustomerCustomer_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_TypeCustomerCustomer_FK)
            Me.columnId_Depreciation_FK = New Global.System.Data.DataColumn("Id_Depreciation_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Depreciation_FK)
            Me.columnId_Location_FK = New Global.System.Data.DataColumn("Id_Location_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Location_FK)
            Me.columnId_ResponsiblePerson_FK = New Global.System.Data.DataColumn("Id_ResponsiblePerson_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_ResponsiblePerson_FK)
            Me.columnName_FiexdAssets = New Global.System.Data.DataColumn("Name_FiexdAssets", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_FiexdAssets)
            Me.columnInvoice_numbers = New Global.System.Data.DataColumn("Invoice_numbers", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoice_numbers)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnNumber_Purchase = New Global.System.Data.DataColumn("Number_Purchase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumber_Purchase)
            Me.columnDate_Acquisition = New Global.System.Data.DataColumn("Date_Acquisition", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Acquisition)
            Me.columnResidualValue = New Global.System.Data.DataColumn("ResidualValue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResidualValue)
            Me.columnDate_Accounting = New Global.System.Data.DataColumn("Date_Accounting", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Accounting)
            Me.columnAmount_Acquired = New Global.System.Data.DataColumn("Amount_Acquired", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount_Acquired)
            Me.columnAmount_AccumulatedDepreciation = New Global.System.Data.DataColumn("Amount_AccumulatedDepreciation", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount_AccumulatedDepreciation)
            Me.columnbalancebooks = New Global.System.Data.DataColumn("balancebooks", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbalancebooks)
            Me.columnbalancebookdate = New Global.System.Data.DataColumn("balancebookdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbalancebookdate)
            Me.columndateDepreciationBalanceBook = New Global.System.Data.DataColumn("dateDepreciationBalanceBook", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndateDepreciationBalanceBook)
            Me.columnUsersCreate = New Global.System.Data.DataColumn("UsersCreate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsersCreate)
            Me.columnDateCreate = New Global.System.Data.DataColumn("DateCreate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateCreate)
            Me.columnUsersModify = New Global.System.Data.DataColumn("UsersModify", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsersModify)
            Me.columnDateModify = New Global.System.Data.DataColumn("DateModify", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateModify)
            Me.columnActive = New Global.System.Data.DataColumn("Active", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActive)
            Me.columnID_FixedAssets_Sub = New Global.System.Data.DataColumn("ID_FixedAssets_Sub", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_FixedAssets_Sub)
            Me.columnId_FixedAssetsType = New Global.System.Data.DataColumn("Id_FixedAssetsType", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_FixedAssetsType)
            Me.columnID_Modelo = New Global.System.Data.DataColumn("ID_Modelo", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Modelo)
            Me.columnID_Marca = New Global.System.Data.DataColumn("ID_Marca", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Marca)
            Me.columnNumero_Serie = New Global.System.Data.DataColumn("Numero_Serie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumero_Serie)
            Me.columnID_Legacy = New Global.System.Data.DataColumn("ID_Legacy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Legacy)
            Me.columnObservations = New Global.System.Data.DataColumn("Observations", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservations)
            Me.columnid_estado_FK = New Global.System.Data.DataColumn("id_estado_FK", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_estado_FK)
            Me.columncolor = New Global.System.Data.DataColumn("color", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncolor)
            Me.columnmaterial = New Global.System.Data.DataColumn("material", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaterial)
            Me.columnisDepreciated = New Global.System.Data.DataColumn("isDepreciated", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisDepreciated)
            Me.columndateDepreciated = New Global.System.Data.DataColumn("dateDepreciated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndateDepreciated)
            Me.columnCapitalizable = New Global.System.Data.DataColumn("Capitalizable", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCapitalizable)
            Me.columnResidualValueCalc = New Global.System.Data.DataColumn("ResidualValueCalc", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResidualValueCalc)
            Me.columnAmount_AccumulatedDepreciationCal = New Global.System.Data.DataColumn("Amount_AccumulatedDepreciationCal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount_AccumulatedDepreciationCal)
            Me.columntipoactivo = New Global.System.Data.DataColumn("tipoactivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipoactivo)
            Me.columnName_Depreciation = New Global.System.Data.DataColumn("Name_Depreciation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Depreciation)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_FixedAssets}, true))
            Me.columnAnio.ReadOnly = true
            Me.columnAnio.MaxLength = 15
            Me.columnDepreciacionAnual.ReadOnly = true
            Me.columnDepreciacionAcumulada.ReadOnly = true
            Me.columnValorEnLibros.ReadOnly = true
            Me.columnFechaDepreciacion.ReadOnly = true
            Me.columnFechaDepreciacion.MaxLength = 15
            Me.columnisaproved.ReadOnly = true
            Me.columnID_FixedAssets.AutoIncrement = true
            Me.columnID_FixedAssets.AutoIncrementSeed = -1
            Me.columnID_FixedAssets.AutoIncrementStep = -1
            Me.columnID_FixedAssets.AllowDBNull = false
            Me.columnID_FixedAssets.ReadOnly = true
            Me.columnID_FixedAssets.Unique = true
            Me.columnName_FiexdAssets.MaxLength = 50
            Me.columnInvoice_numbers.MaxLength = 50
            Me.columnDescription.MaxLength = 2147483647
            Me.columnNumber_Purchase.MaxLength = 50
            Me.columnUsersCreate.MaxLength = 50
            Me.columnUsersModify.MaxLength = 50
            Me.columnNumero_Serie.MaxLength = 150
            Me.columnID_Legacy.MaxLength = 50
            Me.columnObservations.MaxLength = 100
            Me.columnResidualValueCalc.ReadOnly = true
            Me.columnAmount_AccumulatedDepreciationCal.ReadOnly = true
            Me.columntipoactivo.MaxLength = 50
            Me.columnName_Depreciation.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_Finance_Get_DepreciationFixedAssetRow() As ERP_Finance_Get_DepreciationFixedAssetRow
            Return CType(Me.NewRow,ERP_Finance_Get_DepreciationFixedAssetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_Finance_Get_DepreciationFixedAssetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_Finance_Get_DepreciationFixedAssetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_Finance_Get_DepreciationFixedAssetRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Get_DepreciationFixedAssetRowChanged(Me, New ERP_Finance_Get_DepreciationFixedAssetRowChangeEvent(CType(e.Row,ERP_Finance_Get_DepreciationFixedAssetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_Finance_Get_DepreciationFixedAssetRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Get_DepreciationFixedAssetRowChanging(Me, New ERP_Finance_Get_DepreciationFixedAssetRowChangeEvent(CType(e.Row,ERP_Finance_Get_DepreciationFixedAssetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_Finance_Get_DepreciationFixedAssetRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Get_DepreciationFixedAssetRowDeleted(Me, New ERP_Finance_Get_DepreciationFixedAssetRowChangeEvent(CType(e.Row,ERP_Finance_Get_DepreciationFixedAssetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_Finance_Get_DepreciationFixedAssetRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Get_DepreciationFixedAssetRowDeleting(Me, New ERP_Finance_Get_DepreciationFixedAssetRowChangeEvent(CType(e.Row,ERP_Finance_Get_DepreciationFixedAssetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_Finance_Get_DepreciationFixedAssetRow(ByVal row As ERP_Finance_Get_DepreciationFixedAssetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ReportFixedAssetsGeneral = New ReportFixedAssetsGeneral()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_Finance_Get_DepreciationFixedAssetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SP_ERP_Inventory_ReporteAmortizacionDataTable
        Inherits Global.System.Data.TypedTableBase(Of SP_ERP_Inventory_ReporteAmortizacionRow)
        
        Private columnDate_Acquisition As Global.System.Data.DataColumn
        
        Private columnName_FixedAssetsType As Global.System.Data.DataColumn
        
        Private columnNumber_Purchase As Global.System.Data.DataColumn
        
        Private columnName_FiexdAssets As Global.System.Data.DataColumn
        
        Private columnAmount_Acquired As Global.System.Data.DataColumn
        
        Private columnVidaUtil As Global.System.Data.DataColumn
        
        Private columndateAmortizacion As Global.System.Data.DataColumn
        
        Private columnMontoAmortizado As Global.System.Data.DataColumn
        
        Private columndateCreateAmortization As Global.System.Data.DataColumn
        
        Private columncuotasemestral As Global.System.Data.DataColumn
        
        Private columnValorLibros As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SP_ERP_Inventory_ReporteAmortizacion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Date_AcquisitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Acquisition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_FixedAssetsTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_FixedAssetsType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Number_PurchaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumber_Purchase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_FiexdAssetsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_FiexdAssets
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amount_AcquiredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount_Acquired
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VidaUtilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVidaUtil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dateAmortizacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndateAmortizacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MontoAmortizadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMontoAmortizado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dateCreateAmortizationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndateCreateAmortization
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cuotasemestralColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncuotasemestral
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValorLibrosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorLibros
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SP_ERP_Inventory_ReporteAmortizacionRow
            Get
                Return CType(Me.Rows(index),SP_ERP_Inventory_ReporteAmortizacionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ERP_Inventory_ReporteAmortizacionRowChanging As SP_ERP_Inventory_ReporteAmortizacionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ERP_Inventory_ReporteAmortizacionRowChanged As SP_ERP_Inventory_ReporteAmortizacionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ERP_Inventory_ReporteAmortizacionRowDeleting As SP_ERP_Inventory_ReporteAmortizacionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ERP_Inventory_ReporteAmortizacionRowDeleted As SP_ERP_Inventory_ReporteAmortizacionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSP_ERP_Inventory_ReporteAmortizacionRow(ByVal row As SP_ERP_Inventory_ReporteAmortizacionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSP_ERP_Inventory_ReporteAmortizacionRow(ByVal Date_Acquisition As Date, ByVal Name_FixedAssetsType As String, ByVal Number_Purchase As String, ByVal Name_FiexdAssets As String, ByVal Amount_Acquired As Decimal, ByVal VidaUtil As Integer, ByVal dateAmortizacion As String, ByVal MontoAmortizado As Decimal, ByVal dateCreateAmortization As Date, ByVal cuotasemestral As Decimal, ByVal ValorLibros As Decimal) As SP_ERP_Inventory_ReporteAmortizacionRow
            Dim rowSP_ERP_Inventory_ReporteAmortizacionRow As SP_ERP_Inventory_ReporteAmortizacionRow = CType(Me.NewRow,SP_ERP_Inventory_ReporteAmortizacionRow)
            Dim columnValuesArray() As Object = New Object() {Date_Acquisition, Name_FixedAssetsType, Number_Purchase, Name_FiexdAssets, Amount_Acquired, VidaUtil, dateAmortizacion, MontoAmortizado, dateCreateAmortization, cuotasemestral, ValorLibros}
            rowSP_ERP_Inventory_ReporteAmortizacionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSP_ERP_Inventory_ReporteAmortizacionRow)
            Return rowSP_ERP_Inventory_ReporteAmortizacionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SP_ERP_Inventory_ReporteAmortizacionDataTable = CType(MyBase.Clone,SP_ERP_Inventory_ReporteAmortizacionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SP_ERP_Inventory_ReporteAmortizacionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDate_Acquisition = MyBase.Columns("Date_Acquisition")
            Me.columnName_FixedAssetsType = MyBase.Columns("Name_FixedAssetsType")
            Me.columnNumber_Purchase = MyBase.Columns("Number_Purchase")
            Me.columnName_FiexdAssets = MyBase.Columns("Name_FiexdAssets")
            Me.columnAmount_Acquired = MyBase.Columns("Amount_Acquired")
            Me.columnVidaUtil = MyBase.Columns("VidaUtil")
            Me.columndateAmortizacion = MyBase.Columns("dateAmortizacion")
            Me.columnMontoAmortizado = MyBase.Columns("MontoAmortizado")
            Me.columndateCreateAmortization = MyBase.Columns("dateCreateAmortization")
            Me.columncuotasemestral = MyBase.Columns("cuotasemestral")
            Me.columnValorLibros = MyBase.Columns("ValorLibros")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDate_Acquisition = New Global.System.Data.DataColumn("Date_Acquisition", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Acquisition)
            Me.columnName_FixedAssetsType = New Global.System.Data.DataColumn("Name_FixedAssetsType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_FixedAssetsType)
            Me.columnNumber_Purchase = New Global.System.Data.DataColumn("Number_Purchase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumber_Purchase)
            Me.columnName_FiexdAssets = New Global.System.Data.DataColumn("Name_FiexdAssets", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_FiexdAssets)
            Me.columnAmount_Acquired = New Global.System.Data.DataColumn("Amount_Acquired", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount_Acquired)
            Me.columnVidaUtil = New Global.System.Data.DataColumn("VidaUtil", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVidaUtil)
            Me.columndateAmortizacion = New Global.System.Data.DataColumn("dateAmortizacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndateAmortizacion)
            Me.columnMontoAmortizado = New Global.System.Data.DataColumn("MontoAmortizado", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMontoAmortizado)
            Me.columndateCreateAmortization = New Global.System.Data.DataColumn("dateCreateAmortization", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndateCreateAmortization)
            Me.columncuotasemestral = New Global.System.Data.DataColumn("cuotasemestral", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuotasemestral)
            Me.columnValorLibros = New Global.System.Data.DataColumn("ValorLibros", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorLibros)
            Me.columnName_FixedAssetsType.MaxLength = 50
            Me.columnNumber_Purchase.MaxLength = 50
            Me.columnName_FiexdAssets.MaxLength = 50
            Me.columndateAmortizacion.MaxLength = 10
            Me.columncuotasemestral.ReadOnly = true
            Me.columnValorLibros.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSP_ERP_Inventory_ReporteAmortizacionRow() As SP_ERP_Inventory_ReporteAmortizacionRow
            Return CType(Me.NewRow,SP_ERP_Inventory_ReporteAmortizacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SP_ERP_Inventory_ReporteAmortizacionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SP_ERP_Inventory_ReporteAmortizacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SP_ERP_Inventory_ReporteAmortizacionRowChangedEvent) Is Nothing) Then
                RaiseEvent SP_ERP_Inventory_ReporteAmortizacionRowChanged(Me, New SP_ERP_Inventory_ReporteAmortizacionRowChangeEvent(CType(e.Row,SP_ERP_Inventory_ReporteAmortizacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SP_ERP_Inventory_ReporteAmortizacionRowChangingEvent) Is Nothing) Then
                RaiseEvent SP_ERP_Inventory_ReporteAmortizacionRowChanging(Me, New SP_ERP_Inventory_ReporteAmortizacionRowChangeEvent(CType(e.Row,SP_ERP_Inventory_ReporteAmortizacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SP_ERP_Inventory_ReporteAmortizacionRowDeletedEvent) Is Nothing) Then
                RaiseEvent SP_ERP_Inventory_ReporteAmortizacionRowDeleted(Me, New SP_ERP_Inventory_ReporteAmortizacionRowChangeEvent(CType(e.Row,SP_ERP_Inventory_ReporteAmortizacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SP_ERP_Inventory_ReporteAmortizacionRowDeletingEvent) Is Nothing) Then
                RaiseEvent SP_ERP_Inventory_ReporteAmortizacionRowDeleting(Me, New SP_ERP_Inventory_ReporteAmortizacionRowChangeEvent(CType(e.Row,SP_ERP_Inventory_ReporteAmortizacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSP_ERP_Inventory_ReporteAmortizacionRow(ByVal row As SP_ERP_Inventory_ReporteAmortizacionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ReportFixedAssetsGeneral = New ReportFixedAssetsGeneral()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SP_ERP_Inventory_ReporteAmortizacionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_FixedAssets_SP_GetGeneralReportRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_FixedAssets_SP_GetGeneralReport As ERP_FixedAssets_SP_GetGeneralReportDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_FixedAssets_SP_GetGeneralReport = CType(Me.Table,ERP_FixedAssets_SP_GetGeneralReportDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Codigo() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.CodigoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Codigo' de la tabla 'ERP_FixedAssets_SP_GetGeneralReport'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.CodigoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumeroSerie() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.NumeroSerieColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroSerie' de la tabla 'ERP_FixedAssets_SP_GetGeneralRe"& _ 
                            "port' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.NumeroSerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UbicacionSecundaria() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionSecundariaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UbicacionSecundaria' de la tabla 'ERP_FixedAssets_SP_GetG"& _ 
                            "eneralReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionSecundariaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UbicacionPrimaria() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionPrimariaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UbicacionPrimaria' de la tabla 'ERP_FixedAssets_SP_GetGen"& _ 
                            "eralReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionPrimariaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ValorAdquisicion() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ValorAdquisicionColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ValorAdquisicion' de la tabla 'ERP_FixedAssets_SP_GetGene"& _ 
                            "ralReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ValorAdquisicionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UnidadOrganizativa() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UnidadOrganizativaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UnidadOrganizativa' de la tabla 'ERP_FixedAssets_SP_GetGe"& _ 
                            "neralReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UnidadOrganizativaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bien() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.BienColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Bien' de la tabla 'ERP_FixedAssets_SP_GetGeneralReport' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.BienColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Observaciones() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ObservacionesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Observaciones' de la tabla 'ERP_FixedAssets_SP_GetGeneral"& _ 
                            "Report' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ObservacionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Marca() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.MarcaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Marca' de la tabla 'ERP_FixedAssets_SP_GetGeneralReport' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.MarcaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Modelo() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ModeloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Modelo' de la tabla 'ERP_FixedAssets_SP_GetGeneralReport'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ModeloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Clasificacion() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ClasificacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Clasificacion' de la tabla 'ERP_FixedAssets_SP_GetGeneral"& _ 
                            "Report' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ClasificacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubClasificacion() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.SubClasificacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SubClasificacion' de la tabla 'ERP_FixedAssets_SP_GetGene"& _ 
                            "ralReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.SubClasificacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaAdquisicion() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.FechaAdquisicionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaAdquisicion' de la tabla 'ERP_FixedAssets_SP_GetGene"& _ 
                            "ralReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.FechaAdquisicionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UbicacionTemporal() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionTemporalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UbicacionTemporal' de la tabla 'ERP_FixedAssets_SP_GetGen"& _ 
                            "eralReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionTemporalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumeroDocumentoCompra() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.NumeroDocumentoCompraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroDocumentoCompra' de la tabla 'ERP_FixedAssets_SP_Ge"& _ 
                            "tGeneralReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.NumeroDocumentoCompraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Responsable() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ResponsableColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Responsable' de la tabla 'ERP_FixedAssets_SP_GetGeneralRe"& _ 
                            "port' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ResponsableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Proveedor() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ProveedorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Proveedor' de la tabla 'ERP_FixedAssets_SP_GetGeneralRepo"& _ 
                            "rt' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ProveedorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fecha_Caducidad() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.Fecha_CaducidadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Fecha_Caducidad' de la tabla 'ERP_FixedAssets_SP_GetGener"& _ 
                            "alReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.Fecha_CaducidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Forma_Adquisicion() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.Forma_AdquisicionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Forma_Adquisicion' de la tabla 'ERP_FixedAssets_SP_GetGen"& _ 
                            "eralReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.Forma_AdquisicionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property material() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.materialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'material' de la tabla 'ERP_FixedAssets_SP_GetGeneralRepor"& _ 
                            "t' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.materialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property color() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.colorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'color' de la tabla 'ERP_FixedAssets_SP_GetGeneralReport' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.colorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property descargado() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.descargadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'descargado' de la tabla 'ERP_FixedAssets_SP_GetGeneralRep"& _ 
                            "ort' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.descargadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fecha_descargo() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.fecha_descargoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_descargo' de la tabla 'ERP_FixedAssets_SP_GetGenera"& _ 
                            "lReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.fecha_descargoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property descripcion_descargo() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.descripcion_descargoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'descripcion_descargo' de la tabla 'ERP_FixedAssets_SP_Get"& _ 
                            "GeneralReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.descripcion_descargoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nombrestado() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.nombrestadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombrestado' de la tabla 'ERP_FixedAssets_SP_GetGeneralRe"& _ 
                            "port' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.nombrestadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodBarras() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.CodBarrasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodBarras' de la tabla 'ERP_FixedAssets_SP_GetGeneralRepo"& _ 
                            "rt' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.CodBarrasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Invoice_numbers() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.Invoice_numbersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Invoice_numbers' de la tabla 'ERP_FixedAssets_SP_GetGener"& _ 
                            "alReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.Invoice_numbersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCodigoNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.CodigoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCodigoNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.CodigoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumeroSerieNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.NumeroSerieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumeroSerieNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.NumeroSerieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUbicacionSecundariaNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionSecundariaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUbicacionSecundariaNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionSecundariaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUbicacionPrimariaNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionPrimariaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUbicacionPrimariaNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionPrimariaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsValorAdquisicionNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.ValorAdquisicionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetValorAdquisicionNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ValorAdquisicionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnidadOrganizativaNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.UnidadOrganizativaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnidadOrganizativaNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UnidadOrganizativaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBienNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.BienColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBienNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.BienColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsObservacionesNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.ObservacionesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetObservacionesNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ObservacionesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMarcaNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.MarcaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMarcaNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.MarcaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModeloNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.ModeloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModeloNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ModeloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClasificacionNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.ClasificacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClasificacionNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ClasificacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubClasificacionNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.SubClasificacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubClasificacionNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.SubClasificacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaAdquisicionNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.FechaAdquisicionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaAdquisicionNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.FechaAdquisicionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUbicacionTemporalNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionTemporalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUbicacionTemporalNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.UbicacionTemporalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumeroDocumentoCompraNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.NumeroDocumentoCompraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumeroDocumentoCompraNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.NumeroDocumentoCompraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResponsableNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.ResponsableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResponsableNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ResponsableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProveedorNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.ProveedorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProveedorNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.ProveedorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFecha_CaducidadNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.Fecha_CaducidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFecha_CaducidadNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.Fecha_CaducidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForma_AdquisicionNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.Forma_AdquisicionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForma_AdquisicionNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.Forma_AdquisicionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaterialNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.materialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaterialNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.materialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscolorNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.colorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcolorNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.colorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdescargadoNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.descargadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdescargadoNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.descargadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isfecha_descargoNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.fecha_descargoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setfecha_descargoNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.fecha_descargoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdescripcion_descargoNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.descripcion_descargoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdescripcion_descargoNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.descripcion_descargoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnombrestadoNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.nombrestadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnombrestadoNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.nombrestadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCodBarrasNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.CodBarrasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCodBarrasNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.CodBarrasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInvoice_numbersNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetGeneralReport.Invoice_numbersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInvoice_numbersNull()
            Me(Me.tableERP_FixedAssets_SP_GetGeneralReport.Invoice_numbersColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_FixedAssets_SP_GetReportTypeAssetsRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_FixedAssets_SP_GetReportTypeAssets As ERP_FixedAssets_SP_GetReportTypeAssetsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_FixedAssets_SP_GetReportTypeAssets = CType(Me.Table,ERP_FixedAssets_SP_GetReportTypeAssetsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nombre() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.nombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'nombre' de la tabla 'ERP_FixedAssets_SP_GetReportTypeAsse"& _ 
                            "ts' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.nombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Canttotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.CanttotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Canttotal' de la tabla 'ERP_FixedAssets_SP_GetReportTypeA"& _ 
                            "ssets' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.CanttotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cantActivos() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.cantActivosColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cantActivos' de la tabla 'ERP_FixedAssets_SP_GetReportTyp"& _ 
                            "eAssets' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.cantActivosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnombreNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.nombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnombreNull()
            Me(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.nombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCanttotalNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.CanttotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCanttotalNull()
            Me(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.CanttotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscantActivosNull() As Boolean
            Return Me.IsNull(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.cantActivosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcantActivosNull()
            Me(Me.tableERP_FixedAssets_SP_GetReportTypeAssets.cantActivosColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_GetBodyReportInventory_transfersRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_GetBodyReportInventory_transfers As ERP_GetBodyReportInventory_transfersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_GetBodyReportInventory_transfers = CType(Me.Table,ERP_GetBodyReportInventory_transfersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Number_Purchase() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_GetBodyReportInventory_transfers.Number_PurchaseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Number_Purchase' de la tabla 'ERP_GetBodyReportInventory_"& _ 
                            "transfers' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_GetBodyReportInventory_transfers.Number_PurchaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Clasificacion() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_GetBodyReportInventory_transfers.ClasificacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Clasificacion' de la tabla 'ERP_GetBodyReportInventory_tr"& _ 
                            "ansfers' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_GetBodyReportInventory_transfers.ClasificacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubClasificacion() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_GetBodyReportInventory_transfers.SubClasificacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SubClasificacion' de la tabla 'ERP_GetBodyReportInventory"& _ 
                            "_transfers' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_GetBodyReportInventory_transfers.SubClasificacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActivoPasado() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_GetBodyReportInventory_transfers.ActivoPasadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ActivoPasado' de la tabla 'ERP_GetBodyReportInventory_tra"& _ 
                            "nsfers' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_GetBodyReportInventory_transfers.ActivoPasadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Antiguodueno() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_GetBodyReportInventory_transfers.AntiguoduenoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Antiguodueno' de la tabla 'ERP_GetBodyReportInventory_tra"& _ 
                            "nsfers' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_GetBodyReportInventory_transfers.AntiguoduenoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Nuevodueno() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_GetBodyReportInventory_transfers.NuevoduenoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Nuevodueno' de la tabla 'ERP_GetBodyReportInventory_trans"& _ 
                            "fers' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_GetBodyReportInventory_transfers.NuevoduenoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fechatrasferencia() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_GetBodyReportInventory_transfers.FechatrasferenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Fechatrasferencia' de la tabla 'ERP_GetBodyReportInventor"& _ 
                            "y_transfers' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_GetBodyReportInventory_transfers.FechatrasferenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fechaDesde() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_GetBodyReportInventory_transfers.fechaDesdeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fechaDesde' de la tabla 'ERP_GetBodyReportInventory_trans"& _ 
                            "fers' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_GetBodyReportInventory_transfers.fechaDesdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fechaHasta() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_GetBodyReportInventory_transfers.fechaHastaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fechaHasta' de la tabla 'ERP_GetBodyReportInventory_trans"& _ 
                            "fers' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_GetBodyReportInventory_transfers.fechaHastaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _Motivo_Transferencia() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_GetBodyReportInventory_transfers._Motivo_TransferenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Motivo_Transferencia' de la tabla 'ERP_GetBodyReportInven"& _ 
                            "tory_transfers' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_GetBodyReportInventory_transfers._Motivo_TransferenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumber_PurchaseNull() As Boolean
            Return Me.IsNull(Me.tableERP_GetBodyReportInventory_transfers.Number_PurchaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumber_PurchaseNull()
            Me(Me.tableERP_GetBodyReportInventory_transfers.Number_PurchaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClasificacionNull() As Boolean
            Return Me.IsNull(Me.tableERP_GetBodyReportInventory_transfers.ClasificacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClasificacionNull()
            Me(Me.tableERP_GetBodyReportInventory_transfers.ClasificacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubClasificacionNull() As Boolean
            Return Me.IsNull(Me.tableERP_GetBodyReportInventory_transfers.SubClasificacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubClasificacionNull()
            Me(Me.tableERP_GetBodyReportInventory_transfers.SubClasificacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActivoPasadoNull() As Boolean
            Return Me.IsNull(Me.tableERP_GetBodyReportInventory_transfers.ActivoPasadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActivoPasadoNull()
            Me(Me.tableERP_GetBodyReportInventory_transfers.ActivoPasadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAntiguoduenoNull() As Boolean
            Return Me.IsNull(Me.tableERP_GetBodyReportInventory_transfers.AntiguoduenoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAntiguoduenoNull()
            Me(Me.tableERP_GetBodyReportInventory_transfers.AntiguoduenoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNuevoduenoNull() As Boolean
            Return Me.IsNull(Me.tableERP_GetBodyReportInventory_transfers.NuevoduenoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNuevoduenoNull()
            Me(Me.tableERP_GetBodyReportInventory_transfers.NuevoduenoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechatrasferenciaNull() As Boolean
            Return Me.IsNull(Me.tableERP_GetBodyReportInventory_transfers.FechatrasferenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechatrasferenciaNull()
            Me(Me.tableERP_GetBodyReportInventory_transfers.FechatrasferenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfechaDesdeNull() As Boolean
            Return Me.IsNull(Me.tableERP_GetBodyReportInventory_transfers.fechaDesdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfechaDesdeNull()
            Me(Me.tableERP_GetBodyReportInventory_transfers.fechaDesdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfechaHastaNull() As Boolean
            Return Me.IsNull(Me.tableERP_GetBodyReportInventory_transfers.fechaHastaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfechaHastaNull()
            Me(Me.tableERP_GetBodyReportInventory_transfers.fechaHastaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_Motivo_TransferenciaNull() As Boolean
            Return Me.IsNull(Me.tableERP_GetBodyReportInventory_transfers._Motivo_TransferenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_Motivo_TransferenciaNull()
            Me(Me.tableERP_GetBodyReportInventory_transfers._Motivo_TransferenciaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_Finance_Get_DepreciationFixedAssetRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_Finance_Get_DepreciationFixedAsset As ERP_Finance_Get_DepreciationFixedAssetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_Finance_Get_DepreciationFixedAsset = CType(Me.Table,ERP_Finance_Get_DepreciationFixedAssetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Anio() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.AnioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Anio' de la tabla 'ERP_Finance_Get_DepreciationFixedAsset"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.AnioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DepreciacionAnual() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DepreciacionAnualColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DepreciacionAnual' de la tabla 'ERP_Finance_Get_Depreciat"& _ 
                            "ionFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DepreciacionAnualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DepreciacionAcumulada() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DepreciacionAcumuladaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DepreciacionAcumulada' de la tabla 'ERP_Finance_Get_Depre"& _ 
                            "ciationFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DepreciacionAcumuladaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ValorEnLibros() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ValorEnLibrosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ValorEnLibros' de la tabla 'ERP_Finance_Get_DepreciationF"& _ 
                            "ixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ValorEnLibrosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FechaDepreciacion() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.FechaDepreciacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaDepreciacion' de la tabla 'ERP_Finance_Get_Depreciat"& _ 
                            "ionFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.FechaDepreciacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isaproved() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.isaprovedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'isaproved' de la tabla 'ERP_Finance_Get_DepreciationFixed"& _ 
                            "Asset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.isaprovedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_FixedAssets() As Long
            Get
                Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_FixedAssetsColumn),Long)
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_FixedAssetsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_Company_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Company_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id_Company_FK' de la tabla 'ERP_Finance_Get_DepreciationF"& _ 
                            "ixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Company_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Provider_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_Provider_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Provider_FK' de la tabla 'ERP_Finance_Get_Depreciation"& _ 
                            "FixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_Provider_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_TypeCustomerCustomer_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_TypeCustomerCustomer_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id_TypeCustomerCustomer_FK' de la tabla 'ERP_Finance_Get_"& _ 
                            "DepreciationFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_TypeCustomerCustomer_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_Depreciation_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Depreciation_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id_Depreciation_FK' de la tabla 'ERP_Finance_Get_Deprecia"& _ 
                            "tionFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Depreciation_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_Location_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Location_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id_Location_FK' de la tabla 'ERP_Finance_Get_Depreciation"& _ 
                            "FixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Location_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_ResponsiblePerson_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_ResponsiblePerson_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id_ResponsiblePerson_FK' de la tabla 'ERP_Finance_Get_Dep"& _ 
                            "reciationFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_ResponsiblePerson_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_FiexdAssets() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Name_FiexdAssetsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Name_FiexdAssets' de la tabla 'ERP_Finance_Get_Depreciati"& _ 
                            "onFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Name_FiexdAssetsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Invoice_numbers() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Invoice_numbersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Invoice_numbers' de la tabla 'ERP_Finance_Get_Depreciatio"& _ 
                            "nFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Invoice_numbersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Description' de la tabla 'ERP_Finance_Get_DepreciationFix"& _ 
                            "edAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Number_Purchase() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Number_PurchaseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Number_Purchase' de la tabla 'ERP_Finance_Get_Depreciatio"& _ 
                            "nFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Number_PurchaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Date_Acquisition() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Date_AcquisitionColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Date_Acquisition' de la tabla 'ERP_Finance_Get_Depreciati"& _ 
                            "onFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Date_AcquisitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ResidualValue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ResidualValueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ResidualValue' de la tabla 'ERP_Finance_Get_DepreciationF"& _ 
                            "ixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ResidualValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Date_Accounting() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Date_AccountingColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Date_Accounting' de la tabla 'ERP_Finance_Get_Depreciatio"& _ 
                            "nFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Date_AccountingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amount_Acquired() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AcquiredColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Amount_Acquired' de la tabla 'ERP_Finance_Get_Depreciatio"& _ 
                            "nFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AcquiredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amount_AccumulatedDepreciation() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AccumulatedDepreciationColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Amount_AccumulatedDepreciation' de la tabla 'ERP_Finance_"& _ 
                            "Get_DepreciationFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AccumulatedDepreciationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property balancebooks() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.balancebooksColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'balancebooks' de la tabla 'ERP_Finance_Get_DepreciationFi"& _ 
                            "xedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.balancebooksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property balancebookdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.balancebookdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'balancebookdate' de la tabla 'ERP_Finance_Get_Depreciatio"& _ 
                            "nFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.balancebookdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dateDepreciationBalanceBook() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.dateDepreciationBalanceBookColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dateDepreciationBalanceBook' de la tabla 'ERP_Finance_Get"& _ 
                            "_DepreciationFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.dateDepreciationBalanceBookColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UsersCreate() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.UsersCreateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UsersCreate' de la tabla 'ERP_Finance_Get_DepreciationFix"& _ 
                            "edAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.UsersCreateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateCreate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DateCreateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateCreate' de la tabla 'ERP_Finance_Get_DepreciationFixe"& _ 
                            "dAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DateCreateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UsersModify() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.UsersModifyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UsersModify' de la tabla 'ERP_Finance_Get_DepreciationFix"& _ 
                            "edAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.UsersModifyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateModify() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DateModifyColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateModify' de la tabla 'ERP_Finance_Get_DepreciationFixe"& _ 
                            "dAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DateModifyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Active() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ActiveColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Active' de la tabla 'ERP_Finance_Get_DepreciationFixedAss"& _ 
                            "et' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ActiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_FixedAssets_Sub() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_FixedAssets_SubColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_FixedAssets_Sub' de la tabla 'ERP_Finance_Get_Deprecia"& _ 
                            "tionFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_FixedAssets_SubColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_FixedAssetsType() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_FixedAssetsTypeColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id_FixedAssetsType' de la tabla 'ERP_Finance_Get_Deprecia"& _ 
                            "tionFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_FixedAssetsTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Modelo() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_ModeloColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Modelo' de la tabla 'ERP_Finance_Get_DepreciationFixed"& _ 
                            "Asset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_ModeloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Marca() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_MarcaColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Marca' de la tabla 'ERP_Finance_Get_DepreciationFixedA"& _ 
                            "sset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_MarcaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Numero_Serie() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Numero_SerieColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Numero_Serie' de la tabla 'ERP_Finance_Get_DepreciationFi"& _ 
                            "xedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Numero_SerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Legacy() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_LegacyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Legacy' de la tabla 'ERP_Finance_Get_DepreciationFixed"& _ 
                            "Asset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_LegacyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Observations() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ObservationsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Observations' de la tabla 'ERP_Finance_Get_DepreciationFi"& _ 
                            "xedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ObservationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_estado_FK() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.id_estado_FKColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'id_estado_FK' de la tabla 'ERP_Finance_Get_DepreciationFi"& _ 
                            "xedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.id_estado_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property color() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.colorColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'color' de la tabla 'ERP_Finance_Get_DepreciationFixedAsse"& _ 
                            "t' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.colorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property material() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.materialColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'material' de la tabla 'ERP_Finance_Get_DepreciationFixedA"& _ 
                            "sset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.materialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isDepreciated() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.isDepreciatedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'isDepreciated' de la tabla 'ERP_Finance_Get_DepreciationF"& _ 
                            "ixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.isDepreciatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dateDepreciated() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.dateDepreciatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dateDepreciated' de la tabla 'ERP_Finance_Get_Depreciatio"& _ 
                            "nFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.dateDepreciatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Capitalizable() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.CapitalizableColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Capitalizable' de la tabla 'ERP_Finance_Get_DepreciationF"& _ 
                            "ixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.CapitalizableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ResidualValueCalc() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ResidualValueCalcColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ResidualValueCalc' de la tabla 'ERP_Finance_Get_Depreciat"& _ 
                            "ionFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ResidualValueCalcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amount_AccumulatedDepreciationCal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AccumulatedDepreciationCalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Amount_AccumulatedDepreciationCal' de la tabla 'ERP_Finan"& _ 
                            "ce_Get_DepreciationFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AccumulatedDepreciationCalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tipoactivo() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.tipoactivoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipoactivo' de la tabla 'ERP_Finance_Get_DepreciationFixe"& _ 
                            "dAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.tipoactivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Depreciation() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Name_DepreciationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Name_Depreciation' de la tabla 'ERP_Finance_Get_Depreciat"& _ 
                            "ionFixedAsset' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Name_DepreciationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnioNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.AnioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnioNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.AnioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDepreciacionAnualNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.DepreciacionAnualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDepreciacionAnualNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DepreciacionAnualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDepreciacionAcumuladaNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.DepreciacionAcumuladaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDepreciacionAcumuladaNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DepreciacionAcumuladaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsValorEnLibrosNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.ValorEnLibrosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetValorEnLibrosNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ValorEnLibrosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaDepreciacionNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.FechaDepreciacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaDepreciacionNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.FechaDepreciacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisaprovedNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.isaprovedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisaprovedNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.isaprovedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsId_Company_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Company_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetId_Company_FKNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Company_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Provider_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_Provider_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Provider_FKNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_Provider_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsId_TypeCustomerCustomer_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_TypeCustomerCustomer_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetId_TypeCustomerCustomer_FKNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_TypeCustomerCustomer_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsId_Depreciation_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Depreciation_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetId_Depreciation_FKNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Depreciation_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsId_Location_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Location_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetId_Location_FKNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_Location_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsId_ResponsiblePerson_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_ResponsiblePerson_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetId_ResponsiblePerson_FKNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_ResponsiblePerson_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_FiexdAssetsNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Name_FiexdAssetsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_FiexdAssetsNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Name_FiexdAssetsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInvoice_numbersNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Invoice_numbersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInvoice_numbersNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Invoice_numbersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumber_PurchaseNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Number_PurchaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumber_PurchaseNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Number_PurchaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDate_AcquisitionNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Date_AcquisitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDate_AcquisitionNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Date_AcquisitionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResidualValueNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.ResidualValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResidualValueNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ResidualValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDate_AccountingNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Date_AccountingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDate_AccountingNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Date_AccountingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmount_AcquiredNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AcquiredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmount_AcquiredNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AcquiredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmount_AccumulatedDepreciationNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AccumulatedDepreciationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmount_AccumulatedDepreciationNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AccumulatedDepreciationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbalancebooksNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.balancebooksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbalancebooksNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.balancebooksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbalancebookdateNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.balancebookdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbalancebookdateNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.balancebookdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdateDepreciationBalanceBookNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.dateDepreciationBalanceBookColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdateDepreciationBalanceBookNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.dateDepreciationBalanceBookColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUsersCreateNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.UsersCreateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUsersCreateNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.UsersCreateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateCreateNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.DateCreateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateCreateNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DateCreateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUsersModifyNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.UsersModifyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUsersModifyNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.UsersModifyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateModifyNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.DateModifyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateModifyNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.DateModifyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.ActiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ActiveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_FixedAssets_SubNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_FixedAssets_SubColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_FixedAssets_SubNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_FixedAssets_SubColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsId_FixedAssetsTypeNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_FixedAssetsTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetId_FixedAssetsTypeNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Id_FixedAssetsTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_ModeloNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_ModeloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_ModeloNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_ModeloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_MarcaNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_MarcaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_MarcaNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_MarcaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumero_SerieNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Numero_SerieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumero_SerieNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Numero_SerieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_LegacyNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_LegacyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_LegacyNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ID_LegacyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsObservationsNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.ObservationsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetObservationsNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ObservationsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isid_estado_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.id_estado_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setid_estado_FKNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.id_estado_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscolorNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.colorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcolorNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.colorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaterialNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.materialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaterialNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.materialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisDepreciatedNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.isDepreciatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisDepreciatedNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.isDepreciatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdateDepreciatedNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.dateDepreciatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdateDepreciatedNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.dateDepreciatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCapitalizableNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.CapitalizableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCapitalizableNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.CapitalizableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResidualValueCalcNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.ResidualValueCalcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResidualValueCalcNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.ResidualValueCalcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmount_AccumulatedDepreciationCalNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AccumulatedDepreciationCalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmount_AccumulatedDepreciationCalNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Amount_AccumulatedDepreciationCalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstipoactivoNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.tipoactivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettipoactivoNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.tipoactivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_DepreciationNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Get_DepreciationFixedAsset.Name_DepreciationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_DepreciationNull()
            Me(Me.tableERP_Finance_Get_DepreciationFixedAsset.Name_DepreciationColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SP_ERP_Inventory_ReporteAmortizacionRow
        Inherits Global.System.Data.DataRow
        
        Private tableSP_ERP_Inventory_ReporteAmortizacion As SP_ERP_Inventory_ReporteAmortizacionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSP_ERP_Inventory_ReporteAmortizacion = CType(Me.Table,SP_ERP_Inventory_ReporteAmortizacionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Date_Acquisition() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Date_AcquisitionColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Date_Acquisition' de la tabla 'SP_ERP_Inventory_ReporteAm"& _ 
                            "ortizacion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Date_AcquisitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_FixedAssetsType() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Name_FixedAssetsTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Name_FixedAssetsType' de la tabla 'SP_ERP_Inventory_Repor"& _ 
                            "teAmortizacion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Name_FixedAssetsTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Number_Purchase() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Number_PurchaseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Number_Purchase' de la tabla 'SP_ERP_Inventory_ReporteAmo"& _ 
                            "rtizacion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Number_PurchaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_FiexdAssets() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Name_FiexdAssetsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Name_FiexdAssets' de la tabla 'SP_ERP_Inventory_ReporteAm"& _ 
                            "ortizacion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Name_FiexdAssetsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amount_Acquired() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Amount_AcquiredColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Amount_Acquired' de la tabla 'SP_ERP_Inventory_ReporteAmo"& _ 
                            "rtizacion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Amount_AcquiredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VidaUtil() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.VidaUtilColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VidaUtil' de la tabla 'SP_ERP_Inventory_ReporteAmortizaci"& _ 
                            "on' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.VidaUtilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dateAmortizacion() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.dateAmortizacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dateAmortizacion' de la tabla 'SP_ERP_Inventory_ReporteAm"& _ 
                            "ortizacion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.dateAmortizacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MontoAmortizado() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.MontoAmortizadoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MontoAmortizado' de la tabla 'SP_ERP_Inventory_ReporteAmo"& _ 
                            "rtizacion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.MontoAmortizadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dateCreateAmortization() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.dateCreateAmortizationColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'dateCreateAmortization' de la tabla 'SP_ERP_Inventory_Rep"& _ 
                            "orteAmortizacion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.dateCreateAmortizationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cuotasemestral() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.cuotasemestralColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cuotasemestral' de la tabla 'SP_ERP_Inventory_ReporteAmor"& _ 
                            "tizacion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.cuotasemestralColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ValorLibros() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.ValorLibrosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ValorLibros' de la tabla 'SP_ERP_Inventory_ReporteAmortiz"& _ 
                            "acion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.ValorLibrosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDate_AcquisitionNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Date_AcquisitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDate_AcquisitionNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Date_AcquisitionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_FixedAssetsTypeNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Name_FixedAssetsTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_FixedAssetsTypeNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Name_FixedAssetsTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumber_PurchaseNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Number_PurchaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumber_PurchaseNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Number_PurchaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_FiexdAssetsNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Name_FiexdAssetsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_FiexdAssetsNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Name_FiexdAssetsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmount_AcquiredNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Amount_AcquiredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmount_AcquiredNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.Amount_AcquiredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVidaUtilNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.VidaUtilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVidaUtilNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.VidaUtilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdateAmortizacionNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.dateAmortizacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdateAmortizacionNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.dateAmortizacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMontoAmortizadoNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.MontoAmortizadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMontoAmortizadoNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.MontoAmortizadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdateCreateAmortizationNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.dateCreateAmortizationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdateCreateAmortizationNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.dateCreateAmortizationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscuotasemestralNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.cuotasemestralColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcuotasemestralNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.cuotasemestralColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsValorLibrosNull() As Boolean
            Return Me.IsNull(Me.tableSP_ERP_Inventory_ReporteAmortizacion.ValorLibrosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetValorLibrosNull()
            Me(Me.tableSP_ERP_Inventory_ReporteAmortizacion.ValorLibrosColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_FixedAssets_SP_GetGeneralReportRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_FixedAssets_SP_GetGeneralReportRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_FixedAssets_SP_GetGeneralReportRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_FixedAssets_SP_GetGeneralReportRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_FixedAssets_SP_GetReportTypeAssetsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_FixedAssets_SP_GetReportTypeAssetsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_FixedAssets_SP_GetReportTypeAssetsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_FixedAssets_SP_GetReportTypeAssetsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_GetBodyReportInventory_transfersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_GetBodyReportInventory_transfersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_GetBodyReportInventory_transfersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_GetBodyReportInventory_transfersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_Finance_Get_DepreciationFixedAssetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_Finance_Get_DepreciationFixedAssetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_Finance_Get_DepreciationFixedAssetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_Finance_Get_DepreciationFixedAssetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SP_ERP_Inventory_ReporteAmortizacionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SP_ERP_Inventory_ReporteAmortizacionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SP_ERP_Inventory_ReporteAmortizacionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SP_ERP_Inventory_ReporteAmortizacionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ReportFixedAssetsGeneralTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_FixedAssets_SP_GetGeneralReportTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_FixedAssets_SP_GetGeneralReport"
            tableMapping.ColumnMappings.Add("Codigo", "Codigo")
            tableMapping.ColumnMappings.Add("NumeroSerie", "NumeroSerie")
            tableMapping.ColumnMappings.Add("UbicacionSecundaria", "UbicacionSecundaria")
            tableMapping.ColumnMappings.Add("UbicacionPrimaria", "UbicacionPrimaria")
            tableMapping.ColumnMappings.Add("ValorAdquisicion", "ValorAdquisicion")
            tableMapping.ColumnMappings.Add("UnidadOrganizativa", "UnidadOrganizativa")
            tableMapping.ColumnMappings.Add("Bien", "Bien")
            tableMapping.ColumnMappings.Add("Observaciones", "Observaciones")
            tableMapping.ColumnMappings.Add("Marca", "Marca")
            tableMapping.ColumnMappings.Add("Modelo", "Modelo")
            tableMapping.ColumnMappings.Add("Clasificacion", "Clasificacion")
            tableMapping.ColumnMappings.Add("SubClasificacion", "SubClasificacion")
            tableMapping.ColumnMappings.Add("FechaAdquisicion", "FechaAdquisicion")
            tableMapping.ColumnMappings.Add("UbicacionTemporal", "UbicacionTemporal")
            tableMapping.ColumnMappings.Add("NumeroDocumentoCompra", "NumeroDocumentoCompra")
            tableMapping.ColumnMappings.Add("Responsable", "Responsable")
            tableMapping.ColumnMappings.Add("Proveedor", "Proveedor")
            tableMapping.ColumnMappings.Add("Fecha_Caducidad", "Fecha_Caducidad")
            tableMapping.ColumnMappings.Add("Forma_Adquisicion", "Forma_Adquisicion")
            tableMapping.ColumnMappings.Add("material", "material")
            tableMapping.ColumnMappings.Add("color", "color")
            tableMapping.ColumnMappings.Add("descargado", "descargado")
            tableMapping.ColumnMappings.Add("fecha_descargo", "fecha_descargo")
            tableMapping.ColumnMappings.Add("descripcion_descargo", "descripcion_descargo")
            tableMapping.ColumnMappings.Add("nombrestado", "nombrestado")
            tableMapping.ColumnMappings.Add("CodBarras", "CodBarras")
            tableMapping.ColumnMappings.Add("Invoice_numbers", "Invoice_numbers")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_FixedAssets_SP_GetGeneralReport"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Company", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Codigo", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nombre", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_FixedAssetsType", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_FixedAssetsTypeSub", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UbicacionPrimaria", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UbicacionSecundaria", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UnidadOrganizativa", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Employee", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateInitial", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFinal", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_estado_Fk", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaAdquisicionInicial", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaAdquisicionFinal", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RangoValorAdquisicionInicial", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RangoValorAdquisicionFinal", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechasAct", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaAdquisicion", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValorAdquisicion", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrdenadoPor", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As ReportFixedAssetsGeneral.ERP_FixedAssets_SP_GetGeneralReportDataTable,  _
                    ByVal Id_Company As Global.System.Nullable(Of Integer),  _
                    ByVal Codigo As String,  _
                    ByVal Nombre As String,  _
                    ByVal Id_FixedAssetsType As String,  _
                    ByVal Id_FixedAssetsTypeSub As String,  _
                    ByVal UbicacionPrimaria As String,  _
                    ByVal UbicacionSecundaria As String,  _
                    ByVal UnidadOrganizativa As String,  _
                    ByVal Id_Employee As Global.System.Nullable(Of Long),  _
                    ByVal DateInitial As Global.System.Nullable(Of Integer),  _
                    ByVal DateFinal As Global.System.Nullable(Of Integer),  _
                    ByVal Id_estado_Fk As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicionInicial As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicionFinal As Global.System.Nullable(Of Integer),  _
                    ByVal RangoValorAdquisicionInicial As Global.System.Nullable(Of Decimal),  _
                    ByVal RangoValorAdquisicionFinal As Global.System.Nullable(Of Decimal),  _
                    ByVal FechasAct As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicion As Global.System.Nullable(Of Integer),  _
                    ByVal ValorAdquisicion As Global.System.Nullable(Of Integer),  _
                    ByVal OrdenadoPor As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Codigo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Codigo,String)
            End If
            If (Nombre Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Nombre,String)
            End If
            If (Id_FixedAssetsType Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Id_FixedAssetsType,String)
            End If
            If (Id_FixedAssetsTypeSub Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Id_FixedAssetsTypeSub,String)
            End If
            If (UbicacionPrimaria Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(UbicacionPrimaria,String)
            End If
            If (UbicacionSecundaria Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(UbicacionSecundaria,String)
            End If
            If (UnidadOrganizativa Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(UnidadOrganizativa,String)
            End If
            If (Id_Employee.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Id_Employee.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (DateInitial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(DateInitial.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (DateFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(DateFinal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Id_estado_Fk.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(Id_estado_Fk.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicionInicial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(FechaAdquisicionInicial.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicionFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(FechaAdquisicionFinal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (RangoValorAdquisicionInicial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(RangoValorAdquisicionInicial.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (RangoValorAdquisicionFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(RangoValorAdquisicionFinal.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FechasAct.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(FechasAct.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicion.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(FechaAdquisicion.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ValorAdquisicion.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(ValorAdquisicion.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (OrdenadoPor Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(20).Value = CType(OrdenadoPor,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal Id_Company As Global.System.Nullable(Of Integer),  _
                    ByVal Codigo As String,  _
                    ByVal Nombre As String,  _
                    ByVal Id_FixedAssetsType As String,  _
                    ByVal Id_FixedAssetsTypeSub As String,  _
                    ByVal UbicacionPrimaria As String,  _
                    ByVal UbicacionSecundaria As String,  _
                    ByVal UnidadOrganizativa As String,  _
                    ByVal Id_Employee As Global.System.Nullable(Of Long),  _
                    ByVal DateInitial As Global.System.Nullable(Of Integer),  _
                    ByVal DateFinal As Global.System.Nullable(Of Integer),  _
                    ByVal Id_estado_Fk As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicionInicial As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicionFinal As Global.System.Nullable(Of Integer),  _
                    ByVal RangoValorAdquisicionInicial As Global.System.Nullable(Of Decimal),  _
                    ByVal RangoValorAdquisicionFinal As Global.System.Nullable(Of Decimal),  _
                    ByVal FechasAct As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicion As Global.System.Nullable(Of Integer),  _
                    ByVal ValorAdquisicion As Global.System.Nullable(Of Integer),  _
                    ByVal OrdenadoPor As String) As ReportFixedAssetsGeneral.ERP_FixedAssets_SP_GetGeneralReportDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Codigo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Codigo,String)
            End If
            If (Nombre Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Nombre,String)
            End If
            If (Id_FixedAssetsType Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Id_FixedAssetsType,String)
            End If
            If (Id_FixedAssetsTypeSub Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Id_FixedAssetsTypeSub,String)
            End If
            If (UbicacionPrimaria Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(UbicacionPrimaria,String)
            End If
            If (UbicacionSecundaria Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(UbicacionSecundaria,String)
            End If
            If (UnidadOrganizativa Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(UnidadOrganizativa,String)
            End If
            If (Id_Employee.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Id_Employee.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (DateInitial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(DateInitial.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (DateFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(DateFinal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Id_estado_Fk.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(Id_estado_Fk.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicionInicial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(FechaAdquisicionInicial.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicionFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(FechaAdquisicionFinal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (RangoValorAdquisicionInicial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(RangoValorAdquisicionInicial.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (RangoValorAdquisicionFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(RangoValorAdquisicionFinal.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FechasAct.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(FechasAct.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicion.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(FechaAdquisicion.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ValorAdquisicion.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(ValorAdquisicion.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (OrdenadoPor Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(20).Value = CType(OrdenadoPor,String)
            End If
            Dim dataTable As ReportFixedAssetsGeneral.ERP_FixedAssets_SP_GetGeneralReportDataTable = New ReportFixedAssetsGeneral.ERP_FixedAssets_SP_GetGeneralReportDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_FixedAssets_SP_GetReportTypeAssetsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_FixedAssets_SP_GetReportTypeAssets"
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("Canttotal", "Canttotal")
            tableMapping.ColumnMappings.Add("cantActivos", "cantActivos")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_FixedAssets_SP_GetReportTypeAssets"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Company", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Codigo", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nombre", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_FixedAssetsType", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_FixedAssetsTypeSub", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UbicacionPrimaria", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UbicacionSecundaria", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UnidadOrganizativa", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Employee", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateInitial", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFinal", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_estado_Fk", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaAdquisicionInicial", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaAdquisicionFinal", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RangoValorAdquisicionInicial", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RangoValorAdquisicionFinal", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 4, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechasAct", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaAdquisicion", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValorAdquisicion", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrdenadoPor", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As ReportFixedAssetsGeneral.ERP_FixedAssets_SP_GetReportTypeAssetsDataTable,  _
                    ByVal Id_Company As Global.System.Nullable(Of Integer),  _
                    ByVal Codigo As String,  _
                    ByVal Nombre As String,  _
                    ByVal Id_FixedAssetsType As String,  _
                    ByVal Id_FixedAssetsTypeSub As String,  _
                    ByVal UbicacionPrimaria As String,  _
                    ByVal UbicacionSecundaria As String,  _
                    ByVal UnidadOrganizativa As String,  _
                    ByVal Id_Employee As Global.System.Nullable(Of Long),  _
                    ByVal DateInitial As Global.System.Nullable(Of Integer),  _
                    ByVal DateFinal As Global.System.Nullable(Of Integer),  _
                    ByVal Id_estado_Fk As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicionInicial As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicionFinal As Global.System.Nullable(Of Integer),  _
                    ByVal RangoValorAdquisicionInicial As Global.System.Nullable(Of Decimal),  _
                    ByVal RangoValorAdquisicionFinal As Global.System.Nullable(Of Decimal),  _
                    ByVal FechasAct As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicion As Global.System.Nullable(Of Integer),  _
                    ByVal ValorAdquisicion As Global.System.Nullable(Of Integer),  _
                    ByVal OrdenadoPor As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Codigo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Codigo,String)
            End If
            If (Nombre Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Nombre,String)
            End If
            If (Id_FixedAssetsType Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Id_FixedAssetsType,String)
            End If
            If (Id_FixedAssetsTypeSub Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Id_FixedAssetsTypeSub,String)
            End If
            If (UbicacionPrimaria Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(UbicacionPrimaria,String)
            End If
            If (UbicacionSecundaria Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(UbicacionSecundaria,String)
            End If
            If (UnidadOrganizativa Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(UnidadOrganizativa,String)
            End If
            If (Id_Employee.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Id_Employee.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (DateInitial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(DateInitial.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (DateFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(DateFinal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Id_estado_Fk.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(Id_estado_Fk.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicionInicial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(FechaAdquisicionInicial.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicionFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(FechaAdquisicionFinal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (RangoValorAdquisicionInicial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(RangoValorAdquisicionInicial.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (RangoValorAdquisicionFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(RangoValorAdquisicionFinal.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FechasAct.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(FechasAct.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicion.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(FechaAdquisicion.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ValorAdquisicion.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(ValorAdquisicion.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (OrdenadoPor Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(20).Value = CType(OrdenadoPor,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal Id_Company As Global.System.Nullable(Of Integer),  _
                    ByVal Codigo As String,  _
                    ByVal Nombre As String,  _
                    ByVal Id_FixedAssetsType As String,  _
                    ByVal Id_FixedAssetsTypeSub As String,  _
                    ByVal UbicacionPrimaria As String,  _
                    ByVal UbicacionSecundaria As String,  _
                    ByVal UnidadOrganizativa As String,  _
                    ByVal Id_Employee As Global.System.Nullable(Of Long),  _
                    ByVal DateInitial As Global.System.Nullable(Of Integer),  _
                    ByVal DateFinal As Global.System.Nullable(Of Integer),  _
                    ByVal Id_estado_Fk As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicionInicial As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicionFinal As Global.System.Nullable(Of Integer),  _
                    ByVal RangoValorAdquisicionInicial As Global.System.Nullable(Of Decimal),  _
                    ByVal RangoValorAdquisicionFinal As Global.System.Nullable(Of Decimal),  _
                    ByVal FechasAct As Global.System.Nullable(Of Integer),  _
                    ByVal FechaAdquisicion As Global.System.Nullable(Of Integer),  _
                    ByVal ValorAdquisicion As Global.System.Nullable(Of Integer),  _
                    ByVal OrdenadoPor As String) As ReportFixedAssetsGeneral.ERP_FixedAssets_SP_GetReportTypeAssetsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Codigo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Codigo,String)
            End If
            If (Nombre Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Nombre,String)
            End If
            If (Id_FixedAssetsType Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Id_FixedAssetsType,String)
            End If
            If (Id_FixedAssetsTypeSub Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Id_FixedAssetsTypeSub,String)
            End If
            If (UbicacionPrimaria Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(UbicacionPrimaria,String)
            End If
            If (UbicacionSecundaria Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(UbicacionSecundaria,String)
            End If
            If (UnidadOrganizativa Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(UnidadOrganizativa,String)
            End If
            If (Id_Employee.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Id_Employee.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (DateInitial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(DateInitial.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (DateFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(DateFinal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Id_estado_Fk.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(Id_estado_Fk.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicionInicial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(FechaAdquisicionInicial.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicionFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(FechaAdquisicionFinal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (RangoValorAdquisicionInicial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(RangoValorAdquisicionInicial.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (RangoValorAdquisicionFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(RangoValorAdquisicionFinal.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FechasAct.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(FechasAct.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (FechaAdquisicion.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(FechaAdquisicion.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ValorAdquisicion.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(ValorAdquisicion.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (OrdenadoPor Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(20).Value = CType(OrdenadoPor,String)
            End If
            Dim dataTable As ReportFixedAssetsGeneral.ERP_FixedAssets_SP_GetReportTypeAssetsDataTable = New ReportFixedAssetsGeneral.ERP_FixedAssets_SP_GetReportTypeAssetsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_GetBodyReportInventory_transfersTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_GetBodyReportInventory_transfers"
            tableMapping.ColumnMappings.Add("Number_Purchase", "Number_Purchase")
            tableMapping.ColumnMappings.Add("Clasificacion", "Clasificacion")
            tableMapping.ColumnMappings.Add("SubClasificacion", "SubClasificacion")
            tableMapping.ColumnMappings.Add("ActivoPasado", "ActivoPasado")
            tableMapping.ColumnMappings.Add("Antiguodueno", "Antiguodueno")
            tableMapping.ColumnMappings.Add("Nuevodueno", "Nuevodueno")
            tableMapping.ColumnMappings.Add("Fechatrasferencia", "Fechatrasferencia")
            tableMapping.ColumnMappings.Add("fechaDesde", "fechaDesde")
            tableMapping.ColumnMappings.Add("fechaHasta", "fechaHasta")
            tableMapping.ColumnMappings.Add("Motivo_Transferencia", "Motivo_Transferencia")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_GetBodyReportInventory_transfers"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Company", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateInitial", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFinal", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_FixedAssetsType", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_FixedAssetsTypeSub", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ReportFixedAssetsGeneral.ERP_GetBodyReportInventory_transfersDataTable, ByVal Id_Company As Global.System.Nullable(Of Integer), ByVal DateInitial As Global.System.Nullable(Of Date), ByVal DateFinal As Global.System.Nullable(Of Date), ByVal Id_FixedAssetsType As Global.System.Nullable(Of Integer), ByVal Id_FixedAssetsTypeSub As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DateInitial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateInitial.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DateFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DateFinal.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Id_FixedAssetsType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Id_FixedAssetsType.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Id_FixedAssetsTypeSub.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Id_FixedAssetsTypeSub.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id_Company As Global.System.Nullable(Of Integer), ByVal DateInitial As Global.System.Nullable(Of Date), ByVal DateFinal As Global.System.Nullable(Of Date), ByVal Id_FixedAssetsType As Global.System.Nullable(Of Integer), ByVal Id_FixedAssetsTypeSub As Global.System.Nullable(Of Integer)) As ReportFixedAssetsGeneral.ERP_GetBodyReportInventory_transfersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DateInitial.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateInitial.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DateFinal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DateFinal.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Id_FixedAssetsType.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Id_FixedAssetsType.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Id_FixedAssetsTypeSub.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Id_FixedAssetsTypeSub.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ReportFixedAssetsGeneral.ERP_GetBodyReportInventory_transfersDataTable = New ReportFixedAssetsGeneral.ERP_GetBodyReportInventory_transfersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_Finance_Get_DepreciationFixedAssetTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_Finance_Get_DepreciationFixedAsset"
            tableMapping.ColumnMappings.Add("Anio", "Anio")
            tableMapping.ColumnMappings.Add("DepreciacionAnual", "DepreciacionAnual")
            tableMapping.ColumnMappings.Add("DepreciacionAcumulada", "DepreciacionAcumulada")
            tableMapping.ColumnMappings.Add("ValorEnLibros", "ValorEnLibros")
            tableMapping.ColumnMappings.Add("FechaDepreciacion", "FechaDepreciacion")
            tableMapping.ColumnMappings.Add("isaproved", "isaproved")
            tableMapping.ColumnMappings.Add("ID_FixedAssets", "ID_FixedAssets")
            tableMapping.ColumnMappings.Add("Id_Company_FK", "Id_Company_FK")
            tableMapping.ColumnMappings.Add("ID_Provider_FK", "ID_Provider_FK")
            tableMapping.ColumnMappings.Add("Id_TypeCustomerCustomer_FK", "Id_TypeCustomerCustomer_FK")
            tableMapping.ColumnMappings.Add("Id_Depreciation_FK", "Id_Depreciation_FK")
            tableMapping.ColumnMappings.Add("Id_Location_FK", "Id_Location_FK")
            tableMapping.ColumnMappings.Add("Id_ResponsiblePerson_FK", "Id_ResponsiblePerson_FK")
            tableMapping.ColumnMappings.Add("Name_FiexdAssets", "Name_FiexdAssets")
            tableMapping.ColumnMappings.Add("Invoice_numbers", "Invoice_numbers")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("Number_Purchase", "Number_Purchase")
            tableMapping.ColumnMappings.Add("Date_Acquisition", "Date_Acquisition")
            tableMapping.ColumnMappings.Add("ResidualValue", "ResidualValue")
            tableMapping.ColumnMappings.Add("Date_Accounting", "Date_Accounting")
            tableMapping.ColumnMappings.Add("Amount_Acquired", "Amount_Acquired")
            tableMapping.ColumnMappings.Add("Amount_AccumulatedDepreciation", "Amount_AccumulatedDepreciation")
            tableMapping.ColumnMappings.Add("balancebooks", "balancebooks")
            tableMapping.ColumnMappings.Add("balancebookdate", "balancebookdate")
            tableMapping.ColumnMappings.Add("dateDepreciationBalanceBook", "dateDepreciationBalanceBook")
            tableMapping.ColumnMappings.Add("UsersCreate", "UsersCreate")
            tableMapping.ColumnMappings.Add("DateCreate", "DateCreate")
            tableMapping.ColumnMappings.Add("UsersModify", "UsersModify")
            tableMapping.ColumnMappings.Add("DateModify", "DateModify")
            tableMapping.ColumnMappings.Add("Active", "Active")
            tableMapping.ColumnMappings.Add("ID_FixedAssets_Sub", "ID_FixedAssets_Sub")
            tableMapping.ColumnMappings.Add("Id_FixedAssetsType", "Id_FixedAssetsType")
            tableMapping.ColumnMappings.Add("ID_Modelo", "ID_Modelo")
            tableMapping.ColumnMappings.Add("ID_Marca", "ID_Marca")
            tableMapping.ColumnMappings.Add("Numero_Serie", "Numero_Serie")
            tableMapping.ColumnMappings.Add("ID_Legacy", "ID_Legacy")
            tableMapping.ColumnMappings.Add("Observations", "Observations")
            tableMapping.ColumnMappings.Add("id_estado_FK", "id_estado_FK")
            tableMapping.ColumnMappings.Add("color", "color")
            tableMapping.ColumnMappings.Add("material", "material")
            tableMapping.ColumnMappings.Add("isDepreciated", "isDepreciated")
            tableMapping.ColumnMappings.Add("dateDepreciated", "dateDepreciated")
            tableMapping.ColumnMappings.Add("Capitalizable", "Capitalizable")
            tableMapping.ColumnMappings.Add("ResidualValueCalc", "ResidualValueCalc")
            tableMapping.ColumnMappings.Add("Amount_AccumulatedDepreciationCal", "Amount_AccumulatedDepreciationCal")
            tableMapping.ColumnMappings.Add("tipoactivo", "tipoactivo")
            tableMapping.ColumnMappings.Add("Name_Depreciation", "Name_Depreciation")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_Finance_Get_DepreciationFixedAssetIndividual"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_FixedAsset", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ReportFixedAssetsGeneral.ERP_Finance_Get_DepreciationFixedAssetDataTable, ByVal Id_FixedAsset As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_FixedAsset.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_FixedAsset.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id_FixedAsset As Global.System.Nullable(Of Integer)) As ReportFixedAssetsGeneral.ERP_Finance_Get_DepreciationFixedAssetDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_FixedAsset.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_FixedAsset.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ReportFixedAssetsGeneral.ERP_Finance_Get_DepreciationFixedAssetDataTable = New ReportFixedAssetsGeneral.ERP_Finance_Get_DepreciationFixedAssetDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SP_ERP_Inventory_ReporteAmortizacionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SP_ERP_Inventory_ReporteAmortizacion"
            tableMapping.ColumnMappings.Add("Date_Acquisition", "Date_Acquisition")
            tableMapping.ColumnMappings.Add("Name_FixedAssetsType", "Name_FixedAssetsType")
            tableMapping.ColumnMappings.Add("Number_Purchase", "Number_Purchase")
            tableMapping.ColumnMappings.Add("Name_FiexdAssets", "Name_FiexdAssets")
            tableMapping.ColumnMappings.Add("Amount_Acquired", "Amount_Acquired")
            tableMapping.ColumnMappings.Add("VidaUtil", "VidaUtil")
            tableMapping.ColumnMappings.Add("dateAmortizacion", "dateAmortizacion")
            tableMapping.ColumnMappings.Add("MontoAmortizado", "MontoAmortizado")
            tableMapping.ColumnMappings.Add("dateCreateAmortization", "dateCreateAmortization")
            tableMapping.ColumnMappings.Add("cuotasemestral", "cuotasemestral")
            tableMapping.ColumnMappings.Add("ValorLibros", "ValorLibros")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SP_ERP_Inventory_ReporteAmortizacion"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Company", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_HeaderAmortization", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ReportFixedAssetsGeneral.SP_ERP_Inventory_ReporteAmortizacionDataTable, ByVal Id_Company As Global.System.Nullable(Of Integer), ByVal Id_HeaderAmortization As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Id_HeaderAmortization.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Id_HeaderAmortization.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id_Company As Global.System.Nullable(Of Integer), ByVal Id_HeaderAmortization As Global.System.Nullable(Of Integer)) As ReportFixedAssetsGeneral.SP_ERP_Inventory_ReporteAmortizacionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Id_HeaderAmortization.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Id_HeaderAmortization.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ReportFixedAssetsGeneral.SP_ERP_Inventory_ReporteAmortizacionDataTable = New ReportFixedAssetsGeneral.SP_ERP_Inventory_ReporteAmortizacionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As ReportFixedAssetsGeneral, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As ReportFixedAssetsGeneral, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As ReportFixedAssetsGeneral, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As ReportFixedAssetsGeneral) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
