'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("EPD_SatelliteERPDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class EPD_SatelliteERPDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableERP_Finance_ReportAccountingAll As ERP_Finance_ReportAccountingAllDataTable
    
    Private tableERP_Finance_ReportAccounting As ERP_Finance_ReportAccountingDataTable
    
    Private tableERP_Finance_ReportAccountingHigh As ERP_Finance_ReportAccountingHighDataTable
    
    Private tableERP_Finance_Reports_Subledger As ERP_Finance_Reports_SubledgerDataTable
    
    Private tableERP_Finance_ReportBalance As ERP_Finance_ReportBalanceDataTable
    
    Private tableERP_SP_Invoice_Quotation_TransactionDetail_Select As ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable
    
    Private tableERP_Finance_Reports_AccountStatus As ERP_Finance_Reports_AccountStatusDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ERP_Finance_ReportAccountingAll")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_ReportAccountingAllDataTable(ds.Tables("ERP_Finance_ReportAccountingAll")))
            End If
            If (Not (ds.Tables("ERP_Finance_ReportAccounting")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_ReportAccountingDataTable(ds.Tables("ERP_Finance_ReportAccounting")))
            End If
            If (Not (ds.Tables("ERP_Finance_ReportAccountingHigh")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_ReportAccountingHighDataTable(ds.Tables("ERP_Finance_ReportAccountingHigh")))
            End If
            If (Not (ds.Tables("ERP_Finance_Reports_Subledger")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_Reports_SubledgerDataTable(ds.Tables("ERP_Finance_Reports_Subledger")))
            End If
            If (Not (ds.Tables("ERP_Finance_ReportBalance")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_ReportBalanceDataTable(ds.Tables("ERP_Finance_ReportBalance")))
            End If
            If (Not (ds.Tables("ERP_SP_Invoice_Quotation_TransactionDetail_Select")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable(ds.Tables("ERP_SP_Invoice_Quotation_TransactionDetail_Select")))
            End If
            If (Not (ds.Tables("ERP_Finance_Reports_AccountStatus")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_Reports_AccountStatusDataTable(ds.Tables("ERP_Finance_Reports_AccountStatus")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_Finance_ReportAccountingAll() As ERP_Finance_ReportAccountingAllDataTable
        Get
            Return Me.tableERP_Finance_ReportAccountingAll
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_Finance_ReportAccounting() As ERP_Finance_ReportAccountingDataTable
        Get
            Return Me.tableERP_Finance_ReportAccounting
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_Finance_ReportAccountingHigh() As ERP_Finance_ReportAccountingHighDataTable
        Get
            Return Me.tableERP_Finance_ReportAccountingHigh
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_Finance_Reports_Subledger() As ERP_Finance_Reports_SubledgerDataTable
        Get
            Return Me.tableERP_Finance_Reports_Subledger
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_Finance_ReportBalance() As ERP_Finance_ReportBalanceDataTable
        Get
            Return Me.tableERP_Finance_ReportBalance
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_SP_Invoice_Quotation_TransactionDetail_Select() As ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable
        Get
            Return Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_Finance_Reports_AccountStatus() As ERP_Finance_Reports_AccountStatusDataTable
        Get
            Return Me.tableERP_Finance_Reports_AccountStatus
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As EPD_SatelliteERPDataSet = CType(MyBase.Clone,EPD_SatelliteERPDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ERP_Finance_ReportAccountingAll")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_ReportAccountingAllDataTable(ds.Tables("ERP_Finance_ReportAccountingAll")))
            End If
            If (Not (ds.Tables("ERP_Finance_ReportAccounting")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_ReportAccountingDataTable(ds.Tables("ERP_Finance_ReportAccounting")))
            End If
            If (Not (ds.Tables("ERP_Finance_ReportAccountingHigh")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_ReportAccountingHighDataTable(ds.Tables("ERP_Finance_ReportAccountingHigh")))
            End If
            If (Not (ds.Tables("ERP_Finance_Reports_Subledger")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_Reports_SubledgerDataTable(ds.Tables("ERP_Finance_Reports_Subledger")))
            End If
            If (Not (ds.Tables("ERP_Finance_ReportBalance")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_ReportBalanceDataTable(ds.Tables("ERP_Finance_ReportBalance")))
            End If
            If (Not (ds.Tables("ERP_SP_Invoice_Quotation_TransactionDetail_Select")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable(ds.Tables("ERP_SP_Invoice_Quotation_TransactionDetail_Select")))
            End If
            If (Not (ds.Tables("ERP_Finance_Reports_AccountStatus")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_Finance_Reports_AccountStatusDataTable(ds.Tables("ERP_Finance_Reports_AccountStatus")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableERP_Finance_ReportAccountingAll = CType(MyBase.Tables("ERP_Finance_ReportAccountingAll"),ERP_Finance_ReportAccountingAllDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_Finance_ReportAccountingAll) Is Nothing) Then
                Me.tableERP_Finance_ReportAccountingAll.InitVars
            End If
        End If
        Me.tableERP_Finance_ReportAccounting = CType(MyBase.Tables("ERP_Finance_ReportAccounting"),ERP_Finance_ReportAccountingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_Finance_ReportAccounting) Is Nothing) Then
                Me.tableERP_Finance_ReportAccounting.InitVars
            End If
        End If
        Me.tableERP_Finance_ReportAccountingHigh = CType(MyBase.Tables("ERP_Finance_ReportAccountingHigh"),ERP_Finance_ReportAccountingHighDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_Finance_ReportAccountingHigh) Is Nothing) Then
                Me.tableERP_Finance_ReportAccountingHigh.InitVars
            End If
        End If
        Me.tableERP_Finance_Reports_Subledger = CType(MyBase.Tables("ERP_Finance_Reports_Subledger"),ERP_Finance_Reports_SubledgerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_Finance_Reports_Subledger) Is Nothing) Then
                Me.tableERP_Finance_Reports_Subledger.InitVars
            End If
        End If
        Me.tableERP_Finance_ReportBalance = CType(MyBase.Tables("ERP_Finance_ReportBalance"),ERP_Finance_ReportBalanceDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_Finance_ReportBalance) Is Nothing) Then
                Me.tableERP_Finance_ReportBalance.InitVars
            End If
        End If
        Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select = CType(MyBase.Tables("ERP_SP_Invoice_Quotation_TransactionDetail_Select"),ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select) Is Nothing) Then
                Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.InitVars
            End If
        End If
        Me.tableERP_Finance_Reports_AccountStatus = CType(MyBase.Tables("ERP_Finance_Reports_AccountStatus"),ERP_Finance_Reports_AccountStatusDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_Finance_Reports_AccountStatus) Is Nothing) Then
                Me.tableERP_Finance_Reports_AccountStatus.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "EPD_SatelliteERPDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/EPD_SatelliteERPDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableERP_Finance_ReportAccountingAll = New ERP_Finance_ReportAccountingAllDataTable()
        MyBase.Tables.Add(Me.tableERP_Finance_ReportAccountingAll)
        Me.tableERP_Finance_ReportAccounting = New ERP_Finance_ReportAccountingDataTable()
        MyBase.Tables.Add(Me.tableERP_Finance_ReportAccounting)
        Me.tableERP_Finance_ReportAccountingHigh = New ERP_Finance_ReportAccountingHighDataTable()
        MyBase.Tables.Add(Me.tableERP_Finance_ReportAccountingHigh)
        Me.tableERP_Finance_Reports_Subledger = New ERP_Finance_Reports_SubledgerDataTable()
        MyBase.Tables.Add(Me.tableERP_Finance_Reports_Subledger)
        Me.tableERP_Finance_ReportBalance = New ERP_Finance_ReportBalanceDataTable()
        MyBase.Tables.Add(Me.tableERP_Finance_ReportBalance)
        Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select = New ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable()
        MyBase.Tables.Add(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select)
        Me.tableERP_Finance_Reports_AccountStatus = New ERP_Finance_Reports_AccountStatusDataTable()
        MyBase.Tables.Add(Me.tableERP_Finance_Reports_AccountStatus)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_Finance_ReportAccountingAll() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_Finance_ReportAccounting() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_Finance_ReportAccountingHigh() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_Finance_Reports_Subledger() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_Finance_ReportBalance() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_SP_Invoice_Quotation_TransactionDetail_Select() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_Finance_Reports_AccountStatus() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As EPD_SatelliteERPDataSet = New EPD_SatelliteERPDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_Finance_ReportAccountingAllRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_Finance_ReportAccountingAllRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_Finance_ReportAccountingRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_Finance_ReportAccountingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_Finance_ReportAccountingHighRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_Finance_ReportAccountingHighRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_Finance_Reports_SubledgerRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_Finance_Reports_SubledgerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_Finance_ReportBalanceRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_Finance_ReportBalanceRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_Finance_Reports_AccountStatusRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_Finance_Reports_AccountStatusRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_Finance_ReportAccountingAllDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_Finance_ReportAccountingAllRow)
        
        Private columnId_AccountingIitemHeading As Global.System.Data.DataColumn
        
        Private columnBusinessDay As Global.System.Data.DataColumn
        
        Private columnConcept_AccountingIitemHeading As Global.System.Data.DataColumn
        
        Private columnUsersCreate As Global.System.Data.DataColumn
        
        Private columnDateCreate As Global.System.Data.DataColumn
        
        Private columnTotal_Charge As Global.System.Data.DataColumn
        
        Private columnTotal_Deposit As Global.System.Data.DataColumn
        
        Private columnIs_Square As Global.System.Data.DataColumn
        
        Private columnIs_Posting As Global.System.Data.DataColumn
        
        Private columnDatePosting As Global.System.Data.DataColumn
        
        Private columnId_AccountingIitemBody As Global.System.Data.DataColumn
        
        Private columnId_Account_FK As Global.System.Data.DataColumn
        
        Private columnNumberAccount As Global.System.Data.DataColumn
        
        Private columnConcept_AccountingIitemBody As Global.System.Data.DataColumn
        
        Private columnItem_Charge As Global.System.Data.DataColumn
        
        Private columnIteml_Deposit As Global.System.Data.DataColumn
        
        Private columnNomCuentaOrigen As Global.System.Data.DataColumn
        
        Private columnNomCuentaPadre As Global.System.Data.DataColumn
        
        Private columnNoCuentaPadre As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_Finance_ReportAccountingAll"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_AccountingIitemHeadingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_AccountingIitemHeading
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessDayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessDay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Concept_AccountingIitemHeadingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcept_AccountingIitemHeading
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UsersCreateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsersCreate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateCreateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateCreate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_ChargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Charge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_DepositColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Deposit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Is_SquareColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIs_Square
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Is_PostingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIs_Posting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatePostingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatePosting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_AccountingIitemBodyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_AccountingIitemBody
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_Account_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Account_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberAccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberAccount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Concept_AccountingIitemBodyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcept_AccountingIitemBody
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_ChargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Charge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Iteml_DepositColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIteml_Deposit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NomCuentaOrigenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNomCuentaOrigen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NomCuentaPadreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNomCuentaPadre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoCuentaPadreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoCuentaPadre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_Finance_ReportAccountingAllRow
            Get
                Return CType(Me.Rows(index),ERP_Finance_ReportAccountingAllRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingAllRowChanging As ERP_Finance_ReportAccountingAllRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingAllRowChanged As ERP_Finance_ReportAccountingAllRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingAllRowDeleting As ERP_Finance_ReportAccountingAllRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingAllRowDeleted As ERP_Finance_ReportAccountingAllRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_Finance_ReportAccountingAllRow(ByVal row As ERP_Finance_ReportAccountingAllRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_Finance_ReportAccountingAllRow( _
                    ByVal BusinessDay As Date,  _
                    ByVal Concept_AccountingIitemHeading As String,  _
                    ByVal UsersCreate As String,  _
                    ByVal DateCreate As Date,  _
                    ByVal Total_Charge As Decimal,  _
                    ByVal Total_Deposit As Decimal,  _
                    ByVal Is_Square As Boolean,  _
                    ByVal Is_Posting As Boolean,  _
                    ByVal DatePosting As Date,  _
                    ByVal Id_Account_FK As Long,  _
                    ByVal NumberAccount As String,  _
                    ByVal Concept_AccountingIitemBody As String,  _
                    ByVal Item_Charge As Decimal,  _
                    ByVal Iteml_Deposit As Decimal,  _
                    ByVal NomCuentaOrigen As String,  _
                    ByVal NomCuentaPadre As String,  _
                    ByVal NoCuentaPadre As String) As ERP_Finance_ReportAccountingAllRow
            Dim rowERP_Finance_ReportAccountingAllRow As ERP_Finance_ReportAccountingAllRow = CType(Me.NewRow,ERP_Finance_ReportAccountingAllRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, BusinessDay, Concept_AccountingIitemHeading, UsersCreate, DateCreate, Total_Charge, Total_Deposit, Is_Square, Is_Posting, DatePosting, Nothing, Id_Account_FK, NumberAccount, Concept_AccountingIitemBody, Item_Charge, Iteml_Deposit, NomCuentaOrigen, NomCuentaPadre, NoCuentaPadre}
            rowERP_Finance_ReportAccountingAllRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_Finance_ReportAccountingAllRow)
            Return rowERP_Finance_ReportAccountingAllRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_Finance_ReportAccountingAllDataTable = CType(MyBase.Clone,ERP_Finance_ReportAccountingAllDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_Finance_ReportAccountingAllDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId_AccountingIitemHeading = MyBase.Columns("Id_AccountingIitemHeading")
            Me.columnBusinessDay = MyBase.Columns("BusinessDay")
            Me.columnConcept_AccountingIitemHeading = MyBase.Columns("Concept_AccountingIitemHeading")
            Me.columnUsersCreate = MyBase.Columns("UsersCreate")
            Me.columnDateCreate = MyBase.Columns("DateCreate")
            Me.columnTotal_Charge = MyBase.Columns("Total_Charge")
            Me.columnTotal_Deposit = MyBase.Columns("Total_Deposit")
            Me.columnIs_Square = MyBase.Columns("Is_Square")
            Me.columnIs_Posting = MyBase.Columns("Is_Posting")
            Me.columnDatePosting = MyBase.Columns("DatePosting")
            Me.columnId_AccountingIitemBody = MyBase.Columns("Id_AccountingIitemBody")
            Me.columnId_Account_FK = MyBase.Columns("Id_Account_FK")
            Me.columnNumberAccount = MyBase.Columns("NumberAccount")
            Me.columnConcept_AccountingIitemBody = MyBase.Columns("Concept_AccountingIitemBody")
            Me.columnItem_Charge = MyBase.Columns("Item_Charge")
            Me.columnIteml_Deposit = MyBase.Columns("Iteml_Deposit")
            Me.columnNomCuentaOrigen = MyBase.Columns("NomCuentaOrigen")
            Me.columnNomCuentaPadre = MyBase.Columns("NomCuentaPadre")
            Me.columnNoCuentaPadre = MyBase.Columns("NoCuentaPadre")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId_AccountingIitemHeading = New Global.System.Data.DataColumn("Id_AccountingIitemHeading", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_AccountingIitemHeading)
            Me.columnBusinessDay = New Global.System.Data.DataColumn("BusinessDay", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessDay)
            Me.columnConcept_AccountingIitemHeading = New Global.System.Data.DataColumn("Concept_AccountingIitemHeading", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcept_AccountingIitemHeading)
            Me.columnUsersCreate = New Global.System.Data.DataColumn("UsersCreate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsersCreate)
            Me.columnDateCreate = New Global.System.Data.DataColumn("DateCreate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateCreate)
            Me.columnTotal_Charge = New Global.System.Data.DataColumn("Total_Charge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Charge)
            Me.columnTotal_Deposit = New Global.System.Data.DataColumn("Total_Deposit", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Deposit)
            Me.columnIs_Square = New Global.System.Data.DataColumn("Is_Square", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIs_Square)
            Me.columnIs_Posting = New Global.System.Data.DataColumn("Is_Posting", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIs_Posting)
            Me.columnDatePosting = New Global.System.Data.DataColumn("DatePosting", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatePosting)
            Me.columnId_AccountingIitemBody = New Global.System.Data.DataColumn("Id_AccountingIitemBody", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_AccountingIitemBody)
            Me.columnId_Account_FK = New Global.System.Data.DataColumn("Id_Account_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Account_FK)
            Me.columnNumberAccount = New Global.System.Data.DataColumn("NumberAccount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberAccount)
            Me.columnConcept_AccountingIitemBody = New Global.System.Data.DataColumn("Concept_AccountingIitemBody", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcept_AccountingIitemBody)
            Me.columnItem_Charge = New Global.System.Data.DataColumn("Item_Charge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Charge)
            Me.columnIteml_Deposit = New Global.System.Data.DataColumn("Iteml_Deposit", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIteml_Deposit)
            Me.columnNomCuentaOrigen = New Global.System.Data.DataColumn("NomCuentaOrigen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNomCuentaOrigen)
            Me.columnNomCuentaPadre = New Global.System.Data.DataColumn("NomCuentaPadre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNomCuentaPadre)
            Me.columnNoCuentaPadre = New Global.System.Data.DataColumn("NoCuentaPadre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoCuentaPadre)
            Me.columnId_AccountingIitemHeading.AutoIncrement = true
            Me.columnId_AccountingIitemHeading.AllowDBNull = false
            Me.columnId_AccountingIitemHeading.ReadOnly = true
            Me.columnConcept_AccountingIitemHeading.MaxLength = 100
            Me.columnUsersCreate.MaxLength = 50
            Me.columnId_AccountingIitemBody.AutoIncrement = true
            Me.columnId_AccountingIitemBody.AllowDBNull = false
            Me.columnId_AccountingIitemBody.ReadOnly = true
            Me.columnNumberAccount.MaxLength = 100
            Me.columnConcept_AccountingIitemBody.MaxLength = 100
            Me.columnNomCuentaOrigen.MaxLength = 50
            Me.columnNomCuentaPadre.MaxLength = 50
            Me.columnNoCuentaPadre.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_Finance_ReportAccountingAllRow() As ERP_Finance_ReportAccountingAllRow
            Return CType(Me.NewRow,ERP_Finance_ReportAccountingAllRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_Finance_ReportAccountingAllRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_Finance_ReportAccountingAllRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_Finance_ReportAccountingAllRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingAllRowChanged(Me, New ERP_Finance_ReportAccountingAllRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingAllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_Finance_ReportAccountingAllRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingAllRowChanging(Me, New ERP_Finance_ReportAccountingAllRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingAllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_Finance_ReportAccountingAllRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingAllRowDeleted(Me, New ERP_Finance_ReportAccountingAllRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingAllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_Finance_ReportAccountingAllRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingAllRowDeleting(Me, New ERP_Finance_ReportAccountingAllRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingAllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_Finance_ReportAccountingAllRow(ByVal row As ERP_Finance_ReportAccountingAllRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EPD_SatelliteERPDataSet = New EPD_SatelliteERPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_Finance_ReportAccountingAllDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_Finance_ReportAccountingDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_Finance_ReportAccountingRow)
        
        Private columnId_AccountingIitemHeading As Global.System.Data.DataColumn
        
        Private columnBusinessDay As Global.System.Data.DataColumn
        
        Private columnConcept_AccountingIitemHeading As Global.System.Data.DataColumn
        
        Private columnUsersCreate As Global.System.Data.DataColumn
        
        Private columnDateCreate As Global.System.Data.DataColumn
        
        Private columnTotal_Charge As Global.System.Data.DataColumn
        
        Private columnTotal_Deposit As Global.System.Data.DataColumn
        
        Private columnIs_Square As Global.System.Data.DataColumn
        
        Private columnIs_Posting As Global.System.Data.DataColumn
        
        Private columnDatePosting As Global.System.Data.DataColumn
        
        Private columnId_AccountingIitemBody As Global.System.Data.DataColumn
        
        Private columnId_Account_FK As Global.System.Data.DataColumn
        
        Private columnNumberAccount As Global.System.Data.DataColumn
        
        Private columnConcept_AccountingIitemBody As Global.System.Data.DataColumn
        
        Private columnItem_Charge As Global.System.Data.DataColumn
        
        Private columnIteml_Deposit As Global.System.Data.DataColumn
        
        Private columnNomCuentaOrigen As Global.System.Data.DataColumn
        
        Private columnNomCuentaPadre As Global.System.Data.DataColumn
        
        Private columnNoCuentaPadre As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_Finance_ReportAccounting"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_AccountingIitemHeadingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_AccountingIitemHeading
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessDayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessDay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Concept_AccountingIitemHeadingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcept_AccountingIitemHeading
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UsersCreateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsersCreate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateCreateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateCreate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_ChargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Charge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_DepositColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Deposit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Is_SquareColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIs_Square
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Is_PostingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIs_Posting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatePostingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatePosting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_AccountingIitemBodyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_AccountingIitemBody
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_Account_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Account_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberAccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberAccount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Concept_AccountingIitemBodyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcept_AccountingIitemBody
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Item_ChargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Charge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Iteml_DepositColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIteml_Deposit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NomCuentaOrigenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNomCuentaOrigen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NomCuentaPadreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNomCuentaPadre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoCuentaPadreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoCuentaPadre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_Finance_ReportAccountingRow
            Get
                Return CType(Me.Rows(index),ERP_Finance_ReportAccountingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingRowChanging As ERP_Finance_ReportAccountingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingRowChanged As ERP_Finance_ReportAccountingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingRowDeleting As ERP_Finance_ReportAccountingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingRowDeleted As ERP_Finance_ReportAccountingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_Finance_ReportAccountingRow(ByVal row As ERP_Finance_ReportAccountingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_Finance_ReportAccountingRow( _
                    ByVal BusinessDay As Date,  _
                    ByVal Concept_AccountingIitemHeading As String,  _
                    ByVal UsersCreate As String,  _
                    ByVal DateCreate As Date,  _
                    ByVal Total_Charge As Decimal,  _
                    ByVal Total_Deposit As Decimal,  _
                    ByVal Is_Square As Boolean,  _
                    ByVal Is_Posting As Boolean,  _
                    ByVal DatePosting As Date,  _
                    ByVal Id_Account_FK As Long,  _
                    ByVal NumberAccount As String,  _
                    ByVal Concept_AccountingIitemBody As String,  _
                    ByVal Item_Charge As Decimal,  _
                    ByVal Iteml_Deposit As Decimal,  _
                    ByVal NomCuentaOrigen As String,  _
                    ByVal NomCuentaPadre As String,  _
                    ByVal NoCuentaPadre As String) As ERP_Finance_ReportAccountingRow
            Dim rowERP_Finance_ReportAccountingRow As ERP_Finance_ReportAccountingRow = CType(Me.NewRow,ERP_Finance_ReportAccountingRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, BusinessDay, Concept_AccountingIitemHeading, UsersCreate, DateCreate, Total_Charge, Total_Deposit, Is_Square, Is_Posting, DatePosting, Nothing, Id_Account_FK, NumberAccount, Concept_AccountingIitemBody, Item_Charge, Iteml_Deposit, NomCuentaOrigen, NomCuentaPadre, NoCuentaPadre}
            rowERP_Finance_ReportAccountingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_Finance_ReportAccountingRow)
            Return rowERP_Finance_ReportAccountingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_Finance_ReportAccountingDataTable = CType(MyBase.Clone,ERP_Finance_ReportAccountingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_Finance_ReportAccountingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId_AccountingIitemHeading = MyBase.Columns("Id_AccountingIitemHeading")
            Me.columnBusinessDay = MyBase.Columns("BusinessDay")
            Me.columnConcept_AccountingIitemHeading = MyBase.Columns("Concept_AccountingIitemHeading")
            Me.columnUsersCreate = MyBase.Columns("UsersCreate")
            Me.columnDateCreate = MyBase.Columns("DateCreate")
            Me.columnTotal_Charge = MyBase.Columns("Total_Charge")
            Me.columnTotal_Deposit = MyBase.Columns("Total_Deposit")
            Me.columnIs_Square = MyBase.Columns("Is_Square")
            Me.columnIs_Posting = MyBase.Columns("Is_Posting")
            Me.columnDatePosting = MyBase.Columns("DatePosting")
            Me.columnId_AccountingIitemBody = MyBase.Columns("Id_AccountingIitemBody")
            Me.columnId_Account_FK = MyBase.Columns("Id_Account_FK")
            Me.columnNumberAccount = MyBase.Columns("NumberAccount")
            Me.columnConcept_AccountingIitemBody = MyBase.Columns("Concept_AccountingIitemBody")
            Me.columnItem_Charge = MyBase.Columns("Item_Charge")
            Me.columnIteml_Deposit = MyBase.Columns("Iteml_Deposit")
            Me.columnNomCuentaOrigen = MyBase.Columns("NomCuentaOrigen")
            Me.columnNomCuentaPadre = MyBase.Columns("NomCuentaPadre")
            Me.columnNoCuentaPadre = MyBase.Columns("NoCuentaPadre")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId_AccountingIitemHeading = New Global.System.Data.DataColumn("Id_AccountingIitemHeading", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_AccountingIitemHeading)
            Me.columnBusinessDay = New Global.System.Data.DataColumn("BusinessDay", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessDay)
            Me.columnConcept_AccountingIitemHeading = New Global.System.Data.DataColumn("Concept_AccountingIitemHeading", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcept_AccountingIitemHeading)
            Me.columnUsersCreate = New Global.System.Data.DataColumn("UsersCreate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsersCreate)
            Me.columnDateCreate = New Global.System.Data.DataColumn("DateCreate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateCreate)
            Me.columnTotal_Charge = New Global.System.Data.DataColumn("Total_Charge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Charge)
            Me.columnTotal_Deposit = New Global.System.Data.DataColumn("Total_Deposit", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Deposit)
            Me.columnIs_Square = New Global.System.Data.DataColumn("Is_Square", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIs_Square)
            Me.columnIs_Posting = New Global.System.Data.DataColumn("Is_Posting", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIs_Posting)
            Me.columnDatePosting = New Global.System.Data.DataColumn("DatePosting", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatePosting)
            Me.columnId_AccountingIitemBody = New Global.System.Data.DataColumn("Id_AccountingIitemBody", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_AccountingIitemBody)
            Me.columnId_Account_FK = New Global.System.Data.DataColumn("Id_Account_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Account_FK)
            Me.columnNumberAccount = New Global.System.Data.DataColumn("NumberAccount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberAccount)
            Me.columnConcept_AccountingIitemBody = New Global.System.Data.DataColumn("Concept_AccountingIitemBody", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcept_AccountingIitemBody)
            Me.columnItem_Charge = New Global.System.Data.DataColumn("Item_Charge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Charge)
            Me.columnIteml_Deposit = New Global.System.Data.DataColumn("Iteml_Deposit", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIteml_Deposit)
            Me.columnNomCuentaOrigen = New Global.System.Data.DataColumn("NomCuentaOrigen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNomCuentaOrigen)
            Me.columnNomCuentaPadre = New Global.System.Data.DataColumn("NomCuentaPadre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNomCuentaPadre)
            Me.columnNoCuentaPadre = New Global.System.Data.DataColumn("NoCuentaPadre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoCuentaPadre)
            Me.columnId_AccountingIitemHeading.AutoIncrement = true
            Me.columnId_AccountingIitemHeading.AutoIncrementSeed = -1
            Me.columnId_AccountingIitemHeading.AutoIncrementStep = -1
            Me.columnId_AccountingIitemHeading.AllowDBNull = false
            Me.columnId_AccountingIitemHeading.ReadOnly = true
            Me.columnConcept_AccountingIitemHeading.MaxLength = 100
            Me.columnUsersCreate.MaxLength = 50
            Me.columnId_AccountingIitemBody.AutoIncrement = true
            Me.columnId_AccountingIitemBody.AutoIncrementSeed = -1
            Me.columnId_AccountingIitemBody.AutoIncrementStep = -1
            Me.columnId_AccountingIitemBody.AllowDBNull = false
            Me.columnId_AccountingIitemBody.ReadOnly = true
            Me.columnNumberAccount.MaxLength = 100
            Me.columnConcept_AccountingIitemBody.MaxLength = 100
            Me.columnNomCuentaOrigen.MaxLength = 50
            Me.columnNomCuentaPadre.MaxLength = 50
            Me.columnNoCuentaPadre.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_Finance_ReportAccountingRow() As ERP_Finance_ReportAccountingRow
            Return CType(Me.NewRow,ERP_Finance_ReportAccountingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_Finance_ReportAccountingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_Finance_ReportAccountingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_Finance_ReportAccountingRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingRowChanged(Me, New ERP_Finance_ReportAccountingRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_Finance_ReportAccountingRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingRowChanging(Me, New ERP_Finance_ReportAccountingRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_Finance_ReportAccountingRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingRowDeleted(Me, New ERP_Finance_ReportAccountingRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_Finance_ReportAccountingRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingRowDeleting(Me, New ERP_Finance_ReportAccountingRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_Finance_ReportAccountingRow(ByVal row As ERP_Finance_ReportAccountingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EPD_SatelliteERPDataSet = New EPD_SatelliteERPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_Finance_ReportAccountingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_Finance_ReportAccountingHighDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_Finance_ReportAccountingHighRow)
        
        Private columnNumeroCuentaContable As Global.System.Data.DataColumn
        
        Private columnNombreCuentaContable As Global.System.Data.DataColumn
        
        Private columnId_Company_FK As Global.System.Data.DataColumn
        
        Private columnNumeroCuentaContable_m As Global.System.Data.DataColumn
        
        Private columnTotal_BalancePrevious As Global.System.Data.DataColumn
        
        Private columnTotal_Charge As Global.System.Data.DataColumn
        
        Private columnTotal_Deposit As Global.System.Data.DataColumn
        
        Private columnTotal_BalanceCurrent As Global.System.Data.DataColumn
        
        Private columnTotal_Acreedor As Global.System.Data.DataColumn
        
        Private columnTotal_Deudor As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_Finance_ReportAccountingHigh"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumeroCuentaContableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroCuentaContable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NombreCuentaContableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreCuentaContable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_Company_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Company_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumeroCuentaContable_mColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroCuentaContable_m
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_BalancePreviousColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_BalancePrevious
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_ChargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Charge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_DepositColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Deposit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_BalanceCurrentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_BalanceCurrent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_AcreedorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Acreedor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_DeudorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Deudor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_Finance_ReportAccountingHighRow
            Get
                Return CType(Me.Rows(index),ERP_Finance_ReportAccountingHighRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingHighRowChanging As ERP_Finance_ReportAccountingHighRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingHighRowChanged As ERP_Finance_ReportAccountingHighRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingHighRowDeleting As ERP_Finance_ReportAccountingHighRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportAccountingHighRowDeleted As ERP_Finance_ReportAccountingHighRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_Finance_ReportAccountingHighRow(ByVal row As ERP_Finance_ReportAccountingHighRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_Finance_ReportAccountingHighRow(ByVal NumeroCuentaContable As String, ByVal NombreCuentaContable As String, ByVal Id_Company_FK As Long, ByVal NumeroCuentaContable_m As String, ByVal Total_BalancePrevious As Decimal, ByVal Total_Charge As Decimal, ByVal Total_Deposit As Decimal, ByVal Total_BalanceCurrent As Decimal, ByVal Total_Acreedor As Decimal, ByVal Total_Deudor As Decimal) As ERP_Finance_ReportAccountingHighRow
            Dim rowERP_Finance_ReportAccountingHighRow As ERP_Finance_ReportAccountingHighRow = CType(Me.NewRow,ERP_Finance_ReportAccountingHighRow)
            Dim columnValuesArray() As Object = New Object() {NumeroCuentaContable, NombreCuentaContable, Id_Company_FK, NumeroCuentaContable_m, Total_BalancePrevious, Total_Charge, Total_Deposit, Total_BalanceCurrent, Total_Acreedor, Total_Deudor}
            rowERP_Finance_ReportAccountingHighRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_Finance_ReportAccountingHighRow)
            Return rowERP_Finance_ReportAccountingHighRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_Finance_ReportAccountingHighDataTable = CType(MyBase.Clone,ERP_Finance_ReportAccountingHighDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_Finance_ReportAccountingHighDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNumeroCuentaContable = MyBase.Columns("NumeroCuentaContable")
            Me.columnNombreCuentaContable = MyBase.Columns("NombreCuentaContable")
            Me.columnId_Company_FK = MyBase.Columns("Id_Company_FK")
            Me.columnNumeroCuentaContable_m = MyBase.Columns("NumeroCuentaContable_m")
            Me.columnTotal_BalancePrevious = MyBase.Columns("Total_BalancePrevious")
            Me.columnTotal_Charge = MyBase.Columns("Total_Charge")
            Me.columnTotal_Deposit = MyBase.Columns("Total_Deposit")
            Me.columnTotal_BalanceCurrent = MyBase.Columns("Total_BalanceCurrent")
            Me.columnTotal_Acreedor = MyBase.Columns("Total_Acreedor")
            Me.columnTotal_Deudor = MyBase.Columns("Total_Deudor")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNumeroCuentaContable = New Global.System.Data.DataColumn("NumeroCuentaContable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroCuentaContable)
            Me.columnNombreCuentaContable = New Global.System.Data.DataColumn("NombreCuentaContable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreCuentaContable)
            Me.columnId_Company_FK = New Global.System.Data.DataColumn("Id_Company_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Company_FK)
            Me.columnNumeroCuentaContable_m = New Global.System.Data.DataColumn("NumeroCuentaContable_m", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroCuentaContable_m)
            Me.columnTotal_BalancePrevious = New Global.System.Data.DataColumn("Total_BalancePrevious", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_BalancePrevious)
            Me.columnTotal_Charge = New Global.System.Data.DataColumn("Total_Charge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Charge)
            Me.columnTotal_Deposit = New Global.System.Data.DataColumn("Total_Deposit", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Deposit)
            Me.columnTotal_BalanceCurrent = New Global.System.Data.DataColumn("Total_BalanceCurrent", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_BalanceCurrent)
            Me.columnTotal_Acreedor = New Global.System.Data.DataColumn("Total_Acreedor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Acreedor)
            Me.columnTotal_Deudor = New Global.System.Data.DataColumn("Total_Deudor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Deudor)
            Me.columnNumeroCuentaContable.MaxLength = 50
            Me.columnNombreCuentaContable.MaxLength = 50
            Me.columnNumeroCuentaContable_m.ReadOnly = true
            Me.columnNumeroCuentaContable_m.MaxLength = 50
            Me.columnTotal_BalancePrevious.ReadOnly = true
            Me.columnTotal_Charge.ReadOnly = true
            Me.columnTotal_Deposit.ReadOnly = true
            Me.columnTotal_BalanceCurrent.ReadOnly = true
            Me.columnTotal_Acreedor.ReadOnly = true
            Me.columnTotal_Deudor.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_Finance_ReportAccountingHighRow() As ERP_Finance_ReportAccountingHighRow
            Return CType(Me.NewRow,ERP_Finance_ReportAccountingHighRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_Finance_ReportAccountingHighRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_Finance_ReportAccountingHighRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_Finance_ReportAccountingHighRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingHighRowChanged(Me, New ERP_Finance_ReportAccountingHighRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingHighRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_Finance_ReportAccountingHighRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingHighRowChanging(Me, New ERP_Finance_ReportAccountingHighRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingHighRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_Finance_ReportAccountingHighRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingHighRowDeleted(Me, New ERP_Finance_ReportAccountingHighRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingHighRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_Finance_ReportAccountingHighRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportAccountingHighRowDeleting(Me, New ERP_Finance_ReportAccountingHighRowChangeEvent(CType(e.Row,ERP_Finance_ReportAccountingHighRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_Finance_ReportAccountingHighRow(ByVal row As ERP_Finance_ReportAccountingHighRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EPD_SatelliteERPDataSet = New EPD_SatelliteERPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_Finance_ReportAccountingHighDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_Finance_Reports_SubledgerDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_Finance_Reports_SubledgerRow)
        
        Private columnNumeroCuentaContable As Global.System.Data.DataColumn
        
        Private columnNombreCuentaContable As Global.System.Data.DataColumn
        
        Private columnTotal_BalancePrevious As Global.System.Data.DataColumn
        
        Private columnTotal_Charge As Global.System.Data.DataColumn
        
        Private columnTotal_Deposit As Global.System.Data.DataColumn
        
        Private columnTotal_BalanceCurrent As Global.System.Data.DataColumn
        
        Private columnIs_Detail As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_Finance_Reports_Subledger"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumeroCuentaContableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroCuentaContable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NombreCuentaContableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreCuentaContable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_BalancePreviousColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_BalancePrevious
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_ChargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Charge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_DepositColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_Deposit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_BalanceCurrentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_BalanceCurrent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Is_DetailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIs_Detail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_Finance_Reports_SubledgerRow
            Get
                Return CType(Me.Rows(index),ERP_Finance_Reports_SubledgerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Reports_SubledgerRowChanging As ERP_Finance_Reports_SubledgerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Reports_SubledgerRowChanged As ERP_Finance_Reports_SubledgerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Reports_SubledgerRowDeleting As ERP_Finance_Reports_SubledgerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Reports_SubledgerRowDeleted As ERP_Finance_Reports_SubledgerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_Finance_Reports_SubledgerRow(ByVal row As ERP_Finance_Reports_SubledgerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_Finance_Reports_SubledgerRow(ByVal NumeroCuentaContable As String, ByVal NombreCuentaContable As String, ByVal Total_BalancePrevious As Decimal, ByVal Total_Charge As Decimal, ByVal Total_Deposit As Decimal, ByVal Total_BalanceCurrent As Decimal, ByVal Is_Detail As Boolean) As ERP_Finance_Reports_SubledgerRow
            Dim rowERP_Finance_Reports_SubledgerRow As ERP_Finance_Reports_SubledgerRow = CType(Me.NewRow,ERP_Finance_Reports_SubledgerRow)
            Dim columnValuesArray() As Object = New Object() {NumeroCuentaContable, NombreCuentaContable, Total_BalancePrevious, Total_Charge, Total_Deposit, Total_BalanceCurrent, Is_Detail}
            rowERP_Finance_Reports_SubledgerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_Finance_Reports_SubledgerRow)
            Return rowERP_Finance_Reports_SubledgerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_Finance_Reports_SubledgerDataTable = CType(MyBase.Clone,ERP_Finance_Reports_SubledgerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_Finance_Reports_SubledgerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNumeroCuentaContable = MyBase.Columns("NumeroCuentaContable")
            Me.columnNombreCuentaContable = MyBase.Columns("NombreCuentaContable")
            Me.columnTotal_BalancePrevious = MyBase.Columns("Total_BalancePrevious")
            Me.columnTotal_Charge = MyBase.Columns("Total_Charge")
            Me.columnTotal_Deposit = MyBase.Columns("Total_Deposit")
            Me.columnTotal_BalanceCurrent = MyBase.Columns("Total_BalanceCurrent")
            Me.columnIs_Detail = MyBase.Columns("Is_Detail")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNumeroCuentaContable = New Global.System.Data.DataColumn("NumeroCuentaContable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroCuentaContable)
            Me.columnNombreCuentaContable = New Global.System.Data.DataColumn("NombreCuentaContable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreCuentaContable)
            Me.columnTotal_BalancePrevious = New Global.System.Data.DataColumn("Total_BalancePrevious", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_BalancePrevious)
            Me.columnTotal_Charge = New Global.System.Data.DataColumn("Total_Charge", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Charge)
            Me.columnTotal_Deposit = New Global.System.Data.DataColumn("Total_Deposit", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_Deposit)
            Me.columnTotal_BalanceCurrent = New Global.System.Data.DataColumn("Total_BalanceCurrent", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_BalanceCurrent)
            Me.columnIs_Detail = New Global.System.Data.DataColumn("Is_Detail", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIs_Detail)
            Me.columnNumeroCuentaContable.MaxLength = 50
            Me.columnNombreCuentaContable.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_Finance_Reports_SubledgerRow() As ERP_Finance_Reports_SubledgerRow
            Return CType(Me.NewRow,ERP_Finance_Reports_SubledgerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_Finance_Reports_SubledgerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_Finance_Reports_SubledgerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_Finance_Reports_SubledgerRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Reports_SubledgerRowChanged(Me, New ERP_Finance_Reports_SubledgerRowChangeEvent(CType(e.Row,ERP_Finance_Reports_SubledgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_Finance_Reports_SubledgerRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Reports_SubledgerRowChanging(Me, New ERP_Finance_Reports_SubledgerRowChangeEvent(CType(e.Row,ERP_Finance_Reports_SubledgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_Finance_Reports_SubledgerRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Reports_SubledgerRowDeleted(Me, New ERP_Finance_Reports_SubledgerRowChangeEvent(CType(e.Row,ERP_Finance_Reports_SubledgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_Finance_Reports_SubledgerRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Reports_SubledgerRowDeleting(Me, New ERP_Finance_Reports_SubledgerRowChangeEvent(CType(e.Row,ERP_Finance_Reports_SubledgerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_Finance_Reports_SubledgerRow(ByVal row As ERP_Finance_Reports_SubledgerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EPD_SatelliteERPDataSet = New EPD_SatelliteERPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_Finance_Reports_SubledgerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_Finance_ReportBalanceDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_Finance_ReportBalanceRow)
        
        Private columnID_CashFlow As Global.System.Data.DataColumn
        
        Private columnID_CashFlowParent As Global.System.Data.DataColumn
        
        Private columnDescription_CashFlowTop As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnTotal_BalanceCurrent As Global.System.Data.DataColumn
        
        Private columnDescription_CashFlow As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_Finance_ReportBalance"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_CashFlowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CashFlow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_CashFlowParentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CashFlowParent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Description_CashFlowTopColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription_CashFlowTop
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total_BalanceCurrentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal_BalanceCurrent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Description_CashFlowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription_CashFlow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_Finance_ReportBalanceRow
            Get
                Return CType(Me.Rows(index),ERP_Finance_ReportBalanceRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportBalanceRowChanging As ERP_Finance_ReportBalanceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportBalanceRowChanged As ERP_Finance_ReportBalanceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportBalanceRowDeleting As ERP_Finance_ReportBalanceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_ReportBalanceRowDeleted As ERP_Finance_ReportBalanceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_Finance_ReportBalanceRow(ByVal row As ERP_Finance_ReportBalanceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_Finance_ReportBalanceRow(ByVal Description_CashFlowTop As String, ByVal Description As String, ByVal Total_BalanceCurrent As Decimal, ByVal Description_CashFlow As String) As ERP_Finance_ReportBalanceRow
            Dim rowERP_Finance_ReportBalanceRow As ERP_Finance_ReportBalanceRow = CType(Me.NewRow,ERP_Finance_ReportBalanceRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, Description_CashFlowTop, Description, Total_BalanceCurrent, Description_CashFlow}
            rowERP_Finance_ReportBalanceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_Finance_ReportBalanceRow)
            Return rowERP_Finance_ReportBalanceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_Finance_ReportBalanceDataTable = CType(MyBase.Clone,ERP_Finance_ReportBalanceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_Finance_ReportBalanceDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_CashFlow = MyBase.Columns("ID_CashFlow")
            Me.columnID_CashFlowParent = MyBase.Columns("ID_CashFlowParent")
            Me.columnDescription_CashFlowTop = MyBase.Columns("Description_CashFlowTop")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnTotal_BalanceCurrent = MyBase.Columns("Total_BalanceCurrent")
            Me.columnDescription_CashFlow = MyBase.Columns("Description_CashFlow")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_CashFlow = New Global.System.Data.DataColumn("ID_CashFlow", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CashFlow)
            Me.columnID_CashFlowParent = New Global.System.Data.DataColumn("ID_CashFlowParent", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CashFlowParent)
            Me.columnDescription_CashFlowTop = New Global.System.Data.DataColumn("Description_CashFlowTop", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription_CashFlowTop)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnTotal_BalanceCurrent = New Global.System.Data.DataColumn("Total_BalanceCurrent", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal_BalanceCurrent)
            Me.columnDescription_CashFlow = New Global.System.Data.DataColumn("Description_CashFlow", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription_CashFlow)
            Me.columnID_CashFlow.AutoIncrement = true
            Me.columnID_CashFlow.AutoIncrementSeed = -1
            Me.columnID_CashFlow.AutoIncrementStep = -1
            Me.columnID_CashFlow.AllowDBNull = false
            Me.columnID_CashFlow.ReadOnly = true
            Me.columnID_CashFlowParent.AutoIncrement = true
            Me.columnID_CashFlowParent.AutoIncrementSeed = -1
            Me.columnID_CashFlowParent.AutoIncrementStep = -1
            Me.columnID_CashFlowParent.AllowDBNull = false
            Me.columnID_CashFlowParent.ReadOnly = true
            Me.columnDescription_CashFlowTop.MaxLength = 50
            Me.columnDescription.MaxLength = 50
            Me.columnTotal_BalanceCurrent.ReadOnly = true
            Me.columnDescription_CashFlow.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_Finance_ReportBalanceRow() As ERP_Finance_ReportBalanceRow
            Return CType(Me.NewRow,ERP_Finance_ReportBalanceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_Finance_ReportBalanceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_Finance_ReportBalanceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_Finance_ReportBalanceRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportBalanceRowChanged(Me, New ERP_Finance_ReportBalanceRowChangeEvent(CType(e.Row,ERP_Finance_ReportBalanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_Finance_ReportBalanceRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportBalanceRowChanging(Me, New ERP_Finance_ReportBalanceRowChangeEvent(CType(e.Row,ERP_Finance_ReportBalanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_Finance_ReportBalanceRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportBalanceRowDeleted(Me, New ERP_Finance_ReportBalanceRowChangeEvent(CType(e.Row,ERP_Finance_ReportBalanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_Finance_ReportBalanceRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_ReportBalanceRowDeleting(Me, New ERP_Finance_ReportBalanceRowChangeEvent(CType(e.Row,ERP_Finance_ReportBalanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_Finance_ReportBalanceRow(ByVal row As ERP_Finance_ReportBalanceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EPD_SatelliteERPDataSet = New EPD_SatelliteERPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_Finance_ReportBalanceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow)
        
        Private columnID_TransactionHeader As Global.System.Data.DataColumn
        
        Private columnBusinessDay As Global.System.Data.DataColumn
        
        Private columnID_Customer_FK As Global.System.Data.DataColumn
        
        Private columnTax_Registration_Number As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnTurning_Company As Global.System.Data.DataColumn
        
        Private columnIVA_Paid As Global.System.Data.DataColumn
        
        Private columnCommercial_Name As Global.System.Data.DataColumn
        
        Private columnFullpayment As Global.System.Data.DataColumn
        
        Private columnTax_Identification_Number As Global.System.Data.DataColumn
        
        Private columnDescriptionCustomer As Global.System.Data.DataColumn
        
        Private columnUsersCreate As Global.System.Data.DataColumn
        
        Private columnDateCreate As Global.System.Data.DataColumn
        
        Private columnStatusTransaction As Global.System.Data.DataColumn
        
        Private columnDateCancellation As Global.System.Data.DataColumn
        
        Private columnUsersCancellation As Global.System.Data.DataColumn
        
        Private columnName_Department As Global.System.Data.DataColumn
        
        Private columnID_TransactionDetail As Global.System.Data.DataColumn
        
        Private columnID_Company_FK As Global.System.Data.DataColumn
        
        Private columnID_TransactionHeader_FK As Global.System.Data.DataColumn
        
        Private columnID_Product_FK As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnQuantity As Global.System.Data.DataColumn
        
        Private columnPriceWithIVA As Global.System.Data.DataColumn
        
        Private columnPriceWithoutIva As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnTotalAmount As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnExempt As Global.System.Data.DataColumn
        
        Private columnAdmissionDate As Global.System.Data.DataColumn
        
        Private columnBusinessDay1 As Global.System.Data.DataColumn
        
        Private columnCOTRANS As Global.System.Data.DataColumn
        
        Private columnFOVIAL As Global.System.Data.DataColumn
        
        Private columnUnity As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_SP_Invoice_Quotation_TransactionDetail_Select"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_TransactionHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_TransactionHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessDayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessDay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Customer_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Customer_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Tax_Registration_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTax_Registration_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Turning_CompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTurning_Company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVA_PaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA_Paid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Commercial_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCommercial_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FullpaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullpayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Tax_Identification_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTax_Identification_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionCustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescriptionCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UsersCreateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsersCreate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateCreateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateCreate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusTransactionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusTransaction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateCancellationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateCancellation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UsersCancellationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsersCancellation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_DepartmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Department
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_TransactionDetailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_TransactionDetail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Company_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Company_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_TransactionHeader_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_TransactionHeader_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Product_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Product_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceWithIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriceWithIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceWithoutIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriceWithoutIva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExemptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExempt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdmissionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdmissionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessDay1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessDay1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTRANSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTRANS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FOVIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFOVIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UnityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow
            Get
                Return CType(Me.Rows(index),ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChanging As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChanged As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowDeleting As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowDeleted As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_SP_Invoice_Quotation_TransactionDetail_SelectRow(ByVal row As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_SP_Invoice_Quotation_TransactionDetail_SelectRow( _
                    ByVal BusinessDay As Date,  _
                    ByVal ID_Customer_FK As Long,  _
                    ByVal Tax_Registration_Number As String,  _
                    ByVal Address As String,  _
                    ByVal Turning_Company As String,  _
                    ByVal IVA_Paid As Decimal,  _
                    ByVal Commercial_Name As String,  _
                    ByVal Fullpayment As Decimal,  _
                    ByVal Tax_Identification_Number As String,  _
                    ByVal DescriptionCustomer As String,  _
                    ByVal UsersCreate As String,  _
                    ByVal DateCreate As Date,  _
                    ByVal StatusTransaction As Boolean,  _
                    ByVal DateCancellation As Date,  _
                    ByVal UsersCancellation As String,  _
                    ByVal Name_Department As String,  _
                    ByVal ID_Company_FK As Long,  _
                    ByVal ID_TransactionHeader_FK As Long,  _
                    ByVal ID_Product_FK As Long,  _
                    ByVal Description As String,  _
                    ByVal Quantity As Single,  _
                    ByVal PriceWithIVA As Single,  _
                    ByVal PriceWithoutIva As Single,  _
                    ByVal Discount As Single,  _
                    ByVal TotalAmount As Single,  _
                    ByVal Status As Boolean,  _
                    ByVal Exempt As Boolean,  _
                    ByVal AdmissionDate As Date,  _
                    ByVal BusinessDay1 As Date,  _
                    ByVal COTRANS As Decimal,  _
                    ByVal FOVIAL As Decimal,  _
                    ByVal Unity As String) As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow
            Dim rowERP_SP_Invoice_Quotation_TransactionDetail_SelectRow As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow = CType(Me.NewRow,ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, BusinessDay, ID_Customer_FK, Tax_Registration_Number, Address, Turning_Company, IVA_Paid, Commercial_Name, Fullpayment, Tax_Identification_Number, DescriptionCustomer, UsersCreate, DateCreate, StatusTransaction, DateCancellation, UsersCancellation, Name_Department, Nothing, ID_Company_FK, ID_TransactionHeader_FK, ID_Product_FK, Description, Quantity, PriceWithIVA, PriceWithoutIva, Discount, TotalAmount, Status, Exempt, AdmissionDate, BusinessDay1, COTRANS, FOVIAL, Unity}
            rowERP_SP_Invoice_Quotation_TransactionDetail_SelectRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_SP_Invoice_Quotation_TransactionDetail_SelectRow)
            Return rowERP_SP_Invoice_Quotation_TransactionDetail_SelectRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID_TransactionDetail(ByVal ID_TransactionDetail As Long) As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow
            Return CType(Me.Rows.Find(New Object() {ID_TransactionDetail}),ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable = CType(MyBase.Clone,ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_TransactionHeader = MyBase.Columns("ID_TransactionHeader")
            Me.columnBusinessDay = MyBase.Columns("BusinessDay")
            Me.columnID_Customer_FK = MyBase.Columns("ID_Customer_FK")
            Me.columnTax_Registration_Number = MyBase.Columns("Tax_Registration_Number")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnTurning_Company = MyBase.Columns("Turning_Company")
            Me.columnIVA_Paid = MyBase.Columns("IVA_Paid")
            Me.columnCommercial_Name = MyBase.Columns("Commercial_Name")
            Me.columnFullpayment = MyBase.Columns("Fullpayment")
            Me.columnTax_Identification_Number = MyBase.Columns("Tax_Identification_Number")
            Me.columnDescriptionCustomer = MyBase.Columns("DescriptionCustomer")
            Me.columnUsersCreate = MyBase.Columns("UsersCreate")
            Me.columnDateCreate = MyBase.Columns("DateCreate")
            Me.columnStatusTransaction = MyBase.Columns("StatusTransaction")
            Me.columnDateCancellation = MyBase.Columns("DateCancellation")
            Me.columnUsersCancellation = MyBase.Columns("UsersCancellation")
            Me.columnName_Department = MyBase.Columns("Name_Department")
            Me.columnID_TransactionDetail = MyBase.Columns("ID_TransactionDetail")
            Me.columnID_Company_FK = MyBase.Columns("ID_Company_FK")
            Me.columnID_TransactionHeader_FK = MyBase.Columns("ID_TransactionHeader_FK")
            Me.columnID_Product_FK = MyBase.Columns("ID_Product_FK")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnQuantity = MyBase.Columns("Quantity")
            Me.columnPriceWithIVA = MyBase.Columns("PriceWithIVA")
            Me.columnPriceWithoutIva = MyBase.Columns("PriceWithoutIva")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnTotalAmount = MyBase.Columns("TotalAmount")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnExempt = MyBase.Columns("Exempt")
            Me.columnAdmissionDate = MyBase.Columns("AdmissionDate")
            Me.columnBusinessDay1 = MyBase.Columns("BusinessDay1")
            Me.columnCOTRANS = MyBase.Columns("COTRANS")
            Me.columnFOVIAL = MyBase.Columns("FOVIAL")
            Me.columnUnity = MyBase.Columns("Unity")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_TransactionHeader = New Global.System.Data.DataColumn("ID_TransactionHeader", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_TransactionHeader)
            Me.columnBusinessDay = New Global.System.Data.DataColumn("BusinessDay", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessDay)
            Me.columnID_Customer_FK = New Global.System.Data.DataColumn("ID_Customer_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Customer_FK)
            Me.columnTax_Registration_Number = New Global.System.Data.DataColumn("Tax_Registration_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTax_Registration_Number)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnTurning_Company = New Global.System.Data.DataColumn("Turning_Company", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTurning_Company)
            Me.columnIVA_Paid = New Global.System.Data.DataColumn("IVA_Paid", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA_Paid)
            Me.columnCommercial_Name = New Global.System.Data.DataColumn("Commercial_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCommercial_Name)
            Me.columnFullpayment = New Global.System.Data.DataColumn("Fullpayment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullpayment)
            Me.columnTax_Identification_Number = New Global.System.Data.DataColumn("Tax_Identification_Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTax_Identification_Number)
            Me.columnDescriptionCustomer = New Global.System.Data.DataColumn("DescriptionCustomer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescriptionCustomer)
            Me.columnUsersCreate = New Global.System.Data.DataColumn("UsersCreate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsersCreate)
            Me.columnDateCreate = New Global.System.Data.DataColumn("DateCreate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateCreate)
            Me.columnStatusTransaction = New Global.System.Data.DataColumn("StatusTransaction", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusTransaction)
            Me.columnDateCancellation = New Global.System.Data.DataColumn("DateCancellation", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateCancellation)
            Me.columnUsersCancellation = New Global.System.Data.DataColumn("UsersCancellation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsersCancellation)
            Me.columnName_Department = New Global.System.Data.DataColumn("Name_Department", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Department)
            Me.columnID_TransactionDetail = New Global.System.Data.DataColumn("ID_TransactionDetail", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_TransactionDetail)
            Me.columnID_Company_FK = New Global.System.Data.DataColumn("ID_Company_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Company_FK)
            Me.columnID_TransactionHeader_FK = New Global.System.Data.DataColumn("ID_TransactionHeader_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_TransactionHeader_FK)
            Me.columnID_Product_FK = New Global.System.Data.DataColumn("ID_Product_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Product_FK)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnQuantity = New Global.System.Data.DataColumn("Quantity", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuantity)
            Me.columnPriceWithIVA = New Global.System.Data.DataColumn("PriceWithIVA", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriceWithIVA)
            Me.columnPriceWithoutIva = New Global.System.Data.DataColumn("PriceWithoutIva", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriceWithoutIva)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnTotalAmount = New Global.System.Data.DataColumn("TotalAmount", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalAmount)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnExempt = New Global.System.Data.DataColumn("Exempt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExempt)
            Me.columnAdmissionDate = New Global.System.Data.DataColumn("AdmissionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdmissionDate)
            Me.columnBusinessDay1 = New Global.System.Data.DataColumn("BusinessDay1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessDay1)
            Me.columnCOTRANS = New Global.System.Data.DataColumn("COTRANS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTRANS)
            Me.columnFOVIAL = New Global.System.Data.DataColumn("FOVIAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFOVIAL)
            Me.columnUnity = New Global.System.Data.DataColumn("Unity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnity)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_TransactionDetail}, true))
            Me.columnID_TransactionHeader.AutoIncrement = true
            Me.columnID_TransactionHeader.AutoIncrementSeed = -1
            Me.columnID_TransactionHeader.AutoIncrementStep = -1
            Me.columnID_TransactionHeader.AllowDBNull = false
            Me.columnID_TransactionHeader.ReadOnly = true
            Me.columnTax_Registration_Number.MaxLength = 20
            Me.columnAddress.MaxLength = 150
            Me.columnTurning_Company.ReadOnly = true
            Me.columnTurning_Company.MaxLength = 50
            Me.columnCommercial_Name.MaxLength = 100
            Me.columnTax_Identification_Number.MaxLength = 17
            Me.columnDescriptionCustomer.MaxLength = 50
            Me.columnUsersCreate.MaxLength = 50
            Me.columnUsersCancellation.MaxLength = 50
            Me.columnName_Department.MaxLength = 50
            Me.columnID_TransactionDetail.AutoIncrement = true
            Me.columnID_TransactionDetail.AutoIncrementSeed = -1
            Me.columnID_TransactionDetail.AutoIncrementStep = -1
            Me.columnID_TransactionDetail.AllowDBNull = false
            Me.columnID_TransactionDetail.ReadOnly = true
            Me.columnID_TransactionDetail.Unique = true
            Me.columnDescription.MaxLength = 40
            Me.columnUnity.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_SP_Invoice_Quotation_TransactionDetail_SelectRow() As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow
            Return CType(Me.NewRow,ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChanged(Me, New ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEvent(CType(e.Row,ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChanging(Me, New ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEvent(CType(e.Row,ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowDeleted(Me, New ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEvent(CType(e.Row,ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowDeleting(Me, New ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEvent(CType(e.Row,ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_SP_Invoice_Quotation_TransactionDetail_SelectRow(ByVal row As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EPD_SatelliteERPDataSet = New EPD_SatelliteERPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_Finance_Reports_AccountStatusDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_Finance_Reports_AccountStatusRow)
        
        Private columnid_Customer As Global.System.Data.DataColumn
        
        Private columnName_Company As Global.System.Data.DataColumn
        
        Private columnConcepto As Global.System.Data.DataColumn
        
        Private columnDateStart As Global.System.Data.DataColumn
        
        Private columnDateEnd As Global.System.Data.DataColumn
        
        Private columnvalor As Global.System.Data.DataColumn
        
        Private columnCreditAvailable As Global.System.Data.DataColumn
        
        Private columnSaldoDeudor As Global.System.Data.DataColumn
        
        Private columnDescription_Credit As Global.System.Data.DataColumn
        
        Private columnQuotaNumber As Global.System.Data.DataColumn
        
        Private columnPaymentDate As Global.System.Data.DataColumn
        
        Private columnAmmount As Global.System.Data.DataColumn
        
        Private columnIs_Active As Global.System.Data.DataColumn
        
        Private columnDate_Payment As Global.System.Data.DataColumn
        
        Private columnID_AccountsDetails As Global.System.Data.DataColumn
        
        Private columnId_LineaDeCredito As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_Finance_Reports_AccountStatus"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property id_CustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_Customer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_CompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateStartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateStart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateEndColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateEnd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property valorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreditAvailableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreditAvailable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SaldoDeudorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldoDeudor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Description_CreditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription_Credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuotaNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuotaNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PaymentDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Is_ActiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIs_Active
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Date_PaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Payment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_AccountsDetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_AccountsDetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Id_LineaDeCreditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_LineaDeCredito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_Finance_Reports_AccountStatusRow
            Get
                Return CType(Me.Rows(index),ERP_Finance_Reports_AccountStatusRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Reports_AccountStatusRowChanging As ERP_Finance_Reports_AccountStatusRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Reports_AccountStatusRowChanged As ERP_Finance_Reports_AccountStatusRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Reports_AccountStatusRowDeleting As ERP_Finance_Reports_AccountStatusRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_Finance_Reports_AccountStatusRowDeleted As ERP_Finance_Reports_AccountStatusRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_Finance_Reports_AccountStatusRow(ByVal row As ERP_Finance_Reports_AccountStatusRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_Finance_Reports_AccountStatusRow(ByVal Name_Company As String, ByVal Concepto As String, ByVal DateStart As Date, ByVal DateEnd As Date, ByVal valor As Decimal, ByVal CreditAvailable As Decimal, ByVal SaldoDeudor As Decimal, ByVal Description_Credit As String, ByVal QuotaNumber As Long, ByVal PaymentDate As Date, ByVal Ammount As Decimal, ByVal Is_Active As Boolean, ByVal Date_Payment As Date) As ERP_Finance_Reports_AccountStatusRow
            Dim rowERP_Finance_Reports_AccountStatusRow As ERP_Finance_Reports_AccountStatusRow = CType(Me.NewRow,ERP_Finance_Reports_AccountStatusRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Name_Company, Concepto, DateStart, DateEnd, valor, CreditAvailable, SaldoDeudor, Description_Credit, QuotaNumber, PaymentDate, Ammount, Is_Active, Date_Payment, Nothing, Nothing}
            rowERP_Finance_Reports_AccountStatusRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_Finance_Reports_AccountStatusRow)
            Return rowERP_Finance_Reports_AccountStatusRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_Finance_Reports_AccountStatusDataTable = CType(MyBase.Clone,ERP_Finance_Reports_AccountStatusDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_Finance_Reports_AccountStatusDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_Customer = MyBase.Columns("id_Customer")
            Me.columnName_Company = MyBase.Columns("Name_Company")
            Me.columnConcepto = MyBase.Columns("Concepto")
            Me.columnDateStart = MyBase.Columns("DateStart")
            Me.columnDateEnd = MyBase.Columns("DateEnd")
            Me.columnvalor = MyBase.Columns("valor")
            Me.columnCreditAvailable = MyBase.Columns("CreditAvailable")
            Me.columnSaldoDeudor = MyBase.Columns("SaldoDeudor")
            Me.columnDescription_Credit = MyBase.Columns("Description_Credit")
            Me.columnQuotaNumber = MyBase.Columns("QuotaNumber")
            Me.columnPaymentDate = MyBase.Columns("PaymentDate")
            Me.columnAmmount = MyBase.Columns("Ammount")
            Me.columnIs_Active = MyBase.Columns("Is_Active")
            Me.columnDate_Payment = MyBase.Columns("Date_Payment")
            Me.columnID_AccountsDetails = MyBase.Columns("ID_AccountsDetails")
            Me.columnId_LineaDeCredito = MyBase.Columns("Id_LineaDeCredito")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_Customer = New Global.System.Data.DataColumn("id_Customer", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_Customer)
            Me.columnName_Company = New Global.System.Data.DataColumn("Name_Company", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Company)
            Me.columnConcepto = New Global.System.Data.DataColumn("Concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcepto)
            Me.columnDateStart = New Global.System.Data.DataColumn("DateStart", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateStart)
            Me.columnDateEnd = New Global.System.Data.DataColumn("DateEnd", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateEnd)
            Me.columnvalor = New Global.System.Data.DataColumn("valor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalor)
            Me.columnCreditAvailable = New Global.System.Data.DataColumn("CreditAvailable", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreditAvailable)
            Me.columnSaldoDeudor = New Global.System.Data.DataColumn("SaldoDeudor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldoDeudor)
            Me.columnDescription_Credit = New Global.System.Data.DataColumn("Description_Credit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription_Credit)
            Me.columnQuotaNumber = New Global.System.Data.DataColumn("QuotaNumber", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuotaNumber)
            Me.columnPaymentDate = New Global.System.Data.DataColumn("PaymentDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentDate)
            Me.columnAmmount = New Global.System.Data.DataColumn("Ammount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmmount)
            Me.columnIs_Active = New Global.System.Data.DataColumn("Is_Active", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIs_Active)
            Me.columnDate_Payment = New Global.System.Data.DataColumn("Date_Payment", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Payment)
            Me.columnID_AccountsDetails = New Global.System.Data.DataColumn("ID_AccountsDetails", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_AccountsDetails)
            Me.columnId_LineaDeCredito = New Global.System.Data.DataColumn("Id_LineaDeCredito", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_LineaDeCredito)
            Me.columnid_Customer.AutoIncrement = true
            Me.columnid_Customer.AutoIncrementSeed = -1
            Me.columnid_Customer.AutoIncrementStep = -1
            Me.columnid_Customer.AllowDBNull = false
            Me.columnid_Customer.ReadOnly = true
            Me.columnName_Company.ReadOnly = true
            Me.columnName_Company.MaxLength = 101
            Me.columnConcepto.MaxLength = 100
            Me.columnDescription_Credit.MaxLength = 50
            Me.columnID_AccountsDetails.AutoIncrement = true
            Me.columnID_AccountsDetails.AutoIncrementSeed = -1
            Me.columnID_AccountsDetails.AutoIncrementStep = -1
            Me.columnID_AccountsDetails.AllowDBNull = false
            Me.columnID_AccountsDetails.ReadOnly = true
            Me.columnId_LineaDeCredito.AutoIncrement = true
            Me.columnId_LineaDeCredito.AutoIncrementSeed = -1
            Me.columnId_LineaDeCredito.AutoIncrementStep = -1
            Me.columnId_LineaDeCredito.AllowDBNull = false
            Me.columnId_LineaDeCredito.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_Finance_Reports_AccountStatusRow() As ERP_Finance_Reports_AccountStatusRow
            Return CType(Me.NewRow,ERP_Finance_Reports_AccountStatusRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_Finance_Reports_AccountStatusRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_Finance_Reports_AccountStatusRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_Finance_Reports_AccountStatusRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Reports_AccountStatusRowChanged(Me, New ERP_Finance_Reports_AccountStatusRowChangeEvent(CType(e.Row,ERP_Finance_Reports_AccountStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_Finance_Reports_AccountStatusRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Reports_AccountStatusRowChanging(Me, New ERP_Finance_Reports_AccountStatusRowChangeEvent(CType(e.Row,ERP_Finance_Reports_AccountStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_Finance_Reports_AccountStatusRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Reports_AccountStatusRowDeleted(Me, New ERP_Finance_Reports_AccountStatusRowChangeEvent(CType(e.Row,ERP_Finance_Reports_AccountStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_Finance_Reports_AccountStatusRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_Finance_Reports_AccountStatusRowDeleting(Me, New ERP_Finance_Reports_AccountStatusRowChangeEvent(CType(e.Row,ERP_Finance_Reports_AccountStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_Finance_Reports_AccountStatusRow(ByVal row As ERP_Finance_Reports_AccountStatusRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As EPD_SatelliteERPDataSet = New EPD_SatelliteERPDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_Finance_Reports_AccountStatusDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_Finance_ReportAccountingAllRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_Finance_ReportAccountingAll As ERP_Finance_ReportAccountingAllDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_Finance_ReportAccountingAll = CType(Me.Table,ERP_Finance_ReportAccountingAllDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_AccountingIitemHeading() As Long
            Get
                Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Id_AccountingIitemHeadingColumn),Long)
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Id_AccountingIitemHeadingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessDay() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.BusinessDayColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BusinessDay' de la tabla 'ERP_Finance_ReportAccountingAll"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.BusinessDayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Concept_AccountingIitemHeading() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Concept_AccountingIitemHeadingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Concept_AccountingIitemHeading' de la tabla 'ERP_Finance_"& _ 
                            "ReportAccountingAll' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Concept_AccountingIitemHeadingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UsersCreate() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.UsersCreateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UsersCreate' de la tabla 'ERP_Finance_ReportAccountingAll"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.UsersCreateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateCreate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.DateCreateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateCreate' de la tabla 'ERP_Finance_ReportAccountingAll'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.DateCreateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_Charge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Total_ChargeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_Charge' de la tabla 'ERP_Finance_ReportAccountingAl"& _ 
                            "l' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Total_ChargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_Deposit() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Total_DepositColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_Deposit' de la tabla 'ERP_Finance_ReportAccountingA"& _ 
                            "ll' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Total_DepositColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Is_Square() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Is_SquareColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Is_Square' de la tabla 'ERP_Finance_ReportAccountingAll' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Is_SquareColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Is_Posting() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Is_PostingColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Is_Posting' de la tabla 'ERP_Finance_ReportAccountingAll'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Is_PostingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DatePosting() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.DatePostingColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DatePosting' de la tabla 'ERP_Finance_ReportAccountingAll"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.DatePostingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_AccountingIitemBody() As Long
            Get
                Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Id_AccountingIitemBodyColumn),Long)
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Id_AccountingIitemBodyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_Account_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Id_Account_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id_Account_FK' de la tabla 'ERP_Finance_ReportAccountingA"& _ 
                            "ll' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Id_Account_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberAccount() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.NumberAccountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumberAccount' de la tabla 'ERP_Finance_ReportAccountingA"& _ 
                            "ll' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.NumberAccountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Concept_AccountingIitemBody() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Concept_AccountingIitemBodyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Concept_AccountingIitemBody' de la tabla 'ERP_Finance_Rep"& _ 
                            "ortAccountingAll' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Concept_AccountingIitemBodyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Charge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Item_ChargeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Item_Charge' de la tabla 'ERP_Finance_ReportAccountingAll"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Item_ChargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Iteml_Deposit() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.Iteml_DepositColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Iteml_Deposit' de la tabla 'ERP_Finance_ReportAccountingA"& _ 
                            "ll' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.Iteml_DepositColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NomCuentaOrigen() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.NomCuentaOrigenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NomCuentaOrigen' de la tabla 'ERP_Finance_ReportAccountin"& _ 
                            "gAll' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.NomCuentaOrigenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NomCuentaPadre() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.NomCuentaPadreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NomCuentaPadre' de la tabla 'ERP_Finance_ReportAccounting"& _ 
                            "All' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.NomCuentaPadreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoCuentaPadre() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingAll.NoCuentaPadreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NoCuentaPadre' de la tabla 'ERP_Finance_ReportAccountingA"& _ 
                            "ll' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingAll.NoCuentaPadreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBusinessDayNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.BusinessDayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBusinessDayNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.BusinessDayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConcept_AccountingIitemHeadingNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.Concept_AccountingIitemHeadingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConcept_AccountingIitemHeadingNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.Concept_AccountingIitemHeadingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUsersCreateNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.UsersCreateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUsersCreateNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.UsersCreateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateCreateNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.DateCreateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateCreateNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.DateCreateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_ChargeNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.Total_ChargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_ChargeNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.Total_ChargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_DepositNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.Total_DepositColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_DepositNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.Total_DepositColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIs_SquareNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.Is_SquareColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIs_SquareNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.Is_SquareColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIs_PostingNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.Is_PostingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIs_PostingNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.Is_PostingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDatePostingNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.DatePostingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDatePostingNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.DatePostingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsId_Account_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.Id_Account_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetId_Account_FKNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.Id_Account_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberAccountNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.NumberAccountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberAccountNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.NumberAccountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConcept_AccountingIitemBodyNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.Concept_AccountingIitemBodyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConcept_AccountingIitemBodyNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.Concept_AccountingIitemBodyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_ChargeNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.Item_ChargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_ChargeNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.Item_ChargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIteml_DepositNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.Iteml_DepositColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIteml_DepositNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.Iteml_DepositColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNomCuentaOrigenNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.NomCuentaOrigenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNomCuentaOrigenNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.NomCuentaOrigenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNomCuentaPadreNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.NomCuentaPadreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNomCuentaPadreNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.NomCuentaPadreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoCuentaPadreNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingAll.NoCuentaPadreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoCuentaPadreNull()
            Me(Me.tableERP_Finance_ReportAccountingAll.NoCuentaPadreColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_Finance_ReportAccountingRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_Finance_ReportAccounting As ERP_Finance_ReportAccountingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_Finance_ReportAccounting = CType(Me.Table,ERP_Finance_ReportAccountingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_AccountingIitemHeading() As Long
            Get
                Return CType(Me(Me.tableERP_Finance_ReportAccounting.Id_AccountingIitemHeadingColumn),Long)
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Id_AccountingIitemHeadingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessDay() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.BusinessDayColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BusinessDay' de la tabla 'ERP_Finance_ReportAccounting' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.BusinessDayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Concept_AccountingIitemHeading() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.Concept_AccountingIitemHeadingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Concept_AccountingIitemHeading' de la tabla 'ERP_Finance_"& _ 
                            "ReportAccounting' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Concept_AccountingIitemHeadingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UsersCreate() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.UsersCreateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UsersCreate' de la tabla 'ERP_Finance_ReportAccounting' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.UsersCreateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateCreate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.DateCreateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateCreate' de la tabla 'ERP_Finance_ReportAccounting' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.DateCreateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_Charge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.Total_ChargeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_Charge' de la tabla 'ERP_Finance_ReportAccounting' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Total_ChargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_Deposit() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.Total_DepositColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_Deposit' de la tabla 'ERP_Finance_ReportAccounting'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Total_DepositColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Is_Square() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.Is_SquareColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Is_Square' de la tabla 'ERP_Finance_ReportAccounting' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Is_SquareColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Is_Posting() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.Is_PostingColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Is_Posting' de la tabla 'ERP_Finance_ReportAccounting' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Is_PostingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DatePosting() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.DatePostingColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DatePosting' de la tabla 'ERP_Finance_ReportAccounting' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.DatePostingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_AccountingIitemBody() As Long
            Get
                Return CType(Me(Me.tableERP_Finance_ReportAccounting.Id_AccountingIitemBodyColumn),Long)
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Id_AccountingIitemBodyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_Account_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.Id_Account_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id_Account_FK' de la tabla 'ERP_Finance_ReportAccounting'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Id_Account_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberAccount() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.NumberAccountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumberAccount' de la tabla 'ERP_Finance_ReportAccounting'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.NumberAccountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Concept_AccountingIitemBody() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.Concept_AccountingIitemBodyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Concept_AccountingIitemBody' de la tabla 'ERP_Finance_Rep"& _ 
                            "ortAccounting' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Concept_AccountingIitemBodyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Item_Charge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.Item_ChargeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Item_Charge' de la tabla 'ERP_Finance_ReportAccounting' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Item_ChargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Iteml_Deposit() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.Iteml_DepositColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Iteml_Deposit' de la tabla 'ERP_Finance_ReportAccounting'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.Iteml_DepositColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NomCuentaOrigen() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.NomCuentaOrigenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NomCuentaOrigen' de la tabla 'ERP_Finance_ReportAccountin"& _ 
                            "g' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.NomCuentaOrigenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NomCuentaPadre() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.NomCuentaPadreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NomCuentaPadre' de la tabla 'ERP_Finance_ReportAccounting"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.NomCuentaPadreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoCuentaPadre() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccounting.NoCuentaPadreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NoCuentaPadre' de la tabla 'ERP_Finance_ReportAccounting'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccounting.NoCuentaPadreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBusinessDayNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.BusinessDayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBusinessDayNull()
            Me(Me.tableERP_Finance_ReportAccounting.BusinessDayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConcept_AccountingIitemHeadingNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.Concept_AccountingIitemHeadingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConcept_AccountingIitemHeadingNull()
            Me(Me.tableERP_Finance_ReportAccounting.Concept_AccountingIitemHeadingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUsersCreateNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.UsersCreateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUsersCreateNull()
            Me(Me.tableERP_Finance_ReportAccounting.UsersCreateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateCreateNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.DateCreateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateCreateNull()
            Me(Me.tableERP_Finance_ReportAccounting.DateCreateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_ChargeNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.Total_ChargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_ChargeNull()
            Me(Me.tableERP_Finance_ReportAccounting.Total_ChargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_DepositNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.Total_DepositColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_DepositNull()
            Me(Me.tableERP_Finance_ReportAccounting.Total_DepositColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIs_SquareNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.Is_SquareColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIs_SquareNull()
            Me(Me.tableERP_Finance_ReportAccounting.Is_SquareColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIs_PostingNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.Is_PostingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIs_PostingNull()
            Me(Me.tableERP_Finance_ReportAccounting.Is_PostingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDatePostingNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.DatePostingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDatePostingNull()
            Me(Me.tableERP_Finance_ReportAccounting.DatePostingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsId_Account_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.Id_Account_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetId_Account_FKNull()
            Me(Me.tableERP_Finance_ReportAccounting.Id_Account_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberAccountNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.NumberAccountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberAccountNull()
            Me(Me.tableERP_Finance_ReportAccounting.NumberAccountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConcept_AccountingIitemBodyNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.Concept_AccountingIitemBodyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConcept_AccountingIitemBodyNull()
            Me(Me.tableERP_Finance_ReportAccounting.Concept_AccountingIitemBodyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItem_ChargeNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.Item_ChargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItem_ChargeNull()
            Me(Me.tableERP_Finance_ReportAccounting.Item_ChargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIteml_DepositNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.Iteml_DepositColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIteml_DepositNull()
            Me(Me.tableERP_Finance_ReportAccounting.Iteml_DepositColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNomCuentaOrigenNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.NomCuentaOrigenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNomCuentaOrigenNull()
            Me(Me.tableERP_Finance_ReportAccounting.NomCuentaOrigenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNomCuentaPadreNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.NomCuentaPadreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNomCuentaPadreNull()
            Me(Me.tableERP_Finance_ReportAccounting.NomCuentaPadreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoCuentaPadreNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccounting.NoCuentaPadreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoCuentaPadreNull()
            Me(Me.tableERP_Finance_ReportAccounting.NoCuentaPadreColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_Finance_ReportAccountingHighRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_Finance_ReportAccountingHigh As ERP_Finance_ReportAccountingHighDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_Finance_ReportAccountingHigh = CType(Me.Table,ERP_Finance_ReportAccountingHighDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumeroCuentaContable() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingHigh.NumeroCuentaContableColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroCuentaContable' de la tabla 'ERP_Finance_ReportAcco"& _ 
                            "untingHigh' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingHigh.NumeroCuentaContableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NombreCuentaContable() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingHigh.NombreCuentaContableColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreCuentaContable' de la tabla 'ERP_Finance_ReportAcco"& _ 
                            "untingHigh' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingHigh.NombreCuentaContableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_Company_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingHigh.Id_Company_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id_Company_FK' de la tabla 'ERP_Finance_ReportAccountingH"& _ 
                            "igh' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingHigh.Id_Company_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumeroCuentaContable_m() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingHigh.NumeroCuentaContable_mColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroCuentaContable_m' de la tabla 'ERP_Finance_ReportAc"& _ 
                            "countingHigh' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingHigh.NumeroCuentaContable_mColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_BalancePrevious() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingHigh.Total_BalancePreviousColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_BalancePrevious' de la tabla 'ERP_Finance_ReportAcc"& _ 
                            "ountingHigh' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingHigh.Total_BalancePreviousColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_Charge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingHigh.Total_ChargeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_Charge' de la tabla 'ERP_Finance_ReportAccountingHi"& _ 
                            "gh' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingHigh.Total_ChargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_Deposit() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingHigh.Total_DepositColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_Deposit' de la tabla 'ERP_Finance_ReportAccountingH"& _ 
                            "igh' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingHigh.Total_DepositColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_BalanceCurrent() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingHigh.Total_BalanceCurrentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_BalanceCurrent' de la tabla 'ERP_Finance_ReportAcco"& _ 
                            "untingHigh' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingHigh.Total_BalanceCurrentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_Acreedor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingHigh.Total_AcreedorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_Acreedor' de la tabla 'ERP_Finance_ReportAccounting"& _ 
                            "High' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingHigh.Total_AcreedorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_Deudor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportAccountingHigh.Total_DeudorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_Deudor' de la tabla 'ERP_Finance_ReportAccountingHi"& _ 
                            "gh' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportAccountingHigh.Total_DeudorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumeroCuentaContableNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingHigh.NumeroCuentaContableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumeroCuentaContableNull()
            Me(Me.tableERP_Finance_ReportAccountingHigh.NumeroCuentaContableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNombreCuentaContableNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingHigh.NombreCuentaContableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNombreCuentaContableNull()
            Me(Me.tableERP_Finance_ReportAccountingHigh.NombreCuentaContableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsId_Company_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingHigh.Id_Company_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetId_Company_FKNull()
            Me(Me.tableERP_Finance_ReportAccountingHigh.Id_Company_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumeroCuentaContable_mNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingHigh.NumeroCuentaContable_mColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumeroCuentaContable_mNull()
            Me(Me.tableERP_Finance_ReportAccountingHigh.NumeroCuentaContable_mColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_BalancePreviousNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingHigh.Total_BalancePreviousColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_BalancePreviousNull()
            Me(Me.tableERP_Finance_ReportAccountingHigh.Total_BalancePreviousColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_ChargeNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingHigh.Total_ChargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_ChargeNull()
            Me(Me.tableERP_Finance_ReportAccountingHigh.Total_ChargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_DepositNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingHigh.Total_DepositColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_DepositNull()
            Me(Me.tableERP_Finance_ReportAccountingHigh.Total_DepositColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_BalanceCurrentNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingHigh.Total_BalanceCurrentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_BalanceCurrentNull()
            Me(Me.tableERP_Finance_ReportAccountingHigh.Total_BalanceCurrentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_AcreedorNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingHigh.Total_AcreedorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_AcreedorNull()
            Me(Me.tableERP_Finance_ReportAccountingHigh.Total_AcreedorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_DeudorNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportAccountingHigh.Total_DeudorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_DeudorNull()
            Me(Me.tableERP_Finance_ReportAccountingHigh.Total_DeudorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_Finance_Reports_SubledgerRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_Finance_Reports_Subledger As ERP_Finance_Reports_SubledgerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_Finance_Reports_Subledger = CType(Me.Table,ERP_Finance_Reports_SubledgerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumeroCuentaContable() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_Subledger.NumeroCuentaContableColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroCuentaContable' de la tabla 'ERP_Finance_Reports_Su"& _ 
                            "bledger' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_Subledger.NumeroCuentaContableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NombreCuentaContable() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_Subledger.NombreCuentaContableColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreCuentaContable' de la tabla 'ERP_Finance_Reports_Su"& _ 
                            "bledger' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_Subledger.NombreCuentaContableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_BalancePrevious() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_Subledger.Total_BalancePreviousColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_BalancePrevious' de la tabla 'ERP_Finance_Reports_S"& _ 
                            "ubledger' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_Subledger.Total_BalancePreviousColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_Charge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_Subledger.Total_ChargeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_Charge' de la tabla 'ERP_Finance_Reports_Subledger'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_Subledger.Total_ChargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_Deposit() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_Subledger.Total_DepositColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_Deposit' de la tabla 'ERP_Finance_Reports_Subledger"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_Subledger.Total_DepositColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_BalanceCurrent() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_Subledger.Total_BalanceCurrentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_BalanceCurrent' de la tabla 'ERP_Finance_Reports_Su"& _ 
                            "bledger' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_Subledger.Total_BalanceCurrentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Is_Detail() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_Subledger.Is_DetailColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Is_Detail' de la tabla 'ERP_Finance_Reports_Subledger' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_Subledger.Is_DetailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumeroCuentaContableNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_Subledger.NumeroCuentaContableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumeroCuentaContableNull()
            Me(Me.tableERP_Finance_Reports_Subledger.NumeroCuentaContableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNombreCuentaContableNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_Subledger.NombreCuentaContableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNombreCuentaContableNull()
            Me(Me.tableERP_Finance_Reports_Subledger.NombreCuentaContableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_BalancePreviousNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_Subledger.Total_BalancePreviousColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_BalancePreviousNull()
            Me(Me.tableERP_Finance_Reports_Subledger.Total_BalancePreviousColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_ChargeNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_Subledger.Total_ChargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_ChargeNull()
            Me(Me.tableERP_Finance_Reports_Subledger.Total_ChargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_DepositNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_Subledger.Total_DepositColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_DepositNull()
            Me(Me.tableERP_Finance_Reports_Subledger.Total_DepositColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_BalanceCurrentNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_Subledger.Total_BalanceCurrentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_BalanceCurrentNull()
            Me(Me.tableERP_Finance_Reports_Subledger.Total_BalanceCurrentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIs_DetailNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_Subledger.Is_DetailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIs_DetailNull()
            Me(Me.tableERP_Finance_Reports_Subledger.Is_DetailColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_Finance_ReportBalanceRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_Finance_ReportBalance As ERP_Finance_ReportBalanceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_Finance_ReportBalance = CType(Me.Table,ERP_Finance_ReportBalanceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_CashFlow() As Long
            Get
                Return CType(Me(Me.tableERP_Finance_ReportBalance.ID_CashFlowColumn),Long)
            End Get
            Set
                Me(Me.tableERP_Finance_ReportBalance.ID_CashFlowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_CashFlowParent() As Long
            Get
                Return CType(Me(Me.tableERP_Finance_ReportBalance.ID_CashFlowParentColumn),Long)
            End Get
            Set
                Me(Me.tableERP_Finance_ReportBalance.ID_CashFlowParentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description_CashFlowTop() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportBalance.Description_CashFlowTopColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Description_CashFlowTop' de la tabla 'ERP_Finance_ReportB"& _ 
                            "alance' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportBalance.Description_CashFlowTopColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportBalance.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Description' de la tabla 'ERP_Finance_ReportBalance' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportBalance.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total_BalanceCurrent() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportBalance.Total_BalanceCurrentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total_BalanceCurrent' de la tabla 'ERP_Finance_ReportBala"& _ 
                            "nce' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportBalance.Total_BalanceCurrentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description_CashFlow() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_ReportBalance.Description_CashFlowColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Description_CashFlow' de la tabla 'ERP_Finance_ReportBala"& _ 
                            "nce' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_ReportBalance.Description_CashFlowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescription_CashFlowTopNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportBalance.Description_CashFlowTopColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescription_CashFlowTopNull()
            Me(Me.tableERP_Finance_ReportBalance.Description_CashFlowTopColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportBalance.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableERP_Finance_ReportBalance.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal_BalanceCurrentNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportBalance.Total_BalanceCurrentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal_BalanceCurrentNull()
            Me(Me.tableERP_Finance_ReportBalance.Total_BalanceCurrentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescription_CashFlowNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_ReportBalance.Description_CashFlowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescription_CashFlowNull()
            Me(Me.tableERP_Finance_ReportBalance.Description_CashFlowColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_SP_Invoice_Quotation_TransactionDetail_Select As ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select = CType(Me.Table,ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_TransactionHeader() As Long
            Get
                Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_TransactionHeaderColumn),Long)
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_TransactionHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessDay() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.BusinessDayColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BusinessDay' de la tabla 'ERP_SP_Invoice_Quotation_Transa"& _ 
                            "ctionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.BusinessDayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Customer_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Customer_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Customer_FK' de la tabla 'ERP_SP_Invoice_Quotation_Tra"& _ 
                            "nsactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Customer_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Tax_Registration_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Tax_Registration_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Tax_Registration_Number' de la tabla 'ERP_SP_Invoice_Quot"& _ 
                            "ation_TransactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Tax_Registration_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Address' de la tabla 'ERP_SP_Invoice_Quotation_Transactio"& _ 
                            "nDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Turning_Company() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Turning_CompanyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Turning_Company' de la tabla 'ERP_SP_Invoice_Quotation_Tr"& _ 
                            "ansactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Turning_CompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA_Paid() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.IVA_PaidColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IVA_Paid' de la tabla 'ERP_SP_Invoice_Quotation_Transacti"& _ 
                            "onDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.IVA_PaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Commercial_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Commercial_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Commercial_Name' de la tabla 'ERP_SP_Invoice_Quotation_Tr"& _ 
                            "ansactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Commercial_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fullpayment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.FullpaymentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Fullpayment' de la tabla 'ERP_SP_Invoice_Quotation_Transa"& _ 
                            "ctionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.FullpaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Tax_Identification_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Tax_Identification_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Tax_Identification_Number' de la tabla 'ERP_SP_Invoice_Qu"& _ 
                            "otation_TransactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Tax_Identification_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DescriptionCustomer() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DescriptionCustomerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescriptionCustomer' de la tabla 'ERP_SP_Invoice_Quotatio"& _ 
                            "n_TransactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DescriptionCustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UsersCreate() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UsersCreateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UsersCreate' de la tabla 'ERP_SP_Invoice_Quotation_Transa"& _ 
                            "ctionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UsersCreateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateCreate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DateCreateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateCreate' de la tabla 'ERP_SP_Invoice_Quotation_Transac"& _ 
                            "tionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DateCreateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatusTransaction() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.StatusTransactionColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'StatusTransaction' de la tabla 'ERP_SP_Invoice_Quotation_"& _ 
                            "TransactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.StatusTransactionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateCancellation() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DateCancellationColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateCancellation' de la tabla 'ERP_SP_Invoice_Quotation_T"& _ 
                            "ransactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DateCancellationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UsersCancellation() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UsersCancellationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UsersCancellation' de la tabla 'ERP_SP_Invoice_Quotation_"& _ 
                            "TransactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UsersCancellationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Department() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Name_DepartmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Name_Department' de la tabla 'ERP_SP_Invoice_Quotation_Tr"& _ 
                            "ansactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Name_DepartmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_TransactionDetail() As Long
            Get
                Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_TransactionDetailColumn),Long)
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_TransactionDetailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Company_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Company_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Company_FK' de la tabla 'ERP_SP_Invoice_Quotation_Tran"& _ 
                            "sactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Company_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_TransactionHeader_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_TransactionHeader_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_TransactionHeader_FK' de la tabla 'ERP_SP_Invoice_Quot"& _ 
                            "ation_TransactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_TransactionHeader_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Product_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Product_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Product_FK' de la tabla 'ERP_SP_Invoice_Quotation_Tran"& _ 
                            "sactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Product_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Description' de la tabla 'ERP_SP_Invoice_Quotation_Transa"& _ 
                            "ctionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Quantity() As Single
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.QuantityColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Quantity' de la tabla 'ERP_SP_Invoice_Quotation_Transacti"& _ 
                            "onDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.QuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PriceWithIVA() As Single
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.PriceWithIVAColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PriceWithIVA' de la tabla 'ERP_SP_Invoice_Quotation_Trans"& _ 
                            "actionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.PriceWithIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PriceWithoutIva() As Single
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.PriceWithoutIvaColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PriceWithoutIva' de la tabla 'ERP_SP_Invoice_Quotation_Tr"& _ 
                            "ansactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.PriceWithoutIvaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Single
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DiscountColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Discount' de la tabla 'ERP_SP_Invoice_Quotation_Transacti"& _ 
                            "onDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalAmount() As Single
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.TotalAmountColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TotalAmount' de la tabla 'ERP_SP_Invoice_Quotation_Transa"& _ 
                            "ctionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.TotalAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.StatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Status' de la tabla 'ERP_SP_Invoice_Quotation_Transaction"& _ 
                            "Detail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Exempt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ExemptColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Exempt' de la tabla 'ERP_SP_Invoice_Quotation_Transaction"& _ 
                            "Detail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ExemptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AdmissionDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.AdmissionDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AdmissionDate' de la tabla 'ERP_SP_Invoice_Quotation_Tran"& _ 
                            "sactionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.AdmissionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessDay1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.BusinessDay1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BusinessDay1' de la tabla 'ERP_SP_Invoice_Quotation_Trans"& _ 
                            "actionDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.BusinessDay1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTRANS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.COTRANSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COTRANS' de la tabla 'ERP_SP_Invoice_Quotation_Transactio"& _ 
                            "nDetail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.COTRANSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FOVIAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.FOVIALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FOVIAL' de la tabla 'ERP_SP_Invoice_Quotation_Transaction"& _ 
                            "Detail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.FOVIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unity() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UnityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Unity' de la tabla 'ERP_SP_Invoice_Quotation_TransactionD"& _ 
                            "etail_Select' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UnityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBusinessDayNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.BusinessDayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBusinessDayNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.BusinessDayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Customer_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Customer_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Customer_FKNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Customer_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTax_Registration_NumberNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Tax_Registration_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTax_Registration_NumberNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Tax_Registration_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddressNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTurning_CompanyNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Turning_CompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTurning_CompanyNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Turning_CompanyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVA_PaidNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.IVA_PaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVA_PaidNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.IVA_PaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCommercial_NameNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Commercial_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCommercial_NameNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Commercial_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFullpaymentNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.FullpaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFullpaymentNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.FullpaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTax_Identification_NumberNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Tax_Identification_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTax_Identification_NumberNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Tax_Identification_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescriptionCustomerNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DescriptionCustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescriptionCustomerNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DescriptionCustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUsersCreateNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UsersCreateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUsersCreateNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UsersCreateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateCreateNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DateCreateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateCreateNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DateCreateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatusTransactionNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.StatusTransactionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatusTransactionNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.StatusTransactionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateCancellationNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DateCancellationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateCancellationNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DateCancellationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUsersCancellationNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UsersCancellationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUsersCancellationNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UsersCancellationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_DepartmentNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Name_DepartmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_DepartmentNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.Name_DepartmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Company_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Company_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Company_FKNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Company_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_TransactionHeader_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_TransactionHeader_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_TransactionHeader_FKNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_TransactionHeader_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Product_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Product_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Product_FKNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ID_Product_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuantityNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.QuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuantityNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.QuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceWithIVANull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.PriceWithIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceWithIVANull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.PriceWithIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceWithoutIvaNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.PriceWithoutIvaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceWithoutIvaNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.PriceWithoutIvaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiscountNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiscountNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalAmountNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.TotalAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalAmountNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.TotalAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExemptNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ExemptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExemptNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.ExemptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdmissionDateNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.AdmissionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdmissionDateNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.AdmissionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBusinessDay1Null() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.BusinessDay1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBusinessDay1Null()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.BusinessDay1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTRANSNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.COTRANSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTRANSNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.COTRANSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFOVIALNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.FOVIALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFOVIALNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.FOVIALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnityNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UnityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnityNull()
            Me(Me.tableERP_SP_Invoice_Quotation_TransactionDetail_Select.UnityColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_Finance_Reports_AccountStatusRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_Finance_Reports_AccountStatus As ERP_Finance_Reports_AccountStatusDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_Finance_Reports_AccountStatus = CType(Me.Table,ERP_Finance_Reports_AccountStatusDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id_Customer() As Long
            Get
                Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.id_CustomerColumn),Long)
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.id_CustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Company() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.Name_CompanyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Name_Company' de la tabla 'ERP_Finance_Reports_AccountSta"& _ 
                            "tus' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.Name_CompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Concepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.ConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Concepto' de la tabla 'ERP_Finance_Reports_AccountStatus'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.ConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateStart() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.DateStartColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateStart' de la tabla 'ERP_Finance_Reports_AccountStatus"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.DateStartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateEnd() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.DateEndColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateEnd' de la tabla 'ERP_Finance_Reports_AccountStatus' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.DateEndColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property valor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.valorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'valor' de la tabla 'ERP_Finance_Reports_AccountStatus' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.valorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreditAvailable() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.CreditAvailableColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CreditAvailable' de la tabla 'ERP_Finance_Reports_Account"& _ 
                            "Status' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.CreditAvailableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SaldoDeudor() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.SaldoDeudorColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SaldoDeudor' de la tabla 'ERP_Finance_Reports_AccountStat"& _ 
                            "us' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.SaldoDeudorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description_Credit() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.Description_CreditColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Description_Credit' de la tabla 'ERP_Finance_Reports_Acco"& _ 
                            "untStatus' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.Description_CreditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuotaNumber() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.QuotaNumberColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'QuotaNumber' de la tabla 'ERP_Finance_Reports_AccountStat"& _ 
                            "us' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.QuotaNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PaymentDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.PaymentDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PaymentDate' de la tabla 'ERP_Finance_Reports_AccountStat"& _ 
                            "us' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.PaymentDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ammount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.AmmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Ammount' de la tabla 'ERP_Finance_Reports_AccountStatus' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.AmmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Is_Active() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.Is_ActiveColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Is_Active' de la tabla 'ERP_Finance_Reports_AccountStatus"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.Is_ActiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Date_Payment() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.Date_PaymentColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Date_Payment' de la tabla 'ERP_Finance_Reports_AccountSta"& _ 
                            "tus' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.Date_PaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_AccountsDetails() As Long
            Get
                Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.ID_AccountsDetailsColumn),Long)
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.ID_AccountsDetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id_LineaDeCredito() As Long
            Get
                Return CType(Me(Me.tableERP_Finance_Reports_AccountStatus.Id_LineaDeCreditoColumn),Long)
            End Get
            Set
                Me(Me.tableERP_Finance_Reports_AccountStatus.Id_LineaDeCreditoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_CompanyNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.Name_CompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_CompanyNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.Name_CompanyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConceptoNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.ConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConceptoNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.ConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateStartNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.DateStartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateStartNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.DateStartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateEndNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.DateEndColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateEndNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.DateEndColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvalorNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.valorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvalorNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.valorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreditAvailableNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.CreditAvailableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreditAvailableNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.CreditAvailableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSaldoDeudorNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.SaldoDeudorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSaldoDeudorNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.SaldoDeudorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescription_CreditNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.Description_CreditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescription_CreditNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.Description_CreditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuotaNumberNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.QuotaNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuotaNumberNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.QuotaNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPaymentDateNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.PaymentDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPaymentDateNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.PaymentDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmmountNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.AmmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmmountNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.AmmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIs_ActiveNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.Is_ActiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIs_ActiveNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.Is_ActiveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDate_PaymentNull() As Boolean
            Return Me.IsNull(Me.tableERP_Finance_Reports_AccountStatus.Date_PaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDate_PaymentNull()
            Me(Me.tableERP_Finance_Reports_AccountStatus.Date_PaymentColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_Finance_ReportAccountingAllRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_Finance_ReportAccountingAllRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_Finance_ReportAccountingAllRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_Finance_ReportAccountingAllRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_Finance_ReportAccountingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_Finance_ReportAccountingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_Finance_ReportAccountingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_Finance_ReportAccountingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_Finance_ReportAccountingHighRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_Finance_ReportAccountingHighRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_Finance_ReportAccountingHighRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_Finance_ReportAccountingHighRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_Finance_Reports_SubledgerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_Finance_Reports_SubledgerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_Finance_Reports_SubledgerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_Finance_Reports_SubledgerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_Finance_ReportBalanceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_Finance_ReportBalanceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_Finance_ReportBalanceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_Finance_ReportBalanceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_SP_Invoice_Quotation_TransactionDetail_SelectRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_SP_Invoice_Quotation_TransactionDetail_SelectRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_Finance_Reports_AccountStatusRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_Finance_Reports_AccountStatusRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_Finance_Reports_AccountStatusRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_Finance_Reports_AccountStatusRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace EPD_SatelliteERPDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_Finance_ReportAccountingAllTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_Finance_ReportAccountingAll"
            tableMapping.ColumnMappings.Add("Id_AccountingIitemHeading", "Id_AccountingIitemHeading")
            tableMapping.ColumnMappings.Add("BusinessDay", "BusinessDay")
            tableMapping.ColumnMappings.Add("Concept_AccountingIitemHeading", "Concept_AccountingIitemHeading")
            tableMapping.ColumnMappings.Add("UsersCreate", "UsersCreate")
            tableMapping.ColumnMappings.Add("DateCreate", "DateCreate")
            tableMapping.ColumnMappings.Add("Total_Charge", "Total_Charge")
            tableMapping.ColumnMappings.Add("Total_Deposit", "Total_Deposit")
            tableMapping.ColumnMappings.Add("Is_Square", "Is_Square")
            tableMapping.ColumnMappings.Add("Is_Posting", "Is_Posting")
            tableMapping.ColumnMappings.Add("DatePosting", "DatePosting")
            tableMapping.ColumnMappings.Add("Id_AccountingIitemBody", "Id_AccountingIitemBody")
            tableMapping.ColumnMappings.Add("Id_Account_FK", "Id_Account_FK")
            tableMapping.ColumnMappings.Add("NumberAccount", "NumberAccount")
            tableMapping.ColumnMappings.Add("Concept_AccountingIitemBody", "Concept_AccountingIitemBody")
            tableMapping.ColumnMappings.Add("Item_Charge", "Item_Charge")
            tableMapping.ColumnMappings.Add("Iteml_Deposit", "Iteml_Deposit")
            tableMapping.ColumnMappings.Add("NomCuentaOrigen", "NomCuentaOrigen")
            tableMapping.ColumnMappings.Add("NomCuentaPadre", "NomCuentaPadre")
            tableMapping.ColumnMappings.Add("NoCuentaPadre", "NoCuentaPadre")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_Finance_ReportAccountingAll"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Company", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BusinessDay", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingAllDataTable, ByVal Id_Company As Global.System.Nullable(Of Long), ByVal BusinessDay As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (BusinessDay.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BusinessDay.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id_Company As Global.System.Nullable(Of Long), ByVal BusinessDay As Global.System.Nullable(Of Date)) As EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingAllDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (BusinessDay.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BusinessDay.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingAllDataTable = New EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingAllDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_Finance_ReportAccountingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_Finance_ReportAccounting"
            tableMapping.ColumnMappings.Add("Id_AccountingIitemHeading", "Id_AccountingIitemHeading")
            tableMapping.ColumnMappings.Add("BusinessDay", "BusinessDay")
            tableMapping.ColumnMappings.Add("Concept_AccountingIitemHeading", "Concept_AccountingIitemHeading")
            tableMapping.ColumnMappings.Add("UsersCreate", "UsersCreate")
            tableMapping.ColumnMappings.Add("DateCreate", "DateCreate")
            tableMapping.ColumnMappings.Add("Total_Charge", "Total_Charge")
            tableMapping.ColumnMappings.Add("Total_Deposit", "Total_Deposit")
            tableMapping.ColumnMappings.Add("Is_Square", "Is_Square")
            tableMapping.ColumnMappings.Add("Is_Posting", "Is_Posting")
            tableMapping.ColumnMappings.Add("DatePosting", "DatePosting")
            tableMapping.ColumnMappings.Add("Id_AccountingIitemBody", "Id_AccountingIitemBody")
            tableMapping.ColumnMappings.Add("Id_Account_FK", "Id_Account_FK")
            tableMapping.ColumnMappings.Add("NumberAccount", "NumberAccount")
            tableMapping.ColumnMappings.Add("Concept_AccountingIitemBody", "Concept_AccountingIitemBody")
            tableMapping.ColumnMappings.Add("Item_Charge", "Item_Charge")
            tableMapping.ColumnMappings.Add("Iteml_Deposit", "Iteml_Deposit")
            tableMapping.ColumnMappings.Add("NomCuentaOrigen", "NomCuentaOrigen")
            tableMapping.ColumnMappings.Add("NomCuentaPadre", "NomCuentaPadre")
            tableMapping.ColumnMappings.Add("NoCuentaPadre", "NoCuentaPadre")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_Finance_ReportAccounting"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Company", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BusinessDay", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_AccountingIitemHeading", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingDataTable, ByVal Id_Company As Global.System.Nullable(Of Long), ByVal BusinessDay As Global.System.Nullable(Of Date), ByVal Id_AccountingIitemHeading As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (BusinessDay.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BusinessDay.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Id_AccountingIitemHeading.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Id_AccountingIitemHeading.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id_Company As Global.System.Nullable(Of Long), ByVal BusinessDay As Global.System.Nullable(Of Date), ByVal Id_AccountingIitemHeading As Global.System.Nullable(Of Long)) As EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (BusinessDay.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(BusinessDay.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Id_AccountingIitemHeading.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Id_AccountingIitemHeading.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingDataTable = New EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_Finance_ReportAccountingHighTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_Finance_ReportAccountingHigh"
            tableMapping.ColumnMappings.Add("NumeroCuentaContable", "NumeroCuentaContable")
            tableMapping.ColumnMappings.Add("NombreCuentaContable", "NombreCuentaContable")
            tableMapping.ColumnMappings.Add("Id_Company_FK", "Id_Company_FK")
            tableMapping.ColumnMappings.Add("NumeroCuentaContable_m", "NumeroCuentaContable_m")
            tableMapping.ColumnMappings.Add("Total_BalancePrevious", "Total_BalancePrevious")
            tableMapping.ColumnMappings.Add("Total_Charge", "Total_Charge")
            tableMapping.ColumnMappings.Add("Total_Deposit", "Total_Deposit")
            tableMapping.ColumnMappings.Add("Total_BalanceCurrent", "Total_BalanceCurrent")
            tableMapping.ColumnMappings.Add("Total_Acreedor", "Total_Acreedor")
            tableMapping.ColumnMappings.Add("Total_Deudor", "Total_Deudor")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_Finance_ReportAccountingHigh"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Company", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountingAll", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LengthGreaterAccount", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingHighDataTable, ByVal Id_Company As Global.System.Nullable(Of Long), ByVal AccountingAll As Global.System.Nullable(Of Boolean), ByVal LengthGreaterAccount As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (AccountingAll.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(AccountingAll.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (LengthGreaterAccount.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(LengthGreaterAccount.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id_Company As Global.System.Nullable(Of Long), ByVal AccountingAll As Global.System.Nullable(Of Boolean), ByVal LengthGreaterAccount As Global.System.Nullable(Of Integer)) As EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingHighDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (AccountingAll.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(AccountingAll.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (LengthGreaterAccount.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(LengthGreaterAccount.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingHighDataTable = New EPD_SatelliteERPDataSet.ERP_Finance_ReportAccountingHighDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_Finance_Reports_SubledgerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_Finance_Reports_Subledger"
            tableMapping.ColumnMappings.Add("NumeroCuentaContable", "NumeroCuentaContable")
            tableMapping.ColumnMappings.Add("NombreCuentaContable", "NombreCuentaContable")
            tableMapping.ColumnMappings.Add("Total_BalancePrevious", "Total_BalancePrevious")
            tableMapping.ColumnMappings.Add("Total_Charge", "Total_Charge")
            tableMapping.ColumnMappings.Add("Total_Deposit", "Total_Deposit")
            tableMapping.ColumnMappings.Add("Total_BalanceCurrent", "Total_BalanceCurrent")
            tableMapping.ColumnMappings.Add("Is_Detail", "Is_Detail")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_Finance_Reports_Subledger"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Company", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EPD_SatelliteERPDataSet.ERP_Finance_Reports_SubledgerDataTable, ByVal Id_Company As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id_Company As Global.System.Nullable(Of Long)) As EPD_SatelliteERPDataSet.ERP_Finance_Reports_SubledgerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As EPD_SatelliteERPDataSet.ERP_Finance_Reports_SubledgerDataTable = New EPD_SatelliteERPDataSet.ERP_Finance_Reports_SubledgerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_Finance_ReportBalanceTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_Finance_ReportBalance"
            tableMapping.ColumnMappings.Add("ID_CashFlow", "ID_CashFlow")
            tableMapping.ColumnMappings.Add("ID_CashFlowParent", "ID_CashFlowParent")
            tableMapping.ColumnMappings.Add("Description_CashFlowTop", "Description_CashFlowTop")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("Total_BalanceCurrent", "Total_BalanceCurrent")
            tableMapping.ColumnMappings.Add("Description_CashFlow", "Description_CashFlow")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_Finance_ReportBalance"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Company", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LengthGreaterAccount", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EPD_SatelliteERPDataSet.ERP_Finance_ReportBalanceDataTable, ByVal Id_Company As Global.System.Nullable(Of Long), ByVal LengthGreaterAccount As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (LengthGreaterAccount.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(LengthGreaterAccount.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id_Company As Global.System.Nullable(Of Long), ByVal LengthGreaterAccount As Global.System.Nullable(Of Integer)) As EPD_SatelliteERPDataSet.ERP_Finance_ReportBalanceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (LengthGreaterAccount.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(LengthGreaterAccount.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As EPD_SatelliteERPDataSet.ERP_Finance_ReportBalanceDataTable = New EPD_SatelliteERPDataSet.ERP_Finance_ReportBalanceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_SP_Invoice_Quotation_TransactionDetail_SelectTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_SP_Invoice_Quotation_TransactionDetail_Select"
            tableMapping.ColumnMappings.Add("ID_TransactionHeader", "ID_TransactionHeader")
            tableMapping.ColumnMappings.Add("BusinessDay", "BusinessDay")
            tableMapping.ColumnMappings.Add("ID_Customer_FK", "ID_Customer_FK")
            tableMapping.ColumnMappings.Add("Tax_Registration_Number", "Tax_Registration_Number")
            tableMapping.ColumnMappings.Add("Address", "Address")
            tableMapping.ColumnMappings.Add("Turning_Company", "Turning_Company")
            tableMapping.ColumnMappings.Add("IVA_Paid", "IVA_Paid")
            tableMapping.ColumnMappings.Add("Commercial_Name", "Commercial_Name")
            tableMapping.ColumnMappings.Add("Fullpayment", "Fullpayment")
            tableMapping.ColumnMappings.Add("Tax_Identification_Number", "Tax_Identification_Number")
            tableMapping.ColumnMappings.Add("DescriptionCustomer", "DescriptionCustomer")
            tableMapping.ColumnMappings.Add("UsersCreate", "UsersCreate")
            tableMapping.ColumnMappings.Add("DateCreate", "DateCreate")
            tableMapping.ColumnMappings.Add("StatusTransaction", "StatusTransaction")
            tableMapping.ColumnMappings.Add("DateCancellation", "DateCancellation")
            tableMapping.ColumnMappings.Add("UsersCancellation", "UsersCancellation")
            tableMapping.ColumnMappings.Add("Name_Department", "Name_Department")
            tableMapping.ColumnMappings.Add("ID_TransactionDetail", "ID_TransactionDetail")
            tableMapping.ColumnMappings.Add("ID_Company_FK", "ID_Company_FK")
            tableMapping.ColumnMappings.Add("ID_TransactionHeader_FK", "ID_TransactionHeader_FK")
            tableMapping.ColumnMappings.Add("ID_Product_FK", "ID_Product_FK")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("Quantity", "Quantity")
            tableMapping.ColumnMappings.Add("PriceWithIVA", "PriceWithIVA")
            tableMapping.ColumnMappings.Add("PriceWithoutIva", "PriceWithoutIva")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("TotalAmount", "TotalAmount")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("Exempt", "Exempt")
            tableMapping.ColumnMappings.Add("AdmissionDate", "AdmissionDate")
            tableMapping.ColumnMappings.Add("BusinessDay1", "BusinessDay1")
            tableMapping.ColumnMappings.Add("COTRANS", "COTRANS")
            tableMapping.ColumnMappings.Add("FOVIAL", "FOVIAL")
            tableMapping.ColumnMappings.Add("Unity", "Unity")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_SP_Invoice_Quotation_TransactionDetail_Select"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_TransactionHeader", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_Company", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EPD_SatelliteERPDataSet.ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable, ByVal ID_TransactionHeader As Global.System.Nullable(Of Long), ByVal ID_Company As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ID_TransactionHeader.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ID_TransactionHeader.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ID_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ID_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ID_TransactionHeader As Global.System.Nullable(Of Long), ByVal ID_Company As Global.System.Nullable(Of Long)) As EPD_SatelliteERPDataSet.ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ID_TransactionHeader.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ID_TransactionHeader.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ID_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ID_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As EPD_SatelliteERPDataSet.ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable = New EPD_SatelliteERPDataSet.ERP_SP_Invoice_Quotation_TransactionDetail_SelectDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_Finance_Reports_AccountStatusTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_Finance_Reports_AccountStatus"
            tableMapping.ColumnMappings.Add("id_Customer", "id_Customer")
            tableMapping.ColumnMappings.Add("Name_Company", "Name_Company")
            tableMapping.ColumnMappings.Add("Concepto", "Concepto")
            tableMapping.ColumnMappings.Add("DateStart", "DateStart")
            tableMapping.ColumnMappings.Add("DateEnd", "DateEnd")
            tableMapping.ColumnMappings.Add("valor", "valor")
            tableMapping.ColumnMappings.Add("CreditAvailable", "CreditAvailable")
            tableMapping.ColumnMappings.Add("SaldoDeudor", "SaldoDeudor")
            tableMapping.ColumnMappings.Add("Description_Credit", "Description_Credit")
            tableMapping.ColumnMappings.Add("QuotaNumber", "QuotaNumber")
            tableMapping.ColumnMappings.Add("PaymentDate", "PaymentDate")
            tableMapping.ColumnMappings.Add("Ammount", "Ammount")
            tableMapping.ColumnMappings.Add("Is_Active", "Is_Active")
            tableMapping.ColumnMappings.Add("Date_Payment", "Date_Payment")
            tableMapping.ColumnMappings.Add("ID_AccountsDetails", "ID_AccountsDetails")
            tableMapping.ColumnMappings.Add("Id_LineaDeCredito", "Id_LineaDeCredito")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_Finance_Reports_AccountStatus"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Company", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID_Customer", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As EPD_SatelliteERPDataSet.ERP_Finance_Reports_AccountStatusDataTable, ByVal Id_Company As Global.System.Nullable(Of Long), ByVal ID_Customer As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ID_Customer.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ID_Customer.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id_Company As Global.System.Nullable(Of Long), ByVal ID_Customer As Global.System.Nullable(Of Long)) As EPD_SatelliteERPDataSet.ERP_Finance_Reports_AccountStatusDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id_Company.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Company.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ID_Customer.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ID_Customer.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As EPD_SatelliteERPDataSet.ERP_Finance_Reports_AccountStatusDataTable = New EPD_SatelliteERPDataSet.ERP_Finance_Reports_AccountStatusDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As EPD_SatelliteERPDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As EPD_SatelliteERPDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As EPD_SatelliteERPDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As EPD_SatelliteERPDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
