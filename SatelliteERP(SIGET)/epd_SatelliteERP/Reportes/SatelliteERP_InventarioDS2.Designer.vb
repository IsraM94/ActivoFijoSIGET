'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("SatelliteERP_InventarioDS2"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class SatelliteERP_InventarioDS2
    Inherits Global.System.Data.DataSet
    
    Private tableERP_SP_Inventory_EntryReport As ERP_SP_Inventory_EntryReportDataTable
    
    Private tableERP_SP_Inventory_OutReport As ERP_SP_Inventory_OutReportDataTable
    
    Private tableERP_SP_Inventory_TranferReport As ERP_SP_Inventory_TranferReportDataTable
    
    Private tableERP_SP_Inventory_EntryReport_Vencimiento As ERP_SP_Inventory_EntryReport_VencimientoDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ERP_SP_Inventory_EntryReport")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_SP_Inventory_EntryReportDataTable(ds.Tables("ERP_SP_Inventory_EntryReport")))
            End If
            If (Not (ds.Tables("ERP_SP_Inventory_OutReport")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_SP_Inventory_OutReportDataTable(ds.Tables("ERP_SP_Inventory_OutReport")))
            End If
            If (Not (ds.Tables("ERP_SP_Inventory_TranferReport")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_SP_Inventory_TranferReportDataTable(ds.Tables("ERP_SP_Inventory_TranferReport")))
            End If
            If (Not (ds.Tables("ERP_SP_Inventory_EntryReport_Vencimiento")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_SP_Inventory_EntryReport_VencimientoDataTable(ds.Tables("ERP_SP_Inventory_EntryReport_Vencimiento")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_SP_Inventory_EntryReport() As ERP_SP_Inventory_EntryReportDataTable
        Get
            Return Me.tableERP_SP_Inventory_EntryReport
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_SP_Inventory_OutReport() As ERP_SP_Inventory_OutReportDataTable
        Get
            Return Me.tableERP_SP_Inventory_OutReport
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_SP_Inventory_TranferReport() As ERP_SP_Inventory_TranferReportDataTable
        Get
            Return Me.tableERP_SP_Inventory_TranferReport
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ERP_SP_Inventory_EntryReport_Vencimiento() As ERP_SP_Inventory_EntryReport_VencimientoDataTable
        Get
            Return Me.tableERP_SP_Inventory_EntryReport_Vencimiento
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As SatelliteERP_InventarioDS2 = CType(MyBase.Clone,SatelliteERP_InventarioDS2)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ERP_SP_Inventory_EntryReport")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_SP_Inventory_EntryReportDataTable(ds.Tables("ERP_SP_Inventory_EntryReport")))
            End If
            If (Not (ds.Tables("ERP_SP_Inventory_OutReport")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_SP_Inventory_OutReportDataTable(ds.Tables("ERP_SP_Inventory_OutReport")))
            End If
            If (Not (ds.Tables("ERP_SP_Inventory_TranferReport")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_SP_Inventory_TranferReportDataTable(ds.Tables("ERP_SP_Inventory_TranferReport")))
            End If
            If (Not (ds.Tables("ERP_SP_Inventory_EntryReport_Vencimiento")) Is Nothing) Then
                MyBase.Tables.Add(New ERP_SP_Inventory_EntryReport_VencimientoDataTable(ds.Tables("ERP_SP_Inventory_EntryReport_Vencimiento")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableERP_SP_Inventory_EntryReport = CType(MyBase.Tables("ERP_SP_Inventory_EntryReport"),ERP_SP_Inventory_EntryReportDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_SP_Inventory_EntryReport) Is Nothing) Then
                Me.tableERP_SP_Inventory_EntryReport.InitVars
            End If
        End If
        Me.tableERP_SP_Inventory_OutReport = CType(MyBase.Tables("ERP_SP_Inventory_OutReport"),ERP_SP_Inventory_OutReportDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_SP_Inventory_OutReport) Is Nothing) Then
                Me.tableERP_SP_Inventory_OutReport.InitVars
            End If
        End If
        Me.tableERP_SP_Inventory_TranferReport = CType(MyBase.Tables("ERP_SP_Inventory_TranferReport"),ERP_SP_Inventory_TranferReportDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_SP_Inventory_TranferReport) Is Nothing) Then
                Me.tableERP_SP_Inventory_TranferReport.InitVars
            End If
        End If
        Me.tableERP_SP_Inventory_EntryReport_Vencimiento = CType(MyBase.Tables("ERP_SP_Inventory_EntryReport_Vencimiento"),ERP_SP_Inventory_EntryReport_VencimientoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableERP_SP_Inventory_EntryReport_Vencimiento) Is Nothing) Then
                Me.tableERP_SP_Inventory_EntryReport_Vencimiento.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "SatelliteERP_InventarioDS2"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/SatelliteERP_InventarioDS2.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableERP_SP_Inventory_EntryReport = New ERP_SP_Inventory_EntryReportDataTable()
        MyBase.Tables.Add(Me.tableERP_SP_Inventory_EntryReport)
        Me.tableERP_SP_Inventory_OutReport = New ERP_SP_Inventory_OutReportDataTable()
        MyBase.Tables.Add(Me.tableERP_SP_Inventory_OutReport)
        Me.tableERP_SP_Inventory_TranferReport = New ERP_SP_Inventory_TranferReportDataTable()
        MyBase.Tables.Add(Me.tableERP_SP_Inventory_TranferReport)
        Me.tableERP_SP_Inventory_EntryReport_Vencimiento = New ERP_SP_Inventory_EntryReport_VencimientoDataTable()
        MyBase.Tables.Add(Me.tableERP_SP_Inventory_EntryReport_Vencimiento)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_SP_Inventory_EntryReport() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_SP_Inventory_OutReport() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_SP_Inventory_TranferReport() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeERP_SP_Inventory_EntryReport_Vencimiento() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SatelliteERP_InventarioDS2 = New SatelliteERP_InventarioDS2()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_SP_Inventory_EntryReportRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_SP_Inventory_EntryReportRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_SP_Inventory_OutReportRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_SP_Inventory_OutReportRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_SP_Inventory_TranferReportRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_SP_Inventory_TranferReportRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ERP_SP_Inventory_EntryReport_VencimientoRowChangeEventHandler(ByVal sender As Object, ByVal e As ERP_SP_Inventory_EntryReport_VencimientoRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_SP_Inventory_EntryReportDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_SP_Inventory_EntryReportRow)
        
        Private columnID_Header As Global.System.Data.DataColumn
        
        Private columnID_Company_FK As Global.System.Data.DataColumn
        
        Private columnID_Customer_FK As Global.System.Data.DataColumn
        
        Private columnID_Stowage_FK As Global.System.Data.DataColumn
        
        Private columnID_Output_FK As Global.System.Data.DataColumn
        
        Private columnInvoiceNumber As Global.System.Data.DataColumn
        
        Private columnWayToPay As Global.System.Data.DataColumn
        
        Private columnInvoiceDate As Global.System.Data.DataColumn
        
        Private columnIS_Lot As Global.System.Data.DataColumn
        
        Private columnID_Lot_FK As Global.System.Data.DataColumn
        
        Private columnUserOfMovement As Global.System.Data.DataColumn
        
        Private columnDateOfMovement As Global.System.Data.DataColumn
        
        Private columnIS_ManualInput As Global.System.Data.DataColumn
        
        Private columnID_Product_FK As Global.System.Data.DataColumn
        
        Private columnQuantity As Global.System.Data.DataColumn
        
        Private columnName_Product As Global.System.Data.DataColumn
        
        Private columnStowageName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_SP_Inventory_EntryReport"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_HeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Header
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Company_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Company_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Customer_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Customer_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Stowage_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Stowage_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Output_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Output_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InvoiceNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoiceNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WayToPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWayToPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InvoiceDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoiceDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_LotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_Lot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Lot_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Lot_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserOfMovementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserOfMovement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateOfMovementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfMovement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_ManualInputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_ManualInput
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Product_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Product_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_ProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Product
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StowageNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStowageName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_SP_Inventory_EntryReportRow
            Get
                Return CType(Me.Rows(index),ERP_SP_Inventory_EntryReportRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_EntryReportRowChanging As ERP_SP_Inventory_EntryReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_EntryReportRowChanged As ERP_SP_Inventory_EntryReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_EntryReportRowDeleting As ERP_SP_Inventory_EntryReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_EntryReportRowDeleted As ERP_SP_Inventory_EntryReportRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_SP_Inventory_EntryReportRow(ByVal row As ERP_SP_Inventory_EntryReportRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_SP_Inventory_EntryReportRow( _
                    ByVal ID_Company_FK As Long,  _
                    ByVal ID_Customer_FK As Long,  _
                    ByVal ID_Stowage_FK As Long,  _
                    ByVal ID_Output_FK As Long,  _
                    ByVal InvoiceNumber As String,  _
                    ByVal WayToPay As String,  _
                    ByVal InvoiceDate As Date,  _
                    ByVal IS_Lot As Boolean,  _
                    ByVal ID_Lot_FK As Long,  _
                    ByVal UserOfMovement As String,  _
                    ByVal DateOfMovement As Date,  _
                    ByVal IS_ManualInput As Boolean,  _
                    ByVal ID_Product_FK As Long,  _
                    ByVal Quantity As Decimal,  _
                    ByVal Name_Product As String,  _
                    ByVal StowageName As String) As ERP_SP_Inventory_EntryReportRow
            Dim rowERP_SP_Inventory_EntryReportRow As ERP_SP_Inventory_EntryReportRow = CType(Me.NewRow,ERP_SP_Inventory_EntryReportRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ID_Company_FK, ID_Customer_FK, ID_Stowage_FK, ID_Output_FK, InvoiceNumber, WayToPay, InvoiceDate, IS_Lot, ID_Lot_FK, UserOfMovement, DateOfMovement, IS_ManualInput, ID_Product_FK, Quantity, Name_Product, StowageName}
            rowERP_SP_Inventory_EntryReportRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_SP_Inventory_EntryReportRow)
            Return rowERP_SP_Inventory_EntryReportRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_SP_Inventory_EntryReportDataTable = CType(MyBase.Clone,ERP_SP_Inventory_EntryReportDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_SP_Inventory_EntryReportDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_Header = MyBase.Columns("ID_Header")
            Me.columnID_Company_FK = MyBase.Columns("ID_Company_FK")
            Me.columnID_Customer_FK = MyBase.Columns("ID_Customer_FK")
            Me.columnID_Stowage_FK = MyBase.Columns("ID_Stowage_FK")
            Me.columnID_Output_FK = MyBase.Columns("ID_Output_FK")
            Me.columnInvoiceNumber = MyBase.Columns("InvoiceNumber")
            Me.columnWayToPay = MyBase.Columns("WayToPay")
            Me.columnInvoiceDate = MyBase.Columns("InvoiceDate")
            Me.columnIS_Lot = MyBase.Columns("IS_Lot")
            Me.columnID_Lot_FK = MyBase.Columns("ID_Lot_FK")
            Me.columnUserOfMovement = MyBase.Columns("UserOfMovement")
            Me.columnDateOfMovement = MyBase.Columns("DateOfMovement")
            Me.columnIS_ManualInput = MyBase.Columns("IS_ManualInput")
            Me.columnID_Product_FK = MyBase.Columns("ID_Product_FK")
            Me.columnQuantity = MyBase.Columns("Quantity")
            Me.columnName_Product = MyBase.Columns("Name_Product")
            Me.columnStowageName = MyBase.Columns("StowageName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_Header = New Global.System.Data.DataColumn("ID_Header", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Header)
            Me.columnID_Company_FK = New Global.System.Data.DataColumn("ID_Company_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Company_FK)
            Me.columnID_Customer_FK = New Global.System.Data.DataColumn("ID_Customer_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Customer_FK)
            Me.columnID_Stowage_FK = New Global.System.Data.DataColumn("ID_Stowage_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Stowage_FK)
            Me.columnID_Output_FK = New Global.System.Data.DataColumn("ID_Output_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Output_FK)
            Me.columnInvoiceNumber = New Global.System.Data.DataColumn("InvoiceNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoiceNumber)
            Me.columnWayToPay = New Global.System.Data.DataColumn("WayToPay", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWayToPay)
            Me.columnInvoiceDate = New Global.System.Data.DataColumn("InvoiceDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoiceDate)
            Me.columnIS_Lot = New Global.System.Data.DataColumn("IS_Lot", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_Lot)
            Me.columnID_Lot_FK = New Global.System.Data.DataColumn("ID_Lot_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Lot_FK)
            Me.columnUserOfMovement = New Global.System.Data.DataColumn("UserOfMovement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserOfMovement)
            Me.columnDateOfMovement = New Global.System.Data.DataColumn("DateOfMovement", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfMovement)
            Me.columnIS_ManualInput = New Global.System.Data.DataColumn("IS_ManualInput", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_ManualInput)
            Me.columnID_Product_FK = New Global.System.Data.DataColumn("ID_Product_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Product_FK)
            Me.columnQuantity = New Global.System.Data.DataColumn("Quantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuantity)
            Me.columnName_Product = New Global.System.Data.DataColumn("Name_Product", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Product)
            Me.columnStowageName = New Global.System.Data.DataColumn("StowageName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStowageName)
            Me.columnID_Header.AutoIncrement = true
            Me.columnID_Header.AllowDBNull = false
            Me.columnID_Header.ReadOnly = true
            Me.columnInvoiceNumber.MaxLength = 60
            Me.columnWayToPay.MaxLength = 60
            Me.columnUserOfMovement.MaxLength = 60
            Me.columnName_Product.MaxLength = 500
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_SP_Inventory_EntryReportRow() As ERP_SP_Inventory_EntryReportRow
            Return CType(Me.NewRow,ERP_SP_Inventory_EntryReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_SP_Inventory_EntryReportRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_SP_Inventory_EntryReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_SP_Inventory_EntryReportRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_EntryReportRowChanged(Me, New ERP_SP_Inventory_EntryReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_EntryReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_SP_Inventory_EntryReportRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_EntryReportRowChanging(Me, New ERP_SP_Inventory_EntryReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_EntryReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_SP_Inventory_EntryReportRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_EntryReportRowDeleted(Me, New ERP_SP_Inventory_EntryReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_EntryReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_SP_Inventory_EntryReportRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_EntryReportRowDeleting(Me, New ERP_SP_Inventory_EntryReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_EntryReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_SP_Inventory_EntryReportRow(ByVal row As ERP_SP_Inventory_EntryReportRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SatelliteERP_InventarioDS2 = New SatelliteERP_InventarioDS2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_SP_Inventory_EntryReportDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_SP_Inventory_OutReportDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_SP_Inventory_OutReportRow)
        
        Private columnID_Header As Global.System.Data.DataColumn
        
        Private columnID_Company_FK As Global.System.Data.DataColumn
        
        Private columnID_Customer_FK As Global.System.Data.DataColumn
        
        Private columnID_Stowage_FK As Global.System.Data.DataColumn
        
        Private columnID_Output_FK As Global.System.Data.DataColumn
        
        Private columnInvoiceNumber As Global.System.Data.DataColumn
        
        Private columnWayToPay As Global.System.Data.DataColumn
        
        Private columnInvoiceDate As Global.System.Data.DataColumn
        
        Private columnIS_Lot As Global.System.Data.DataColumn
        
        Private columnID_Lot_FK As Global.System.Data.DataColumn
        
        Private columnUserOfMovement As Global.System.Data.DataColumn
        
        Private columnDateOfMovement As Global.System.Data.DataColumn
        
        Private columnIS_ManualInput As Global.System.Data.DataColumn
        
        Private columnID_Product_FK As Global.System.Data.DataColumn
        
        Private columnQuantity As Global.System.Data.DataColumn
        
        Private columnName_Product As Global.System.Data.DataColumn
        
        Private columnStowageName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_SP_Inventory_OutReport"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_HeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Header
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Company_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Company_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Customer_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Customer_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Stowage_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Stowage_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Output_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Output_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InvoiceNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoiceNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WayToPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWayToPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InvoiceDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoiceDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_LotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_Lot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Lot_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Lot_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserOfMovementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserOfMovement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateOfMovementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfMovement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_ManualInputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_ManualInput
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Product_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Product_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_ProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Product
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StowageNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStowageName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_SP_Inventory_OutReportRow
            Get
                Return CType(Me.Rows(index),ERP_SP_Inventory_OutReportRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_OutReportRowChanging As ERP_SP_Inventory_OutReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_OutReportRowChanged As ERP_SP_Inventory_OutReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_OutReportRowDeleting As ERP_SP_Inventory_OutReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_OutReportRowDeleted As ERP_SP_Inventory_OutReportRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_SP_Inventory_OutReportRow(ByVal row As ERP_SP_Inventory_OutReportRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_SP_Inventory_OutReportRow( _
                    ByVal ID_Company_FK As Long,  _
                    ByVal ID_Customer_FK As Long,  _
                    ByVal ID_Stowage_FK As Long,  _
                    ByVal ID_Output_FK As Long,  _
                    ByVal InvoiceNumber As String,  _
                    ByVal WayToPay As String,  _
                    ByVal InvoiceDate As Date,  _
                    ByVal IS_Lot As Boolean,  _
                    ByVal ID_Lot_FK As Long,  _
                    ByVal UserOfMovement As String,  _
                    ByVal DateOfMovement As Date,  _
                    ByVal IS_ManualInput As Boolean,  _
                    ByVal ID_Product_FK As Long,  _
                    ByVal Quantity As Decimal,  _
                    ByVal Name_Product As String,  _
                    ByVal StowageName As String) As ERP_SP_Inventory_OutReportRow
            Dim rowERP_SP_Inventory_OutReportRow As ERP_SP_Inventory_OutReportRow = CType(Me.NewRow,ERP_SP_Inventory_OutReportRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ID_Company_FK, ID_Customer_FK, ID_Stowage_FK, ID_Output_FK, InvoiceNumber, WayToPay, InvoiceDate, IS_Lot, ID_Lot_FK, UserOfMovement, DateOfMovement, IS_ManualInput, ID_Product_FK, Quantity, Name_Product, StowageName}
            rowERP_SP_Inventory_OutReportRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_SP_Inventory_OutReportRow)
            Return rowERP_SP_Inventory_OutReportRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_SP_Inventory_OutReportDataTable = CType(MyBase.Clone,ERP_SP_Inventory_OutReportDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_SP_Inventory_OutReportDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_Header = MyBase.Columns("ID_Header")
            Me.columnID_Company_FK = MyBase.Columns("ID_Company_FK")
            Me.columnID_Customer_FK = MyBase.Columns("ID_Customer_FK")
            Me.columnID_Stowage_FK = MyBase.Columns("ID_Stowage_FK")
            Me.columnID_Output_FK = MyBase.Columns("ID_Output_FK")
            Me.columnInvoiceNumber = MyBase.Columns("InvoiceNumber")
            Me.columnWayToPay = MyBase.Columns("WayToPay")
            Me.columnInvoiceDate = MyBase.Columns("InvoiceDate")
            Me.columnIS_Lot = MyBase.Columns("IS_Lot")
            Me.columnID_Lot_FK = MyBase.Columns("ID_Lot_FK")
            Me.columnUserOfMovement = MyBase.Columns("UserOfMovement")
            Me.columnDateOfMovement = MyBase.Columns("DateOfMovement")
            Me.columnIS_ManualInput = MyBase.Columns("IS_ManualInput")
            Me.columnID_Product_FK = MyBase.Columns("ID_Product_FK")
            Me.columnQuantity = MyBase.Columns("Quantity")
            Me.columnName_Product = MyBase.Columns("Name_Product")
            Me.columnStowageName = MyBase.Columns("StowageName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_Header = New Global.System.Data.DataColumn("ID_Header", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Header)
            Me.columnID_Company_FK = New Global.System.Data.DataColumn("ID_Company_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Company_FK)
            Me.columnID_Customer_FK = New Global.System.Data.DataColumn("ID_Customer_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Customer_FK)
            Me.columnID_Stowage_FK = New Global.System.Data.DataColumn("ID_Stowage_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Stowage_FK)
            Me.columnID_Output_FK = New Global.System.Data.DataColumn("ID_Output_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Output_FK)
            Me.columnInvoiceNumber = New Global.System.Data.DataColumn("InvoiceNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoiceNumber)
            Me.columnWayToPay = New Global.System.Data.DataColumn("WayToPay", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWayToPay)
            Me.columnInvoiceDate = New Global.System.Data.DataColumn("InvoiceDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoiceDate)
            Me.columnIS_Lot = New Global.System.Data.DataColumn("IS_Lot", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_Lot)
            Me.columnID_Lot_FK = New Global.System.Data.DataColumn("ID_Lot_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Lot_FK)
            Me.columnUserOfMovement = New Global.System.Data.DataColumn("UserOfMovement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserOfMovement)
            Me.columnDateOfMovement = New Global.System.Data.DataColumn("DateOfMovement", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfMovement)
            Me.columnIS_ManualInput = New Global.System.Data.DataColumn("IS_ManualInput", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_ManualInput)
            Me.columnID_Product_FK = New Global.System.Data.DataColumn("ID_Product_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Product_FK)
            Me.columnQuantity = New Global.System.Data.DataColumn("Quantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuantity)
            Me.columnName_Product = New Global.System.Data.DataColumn("Name_Product", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Product)
            Me.columnStowageName = New Global.System.Data.DataColumn("StowageName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStowageName)
            Me.columnID_Header.AutoIncrement = true
            Me.columnID_Header.AllowDBNull = false
            Me.columnID_Header.ReadOnly = true
            Me.columnInvoiceNumber.MaxLength = 60
            Me.columnWayToPay.MaxLength = 60
            Me.columnUserOfMovement.MaxLength = 60
            Me.columnName_Product.MaxLength = 500
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_SP_Inventory_OutReportRow() As ERP_SP_Inventory_OutReportRow
            Return CType(Me.NewRow,ERP_SP_Inventory_OutReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_SP_Inventory_OutReportRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_SP_Inventory_OutReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_SP_Inventory_OutReportRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_OutReportRowChanged(Me, New ERP_SP_Inventory_OutReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_OutReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_SP_Inventory_OutReportRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_OutReportRowChanging(Me, New ERP_SP_Inventory_OutReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_OutReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_SP_Inventory_OutReportRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_OutReportRowDeleted(Me, New ERP_SP_Inventory_OutReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_OutReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_SP_Inventory_OutReportRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_OutReportRowDeleting(Me, New ERP_SP_Inventory_OutReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_OutReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_SP_Inventory_OutReportRow(ByVal row As ERP_SP_Inventory_OutReportRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SatelliteERP_InventarioDS2 = New SatelliteERP_InventarioDS2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_SP_Inventory_OutReportDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_SP_Inventory_TranferReportDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_SP_Inventory_TranferReportRow)
        
        Private columnID_Output As Global.System.Data.DataColumn
        
        Private columnID_Stowage_FK As Global.System.Data.DataColumn
        
        Private columnID_Outlet_FK As Global.System.Data.DataColumn
        
        Private columnStowageOfDestination_FK As Global.System.Data.DataColumn
        
        Private columnComments As Global.System.Data.DataColumn
        
        Private columnUser_Authorized As Global.System.Data.DataColumn
        
        Private columnDate_Output As Global.System.Data.DataColumn
        
        Private columnUser_Output As Global.System.Data.DataColumn
        
        Private columnID_Product_FK As Global.System.Data.DataColumn
        
        Private columnQuantity As Global.System.Data.DataColumn
        
        Private columnName_Product As Global.System.Data.DataColumn
        
        Private columnStowageNameStart As Global.System.Data.DataColumn
        
        Private columnStowageNameFinish As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_SP_Inventory_TranferReport"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_OutputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Output
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Stowage_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Stowage_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Outlet_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Outlet_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StowageOfDestination_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStowageOfDestination_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CommentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property User_AuthorizedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUser_Authorized
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Date_OutputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Output
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property User_OutputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUser_Output
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Product_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Product_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_ProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Product
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StowageNameStartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStowageNameStart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StowageNameFinishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStowageNameFinish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_SP_Inventory_TranferReportRow
            Get
                Return CType(Me.Rows(index),ERP_SP_Inventory_TranferReportRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_TranferReportRowChanging As ERP_SP_Inventory_TranferReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_TranferReportRowChanged As ERP_SP_Inventory_TranferReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_TranferReportRowDeleting As ERP_SP_Inventory_TranferReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_TranferReportRowDeleted As ERP_SP_Inventory_TranferReportRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_SP_Inventory_TranferReportRow(ByVal row As ERP_SP_Inventory_TranferReportRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_SP_Inventory_TranferReportRow(ByVal ID_Stowage_FK As Long, ByVal ID_Outlet_FK As Long, ByVal StowageOfDestination_FK As Long, ByVal Comments As String, ByVal User_Authorized As String, ByVal Date_Output As Date, ByVal User_Output As String, ByVal ID_Product_FK As Long, ByVal Quantity As Decimal, ByVal Name_Product As String, ByVal StowageNameStart As String, ByVal StowageNameFinish As String) As ERP_SP_Inventory_TranferReportRow
            Dim rowERP_SP_Inventory_TranferReportRow As ERP_SP_Inventory_TranferReportRow = CType(Me.NewRow,ERP_SP_Inventory_TranferReportRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ID_Stowage_FK, ID_Outlet_FK, StowageOfDestination_FK, Comments, User_Authorized, Date_Output, User_Output, ID_Product_FK, Quantity, Name_Product, StowageNameStart, StowageNameFinish}
            rowERP_SP_Inventory_TranferReportRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_SP_Inventory_TranferReportRow)
            Return rowERP_SP_Inventory_TranferReportRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID_Output(ByVal ID_Output As Long) As ERP_SP_Inventory_TranferReportRow
            Return CType(Me.Rows.Find(New Object() {ID_Output}),ERP_SP_Inventory_TranferReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_SP_Inventory_TranferReportDataTable = CType(MyBase.Clone,ERP_SP_Inventory_TranferReportDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_SP_Inventory_TranferReportDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_Output = MyBase.Columns("ID_Output")
            Me.columnID_Stowage_FK = MyBase.Columns("ID_Stowage_FK")
            Me.columnID_Outlet_FK = MyBase.Columns("ID_Outlet_FK")
            Me.columnStowageOfDestination_FK = MyBase.Columns("StowageOfDestination_FK")
            Me.columnComments = MyBase.Columns("Comments")
            Me.columnUser_Authorized = MyBase.Columns("User_Authorized")
            Me.columnDate_Output = MyBase.Columns("Date_Output")
            Me.columnUser_Output = MyBase.Columns("User_Output")
            Me.columnID_Product_FK = MyBase.Columns("ID_Product_FK")
            Me.columnQuantity = MyBase.Columns("Quantity")
            Me.columnName_Product = MyBase.Columns("Name_Product")
            Me.columnStowageNameStart = MyBase.Columns("StowageNameStart")
            Me.columnStowageNameFinish = MyBase.Columns("StowageNameFinish")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_Output = New Global.System.Data.DataColumn("ID_Output", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Output)
            Me.columnID_Stowage_FK = New Global.System.Data.DataColumn("ID_Stowage_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Stowage_FK)
            Me.columnID_Outlet_FK = New Global.System.Data.DataColumn("ID_Outlet_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Outlet_FK)
            Me.columnStowageOfDestination_FK = New Global.System.Data.DataColumn("StowageOfDestination_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStowageOfDestination_FK)
            Me.columnComments = New Global.System.Data.DataColumn("Comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComments)
            Me.columnUser_Authorized = New Global.System.Data.DataColumn("User_Authorized", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUser_Authorized)
            Me.columnDate_Output = New Global.System.Data.DataColumn("Date_Output", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Output)
            Me.columnUser_Output = New Global.System.Data.DataColumn("User_Output", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUser_Output)
            Me.columnID_Product_FK = New Global.System.Data.DataColumn("ID_Product_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Product_FK)
            Me.columnQuantity = New Global.System.Data.DataColumn("Quantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuantity)
            Me.columnName_Product = New Global.System.Data.DataColumn("Name_Product", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Product)
            Me.columnStowageNameStart = New Global.System.Data.DataColumn("StowageNameStart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStowageNameStart)
            Me.columnStowageNameFinish = New Global.System.Data.DataColumn("StowageNameFinish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStowageNameFinish)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_Output}, true))
            Me.columnID_Output.AutoIncrement = true
            Me.columnID_Output.AllowDBNull = false
            Me.columnID_Output.ReadOnly = true
            Me.columnID_Output.Unique = true
            Me.columnID_Stowage_FK.AllowDBNull = false
            Me.columnID_Outlet_FK.AllowDBNull = false
            Me.columnComments.MaxLength = 250
            Me.columnUser_Authorized.MaxLength = 150
            Me.columnUser_Output.MaxLength = 150
            Me.columnName_Product.MaxLength = 500
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_SP_Inventory_TranferReportRow() As ERP_SP_Inventory_TranferReportRow
            Return CType(Me.NewRow,ERP_SP_Inventory_TranferReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_SP_Inventory_TranferReportRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_SP_Inventory_TranferReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_SP_Inventory_TranferReportRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_TranferReportRowChanged(Me, New ERP_SP_Inventory_TranferReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_TranferReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_SP_Inventory_TranferReportRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_TranferReportRowChanging(Me, New ERP_SP_Inventory_TranferReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_TranferReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_SP_Inventory_TranferReportRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_TranferReportRowDeleted(Me, New ERP_SP_Inventory_TranferReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_TranferReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_SP_Inventory_TranferReportRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_TranferReportRowDeleting(Me, New ERP_SP_Inventory_TranferReportRowChangeEvent(CType(e.Row,ERP_SP_Inventory_TranferReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_SP_Inventory_TranferReportRow(ByVal row As ERP_SP_Inventory_TranferReportRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SatelliteERP_InventarioDS2 = New SatelliteERP_InventarioDS2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_SP_Inventory_TranferReportDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ERP_SP_Inventory_EntryReport_VencimientoDataTable
        Inherits Global.System.Data.TypedTableBase(Of ERP_SP_Inventory_EntryReport_VencimientoRow)
        
        Private columnID_Header As Global.System.Data.DataColumn
        
        Private columnID_Company_FK As Global.System.Data.DataColumn
        
        Private columnID_Customer_FK As Global.System.Data.DataColumn
        
        Private columnID_Stowage_FK As Global.System.Data.DataColumn
        
        Private columnID_Output_FK As Global.System.Data.DataColumn
        
        Private columnID_Outlet_FK As Global.System.Data.DataColumn
        
        Private columnInvoiceNumber As Global.System.Data.DataColumn
        
        Private columnWayToPay As Global.System.Data.DataColumn
        
        Private columnInvoiceDate As Global.System.Data.DataColumn
        
        Private columnIS_Lot As Global.System.Data.DataColumn
        
        Private columnID_Lot_FK As Global.System.Data.DataColumn
        
        Private columnUserOfMovement As Global.System.Data.DataColumn
        
        Private columnDateOfMovement As Global.System.Data.DataColumn
        
        Private columnIS_ManualInput As Global.System.Data.DataColumn
        
        Private columnPurchaseOrders As Global.System.Data.DataColumn
        
        Private columntipoCompra As Global.System.Data.DataColumn
        
        Private columnModalidadCompra As Global.System.Data.DataColumn
        
        Private columnID_Product_FK As Global.System.Data.DataColumn
        
        Private columnQuantity As Global.System.Data.DataColumn
        
        Private columnNumber_Purchase As Global.System.Data.DataColumn
        
        Private columnName_Product As Global.System.Data.DataColumn
        
        Private columnstowagename As Global.System.Data.DataColumn
        
        Private columnDateExpiration As Global.System.Data.DataColumn
        
        Private columnID_Product_FK1 As Global.System.Data.DataColumn
        
        Private columnPriceProduct As Global.System.Data.DataColumn
        
        Private columnPrice_LastPpurchase As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ERP_SP_Inventory_EntryReport_Vencimiento"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_HeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Header
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Company_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Company_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Customer_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Customer_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Stowage_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Stowage_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Output_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Output_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Outlet_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Outlet_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InvoiceNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoiceNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WayToPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWayToPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InvoiceDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoiceDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_LotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_Lot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Lot_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Lot_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserOfMovementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserOfMovement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateOfMovementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfMovement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_ManualInputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_ManualInput
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PurchaseOrdersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseOrders
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tipoCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipoCompra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModalidadCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModalidadCompra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Product_FKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Product_FK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Number_PurchaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumber_Purchase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Name_ProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Product
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property stowagenameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstowagename
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateExpirationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateExpiration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_Product_FK1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_Product_FK1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriceProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriceProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Price_LastPpurchaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrice_LastPpurchase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ERP_SP_Inventory_EntryReport_VencimientoRow
            Get
                Return CType(Me.Rows(index),ERP_SP_Inventory_EntryReport_VencimientoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_EntryReport_VencimientoRowChanging As ERP_SP_Inventory_EntryReport_VencimientoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_EntryReport_VencimientoRowChanged As ERP_SP_Inventory_EntryReport_VencimientoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_EntryReport_VencimientoRowDeleting As ERP_SP_Inventory_EntryReport_VencimientoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ERP_SP_Inventory_EntryReport_VencimientoRowDeleted As ERP_SP_Inventory_EntryReport_VencimientoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddERP_SP_Inventory_EntryReport_VencimientoRow(ByVal row As ERP_SP_Inventory_EntryReport_VencimientoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddERP_SP_Inventory_EntryReport_VencimientoRow( _
                    ByVal ID_Company_FK As Long,  _
                    ByVal ID_Customer_FK As Long,  _
                    ByVal ID_Stowage_FK As Long,  _
                    ByVal ID_Output_FK As Long,  _
                    ByVal ID_Outlet_FK As Long,  _
                    ByVal InvoiceNumber As String,  _
                    ByVal WayToPay As String,  _
                    ByVal InvoiceDate As Date,  _
                    ByVal IS_Lot As Boolean,  _
                    ByVal ID_Lot_FK As Long,  _
                    ByVal UserOfMovement As String,  _
                    ByVal DateOfMovement As Date,  _
                    ByVal IS_ManualInput As Boolean,  _
                    ByVal PurchaseOrders As Long,  _
                    ByVal tipoCompra As String,  _
                    ByVal ModalidadCompra As String,  _
                    ByVal ID_Product_FK As String,  _
                    ByVal Quantity As Decimal,  _
                    ByVal Number_Purchase As String,  _
                    ByVal Name_Product As String,  _
                    ByVal stowagename As String,  _
                    ByVal DateExpiration As Date,  _
                    ByVal PriceProduct As Decimal,  _
                    ByVal Price_LastPpurchase As Decimal) As ERP_SP_Inventory_EntryReport_VencimientoRow
            Dim rowERP_SP_Inventory_EntryReport_VencimientoRow As ERP_SP_Inventory_EntryReport_VencimientoRow = CType(Me.NewRow,ERP_SP_Inventory_EntryReport_VencimientoRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ID_Company_FK, ID_Customer_FK, ID_Stowage_FK, ID_Output_FK, ID_Outlet_FK, InvoiceNumber, WayToPay, InvoiceDate, IS_Lot, ID_Lot_FK, UserOfMovement, DateOfMovement, IS_ManualInput, PurchaseOrders, tipoCompra, ModalidadCompra, ID_Product_FK, Quantity, Number_Purchase, Name_Product, stowagename, DateExpiration, Nothing, PriceProduct, Price_LastPpurchase}
            rowERP_SP_Inventory_EntryReport_VencimientoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowERP_SP_Inventory_EntryReport_VencimientoRow)
            Return rowERP_SP_Inventory_EntryReport_VencimientoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID_Product_FK1(ByVal ID_Product_FK1 As Long) As ERP_SP_Inventory_EntryReport_VencimientoRow
            Return CType(Me.Rows.Find(New Object() {ID_Product_FK1}),ERP_SP_Inventory_EntryReport_VencimientoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ERP_SP_Inventory_EntryReport_VencimientoDataTable = CType(MyBase.Clone,ERP_SP_Inventory_EntryReport_VencimientoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ERP_SP_Inventory_EntryReport_VencimientoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_Header = MyBase.Columns("ID_Header")
            Me.columnID_Company_FK = MyBase.Columns("ID_Company_FK")
            Me.columnID_Customer_FK = MyBase.Columns("ID_Customer_FK")
            Me.columnID_Stowage_FK = MyBase.Columns("ID_Stowage_FK")
            Me.columnID_Output_FK = MyBase.Columns("ID_Output_FK")
            Me.columnID_Outlet_FK = MyBase.Columns("ID_Outlet_FK")
            Me.columnInvoiceNumber = MyBase.Columns("InvoiceNumber")
            Me.columnWayToPay = MyBase.Columns("WayToPay")
            Me.columnInvoiceDate = MyBase.Columns("InvoiceDate")
            Me.columnIS_Lot = MyBase.Columns("IS_Lot")
            Me.columnID_Lot_FK = MyBase.Columns("ID_Lot_FK")
            Me.columnUserOfMovement = MyBase.Columns("UserOfMovement")
            Me.columnDateOfMovement = MyBase.Columns("DateOfMovement")
            Me.columnIS_ManualInput = MyBase.Columns("IS_ManualInput")
            Me.columnPurchaseOrders = MyBase.Columns("PurchaseOrders")
            Me.columntipoCompra = MyBase.Columns("tipoCompra")
            Me.columnModalidadCompra = MyBase.Columns("ModalidadCompra")
            Me.columnID_Product_FK = MyBase.Columns("ID_Product_FK")
            Me.columnQuantity = MyBase.Columns("Quantity")
            Me.columnNumber_Purchase = MyBase.Columns("Number_Purchase")
            Me.columnName_Product = MyBase.Columns("Name_Product")
            Me.columnstowagename = MyBase.Columns("stowagename")
            Me.columnDateExpiration = MyBase.Columns("DateExpiration")
            Me.columnID_Product_FK1 = MyBase.Columns("ID_Product_FK1")
            Me.columnPriceProduct = MyBase.Columns("PriceProduct")
            Me.columnPrice_LastPpurchase = MyBase.Columns("Price_LastPpurchase")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_Header = New Global.System.Data.DataColumn("ID_Header", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Header)
            Me.columnID_Company_FK = New Global.System.Data.DataColumn("ID_Company_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Company_FK)
            Me.columnID_Customer_FK = New Global.System.Data.DataColumn("ID_Customer_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Customer_FK)
            Me.columnID_Stowage_FK = New Global.System.Data.DataColumn("ID_Stowage_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Stowage_FK)
            Me.columnID_Output_FK = New Global.System.Data.DataColumn("ID_Output_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Output_FK)
            Me.columnID_Outlet_FK = New Global.System.Data.DataColumn("ID_Outlet_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Outlet_FK)
            Me.columnInvoiceNumber = New Global.System.Data.DataColumn("InvoiceNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoiceNumber)
            Me.columnWayToPay = New Global.System.Data.DataColumn("WayToPay", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWayToPay)
            Me.columnInvoiceDate = New Global.System.Data.DataColumn("InvoiceDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoiceDate)
            Me.columnIS_Lot = New Global.System.Data.DataColumn("IS_Lot", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_Lot)
            Me.columnID_Lot_FK = New Global.System.Data.DataColumn("ID_Lot_FK", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Lot_FK)
            Me.columnUserOfMovement = New Global.System.Data.DataColumn("UserOfMovement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserOfMovement)
            Me.columnDateOfMovement = New Global.System.Data.DataColumn("DateOfMovement", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfMovement)
            Me.columnIS_ManualInput = New Global.System.Data.DataColumn("IS_ManualInput", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_ManualInput)
            Me.columnPurchaseOrders = New Global.System.Data.DataColumn("PurchaseOrders", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseOrders)
            Me.columntipoCompra = New Global.System.Data.DataColumn("tipoCompra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipoCompra)
            Me.columnModalidadCompra = New Global.System.Data.DataColumn("ModalidadCompra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModalidadCompra)
            Me.columnID_Product_FK = New Global.System.Data.DataColumn("ID_Product_FK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Product_FK)
            Me.columnQuantity = New Global.System.Data.DataColumn("Quantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuantity)
            Me.columnNumber_Purchase = New Global.System.Data.DataColumn("Number_Purchase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumber_Purchase)
            Me.columnName_Product = New Global.System.Data.DataColumn("Name_Product", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Product)
            Me.columnstowagename = New Global.System.Data.DataColumn("stowagename", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstowagename)
            Me.columnDateExpiration = New Global.System.Data.DataColumn("DateExpiration", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateExpiration)
            Me.columnID_Product_FK1 = New Global.System.Data.DataColumn("ID_Product_FK1", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_Product_FK1)
            Me.columnPriceProduct = New Global.System.Data.DataColumn("PriceProduct", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriceProduct)
            Me.columnPrice_LastPpurchase = New Global.System.Data.DataColumn("Price_LastPpurchase", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrice_LastPpurchase)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID_Product_FK1}, true))
            Me.columnID_Header.AutoIncrement = true
            Me.columnID_Header.AutoIncrementSeed = -1
            Me.columnID_Header.AutoIncrementStep = -1
            Me.columnID_Header.AllowDBNull = false
            Me.columnID_Header.ReadOnly = true
            Me.columnInvoiceNumber.MaxLength = 60
            Me.columnWayToPay.MaxLength = 60
            Me.columnUserOfMovement.MaxLength = 60
            Me.columntipoCompra.MaxLength = 25
            Me.columnModalidadCompra.MaxLength = 15
            Me.columnID_Product_FK.MaxLength = 50
            Me.columnNumber_Purchase.MaxLength = 50
            Me.columnName_Product.MaxLength = 100
            Me.columnstowagename.MaxLength = 150
            Me.columnID_Product_FK1.AutoIncrement = true
            Me.columnID_Product_FK1.AutoIncrementSeed = -1
            Me.columnID_Product_FK1.AutoIncrementStep = -1
            Me.columnID_Product_FK1.AllowDBNull = false
            Me.columnID_Product_FK1.ReadOnly = true
            Me.columnID_Product_FK1.Unique = true
            Me.columnID_Product_FK1.Caption = "ID_Product_FK"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewERP_SP_Inventory_EntryReport_VencimientoRow() As ERP_SP_Inventory_EntryReport_VencimientoRow
            Return CType(Me.NewRow,ERP_SP_Inventory_EntryReport_VencimientoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ERP_SP_Inventory_EntryReport_VencimientoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ERP_SP_Inventory_EntryReport_VencimientoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ERP_SP_Inventory_EntryReport_VencimientoRowChangedEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_EntryReport_VencimientoRowChanged(Me, New ERP_SP_Inventory_EntryReport_VencimientoRowChangeEvent(CType(e.Row,ERP_SP_Inventory_EntryReport_VencimientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ERP_SP_Inventory_EntryReport_VencimientoRowChangingEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_EntryReport_VencimientoRowChanging(Me, New ERP_SP_Inventory_EntryReport_VencimientoRowChangeEvent(CType(e.Row,ERP_SP_Inventory_EntryReport_VencimientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ERP_SP_Inventory_EntryReport_VencimientoRowDeletedEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_EntryReport_VencimientoRowDeleted(Me, New ERP_SP_Inventory_EntryReport_VencimientoRowChangeEvent(CType(e.Row,ERP_SP_Inventory_EntryReport_VencimientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ERP_SP_Inventory_EntryReport_VencimientoRowDeletingEvent) Is Nothing) Then
                RaiseEvent ERP_SP_Inventory_EntryReport_VencimientoRowDeleting(Me, New ERP_SP_Inventory_EntryReport_VencimientoRowChangeEvent(CType(e.Row,ERP_SP_Inventory_EntryReport_VencimientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveERP_SP_Inventory_EntryReport_VencimientoRow(ByVal row As ERP_SP_Inventory_EntryReport_VencimientoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SatelliteERP_InventarioDS2 = New SatelliteERP_InventarioDS2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ERP_SP_Inventory_EntryReport_VencimientoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_SP_Inventory_EntryReportRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_SP_Inventory_EntryReport As ERP_SP_Inventory_EntryReportDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_SP_Inventory_EntryReport = CType(Me.Table,ERP_SP_Inventory_EntryReportDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Header() As Long
            Get
                Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.ID_HeaderColumn),Long)
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.ID_HeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Company_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.ID_Company_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Company_FK' de la tabla 'ERP_SP_Inventory_EntryReport'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.ID_Company_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Customer_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.ID_Customer_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Customer_FK' de la tabla 'ERP_SP_Inventory_EntryReport"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.ID_Customer_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Stowage_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.ID_Stowage_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Stowage_FK' de la tabla 'ERP_SP_Inventory_EntryReport'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.ID_Stowage_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Output_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.ID_Output_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Output_FK' de la tabla 'ERP_SP_Inventory_EntryReport' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.ID_Output_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InvoiceNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.InvoiceNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'InvoiceNumber' de la tabla 'ERP_SP_Inventory_EntryReport'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.InvoiceNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WayToPay() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.WayToPayColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'WayToPay' de la tabla 'ERP_SP_Inventory_EntryReport' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.WayToPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InvoiceDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.InvoiceDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'InvoiceDate' de la tabla 'ERP_SP_Inventory_EntryReport' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.InvoiceDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_Lot() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.IS_LotColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IS_Lot' de la tabla 'ERP_SP_Inventory_EntryReport' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.IS_LotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Lot_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.ID_Lot_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Lot_FK' de la tabla 'ERP_SP_Inventory_EntryReport' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.ID_Lot_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserOfMovement() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.UserOfMovementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UserOfMovement' de la tabla 'ERP_SP_Inventory_EntryReport"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.UserOfMovementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateOfMovement() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.DateOfMovementColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateOfMovement' de la tabla 'ERP_SP_Inventory_EntryReport"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.DateOfMovementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_ManualInput() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.IS_ManualInputColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IS_ManualInput' de la tabla 'ERP_SP_Inventory_EntryReport"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.IS_ManualInputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Product_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.ID_Product_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Product_FK' de la tabla 'ERP_SP_Inventory_EntryReport'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.ID_Product_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Quantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.QuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Quantity' de la tabla 'ERP_SP_Inventory_EntryReport' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.QuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Product() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.Name_ProductColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Name_Product' de la tabla 'ERP_SP_Inventory_EntryReport' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.Name_ProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StowageName() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport.StowageNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'StowageName' de la tabla 'ERP_SP_Inventory_EntryReport' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport.StowageNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Company_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.ID_Company_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Company_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.ID_Company_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Customer_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.ID_Customer_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Customer_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.ID_Customer_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Stowage_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.ID_Stowage_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Stowage_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.ID_Stowage_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Output_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.ID_Output_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Output_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.ID_Output_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInvoiceNumberNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.InvoiceNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInvoiceNumberNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.InvoiceNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWayToPayNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.WayToPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWayToPayNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.WayToPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInvoiceDateNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.InvoiceDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInvoiceDateNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.InvoiceDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_LotNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.IS_LotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_LotNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.IS_LotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Lot_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.ID_Lot_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Lot_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.ID_Lot_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUserOfMovementNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.UserOfMovementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUserOfMovementNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.UserOfMovementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateOfMovementNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.DateOfMovementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateOfMovementNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.DateOfMovementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_ManualInputNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.IS_ManualInputColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_ManualInputNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.IS_ManualInputColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Product_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.ID_Product_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Product_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.ID_Product_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuantityNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.QuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuantityNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.QuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_ProductNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.Name_ProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_ProductNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.Name_ProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStowageNameNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport.StowageNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStowageNameNull()
            Me(Me.tableERP_SP_Inventory_EntryReport.StowageNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_SP_Inventory_OutReportRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_SP_Inventory_OutReport As ERP_SP_Inventory_OutReportDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_SP_Inventory_OutReport = CType(Me.Table,ERP_SP_Inventory_OutReportDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Header() As Long
            Get
                Return CType(Me(Me.tableERP_SP_Inventory_OutReport.ID_HeaderColumn),Long)
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.ID_HeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Company_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.ID_Company_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Company_FK' de la tabla 'ERP_SP_Inventory_OutReport' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.ID_Company_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Customer_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.ID_Customer_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Customer_FK' de la tabla 'ERP_SP_Inventory_OutReport' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.ID_Customer_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Stowage_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.ID_Stowage_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Stowage_FK' de la tabla 'ERP_SP_Inventory_OutReport' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.ID_Stowage_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Output_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.ID_Output_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Output_FK' de la tabla 'ERP_SP_Inventory_OutReport' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.ID_Output_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InvoiceNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.InvoiceNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'InvoiceNumber' de la tabla 'ERP_SP_Inventory_OutReport' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.InvoiceNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WayToPay() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.WayToPayColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'WayToPay' de la tabla 'ERP_SP_Inventory_OutReport' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.WayToPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InvoiceDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.InvoiceDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'InvoiceDate' de la tabla 'ERP_SP_Inventory_OutReport' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.InvoiceDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_Lot() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.IS_LotColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IS_Lot' de la tabla 'ERP_SP_Inventory_OutReport' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.IS_LotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Lot_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.ID_Lot_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Lot_FK' de la tabla 'ERP_SP_Inventory_OutReport' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.ID_Lot_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserOfMovement() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.UserOfMovementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UserOfMovement' de la tabla 'ERP_SP_Inventory_OutReport' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.UserOfMovementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateOfMovement() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.DateOfMovementColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateOfMovement' de la tabla 'ERP_SP_Inventory_OutReport' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.DateOfMovementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_ManualInput() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.IS_ManualInputColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IS_ManualInput' de la tabla 'ERP_SP_Inventory_OutReport' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.IS_ManualInputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Product_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.ID_Product_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Product_FK' de la tabla 'ERP_SP_Inventory_OutReport' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.ID_Product_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Quantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.QuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Quantity' de la tabla 'ERP_SP_Inventory_OutReport' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.QuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Product() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.Name_ProductColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Name_Product' de la tabla 'ERP_SP_Inventory_OutReport' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.Name_ProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StowageName() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_OutReport.StowageNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'StowageName' de la tabla 'ERP_SP_Inventory_OutReport' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_OutReport.StowageNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Company_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.ID_Company_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Company_FKNull()
            Me(Me.tableERP_SP_Inventory_OutReport.ID_Company_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Customer_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.ID_Customer_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Customer_FKNull()
            Me(Me.tableERP_SP_Inventory_OutReport.ID_Customer_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Stowage_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.ID_Stowage_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Stowage_FKNull()
            Me(Me.tableERP_SP_Inventory_OutReport.ID_Stowage_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Output_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.ID_Output_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Output_FKNull()
            Me(Me.tableERP_SP_Inventory_OutReport.ID_Output_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInvoiceNumberNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.InvoiceNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInvoiceNumberNull()
            Me(Me.tableERP_SP_Inventory_OutReport.InvoiceNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWayToPayNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.WayToPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWayToPayNull()
            Me(Me.tableERP_SP_Inventory_OutReport.WayToPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInvoiceDateNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.InvoiceDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInvoiceDateNull()
            Me(Me.tableERP_SP_Inventory_OutReport.InvoiceDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_LotNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.IS_LotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_LotNull()
            Me(Me.tableERP_SP_Inventory_OutReport.IS_LotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Lot_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.ID_Lot_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Lot_FKNull()
            Me(Me.tableERP_SP_Inventory_OutReport.ID_Lot_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUserOfMovementNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.UserOfMovementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUserOfMovementNull()
            Me(Me.tableERP_SP_Inventory_OutReport.UserOfMovementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateOfMovementNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.DateOfMovementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateOfMovementNull()
            Me(Me.tableERP_SP_Inventory_OutReport.DateOfMovementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_ManualInputNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.IS_ManualInputColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_ManualInputNull()
            Me(Me.tableERP_SP_Inventory_OutReport.IS_ManualInputColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Product_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.ID_Product_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Product_FKNull()
            Me(Me.tableERP_SP_Inventory_OutReport.ID_Product_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuantityNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.QuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuantityNull()
            Me(Me.tableERP_SP_Inventory_OutReport.QuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_ProductNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.Name_ProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_ProductNull()
            Me(Me.tableERP_SP_Inventory_OutReport.Name_ProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStowageNameNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_OutReport.StowageNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStowageNameNull()
            Me(Me.tableERP_SP_Inventory_OutReport.StowageNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_SP_Inventory_TranferReportRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_SP_Inventory_TranferReport As ERP_SP_Inventory_TranferReportDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_SP_Inventory_TranferReport = CType(Me.Table,ERP_SP_Inventory_TranferReportDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Output() As Long
            Get
                Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.ID_OutputColumn),Long)
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.ID_OutputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Stowage_FK() As Long
            Get
                Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.ID_Stowage_FKColumn),Long)
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.ID_Stowage_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Outlet_FK() As Long
            Get
                Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.ID_Outlet_FKColumn),Long)
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.ID_Outlet_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StowageOfDestination_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.StowageOfDestination_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'StowageOfDestination_FK' de la tabla 'ERP_SP_Inventory_Tr"& _ 
                            "anferReport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.StowageOfDestination_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comments() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.CommentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Comments' de la tabla 'ERP_SP_Inventory_TranferReport' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.CommentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property User_Authorized() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.User_AuthorizedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'User_Authorized' de la tabla 'ERP_SP_Inventory_TranferRep"& _ 
                            "ort' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.User_AuthorizedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Date_Output() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.Date_OutputColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Date_Output' de la tabla 'ERP_SP_Inventory_TranferReport'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.Date_OutputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property User_Output() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.User_OutputColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'User_Output' de la tabla 'ERP_SP_Inventory_TranferReport'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.User_OutputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Product_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.ID_Product_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Product_FK' de la tabla 'ERP_SP_Inventory_TranferRepor"& _ 
                            "t' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.ID_Product_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Quantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.QuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Quantity' de la tabla 'ERP_SP_Inventory_TranferReport' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.QuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Product() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.Name_ProductColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Name_Product' de la tabla 'ERP_SP_Inventory_TranferReport"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.Name_ProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StowageNameStart() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.StowageNameStartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'StowageNameStart' de la tabla 'ERP_SP_Inventory_TranferRe"& _ 
                            "port' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.StowageNameStartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StowageNameFinish() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_TranferReport.StowageNameFinishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'StowageNameFinish' de la tabla 'ERP_SP_Inventory_TranferR"& _ 
                            "eport' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_TranferReport.StowageNameFinishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStowageOfDestination_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_TranferReport.StowageOfDestination_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStowageOfDestination_FKNull()
            Me(Me.tableERP_SP_Inventory_TranferReport.StowageOfDestination_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCommentsNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_TranferReport.CommentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCommentsNull()
            Me(Me.tableERP_SP_Inventory_TranferReport.CommentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUser_AuthorizedNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_TranferReport.User_AuthorizedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUser_AuthorizedNull()
            Me(Me.tableERP_SP_Inventory_TranferReport.User_AuthorizedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDate_OutputNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_TranferReport.Date_OutputColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDate_OutputNull()
            Me(Me.tableERP_SP_Inventory_TranferReport.Date_OutputColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUser_OutputNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_TranferReport.User_OutputColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUser_OutputNull()
            Me(Me.tableERP_SP_Inventory_TranferReport.User_OutputColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Product_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_TranferReport.ID_Product_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Product_FKNull()
            Me(Me.tableERP_SP_Inventory_TranferReport.ID_Product_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuantityNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_TranferReport.QuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuantityNull()
            Me(Me.tableERP_SP_Inventory_TranferReport.QuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_ProductNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_TranferReport.Name_ProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_ProductNull()
            Me(Me.tableERP_SP_Inventory_TranferReport.Name_ProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStowageNameStartNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_TranferReport.StowageNameStartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStowageNameStartNull()
            Me(Me.tableERP_SP_Inventory_TranferReport.StowageNameStartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStowageNameFinishNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_TranferReport.StowageNameFinishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStowageNameFinishNull()
            Me(Me.tableERP_SP_Inventory_TranferReport.StowageNameFinishColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ERP_SP_Inventory_EntryReport_VencimientoRow
        Inherits Global.System.Data.DataRow
        
        Private tableERP_SP_Inventory_EntryReport_Vencimiento As ERP_SP_Inventory_EntryReport_VencimientoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableERP_SP_Inventory_EntryReport_Vencimiento = CType(Me.Table,ERP_SP_Inventory_EntryReport_VencimientoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Header() As Long
            Get
                Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_HeaderColumn),Long)
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_HeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Company_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Company_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Company_FK' de la tabla 'ERP_SP_Inventory_EntryReport_"& _ 
                            "Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Company_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Customer_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Customer_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Customer_FK' de la tabla 'ERP_SP_Inventory_EntryReport"& _ 
                            "_Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Customer_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Stowage_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Stowage_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Stowage_FK' de la tabla 'ERP_SP_Inventory_EntryReport_"& _ 
                            "Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Stowage_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Output_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Output_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Output_FK' de la tabla 'ERP_SP_Inventory_EntryReport_V"& _ 
                            "encimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Output_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Outlet_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Outlet_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Outlet_FK' de la tabla 'ERP_SP_Inventory_EntryReport_V"& _ 
                            "encimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Outlet_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InvoiceNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.InvoiceNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'InvoiceNumber' de la tabla 'ERP_SP_Inventory_EntryReport_"& _ 
                            "Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.InvoiceNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WayToPay() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.WayToPayColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'WayToPay' de la tabla 'ERP_SP_Inventory_EntryReport_Venci"& _ 
                            "miento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.WayToPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InvoiceDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.InvoiceDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'InvoiceDate' de la tabla 'ERP_SP_Inventory_EntryReport_Ve"& _ 
                            "ncimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.InvoiceDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_Lot() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.IS_LotColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IS_Lot' de la tabla 'ERP_SP_Inventory_EntryReport_Vencimi"& _ 
                            "ento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.IS_LotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Lot_FK() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Lot_FKColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Lot_FK' de la tabla 'ERP_SP_Inventory_EntryReport_Venc"& _ 
                            "imiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Lot_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserOfMovement() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.UserOfMovementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UserOfMovement' de la tabla 'ERP_SP_Inventory_EntryReport"& _ 
                            "_Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.UserOfMovementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateOfMovement() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.DateOfMovementColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateOfMovement' de la tabla 'ERP_SP_Inventory_EntryReport"& _ 
                            "_Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.DateOfMovementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_ManualInput() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.IS_ManualInputColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IS_ManualInput' de la tabla 'ERP_SP_Inventory_EntryReport"& _ 
                            "_Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.IS_ManualInputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PurchaseOrders() As Long
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.PurchaseOrdersColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PurchaseOrders' de la tabla 'ERP_SP_Inventory_EntryReport"& _ 
                            "_Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.PurchaseOrdersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tipoCompra() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.tipoCompraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'tipoCompra' de la tabla 'ERP_SP_Inventory_EntryReport_Ven"& _ 
                            "cimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.tipoCompraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModalidadCompra() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ModalidadCompraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ModalidadCompra' de la tabla 'ERP_SP_Inventory_EntryRepor"& _ 
                            "t_Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ModalidadCompraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Product_FK() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Product_FKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_Product_FK' de la tabla 'ERP_SP_Inventory_EntryReport_"& _ 
                            "Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Product_FKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Quantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.QuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Quantity' de la tabla 'ERP_SP_Inventory_EntryReport_Venci"& _ 
                            "miento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.QuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Number_Purchase() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Number_PurchaseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Number_Purchase' de la tabla 'ERP_SP_Inventory_EntryRepor"& _ 
                            "t_Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Number_PurchaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name_Product() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Name_ProductColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Name_Product' de la tabla 'ERP_SP_Inventory_EntryReport_V"& _ 
                            "encimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Name_ProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property stowagename() As String
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.stowagenameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'stowagename' de la tabla 'ERP_SP_Inventory_EntryReport_Ve"& _ 
                            "ncimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.stowagenameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateExpiration() As Date
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.DateExpirationColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DateExpiration' de la tabla 'ERP_SP_Inventory_EntryReport"& _ 
                            "_Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.DateExpirationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_Product_FK1() As Long
            Get
                Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Product_FK1Column),Long)
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Product_FK1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PriceProduct() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.PriceProductColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PriceProduct' de la tabla 'ERP_SP_Inventory_EntryReport_V"& _ 
                            "encimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.PriceProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Price_LastPpurchase() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Price_LastPpurchaseColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Price_LastPpurchase' de la tabla 'ERP_SP_Inventory_EntryR"& _ 
                            "eport_Vencimiento' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Price_LastPpurchaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Company_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Company_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Company_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Company_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Customer_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Customer_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Customer_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Customer_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Stowage_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Stowage_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Stowage_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Stowage_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Output_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Output_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Output_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Output_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Outlet_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Outlet_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Outlet_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Outlet_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInvoiceNumberNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.InvoiceNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInvoiceNumberNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.InvoiceNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWayToPayNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.WayToPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWayToPayNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.WayToPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInvoiceDateNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.InvoiceDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInvoiceDateNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.InvoiceDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_LotNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.IS_LotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_LotNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.IS_LotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Lot_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Lot_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Lot_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Lot_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUserOfMovementNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.UserOfMovementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUserOfMovementNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.UserOfMovementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateOfMovementNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.DateOfMovementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateOfMovementNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.DateOfMovementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_ManualInputNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.IS_ManualInputColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_ManualInputNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.IS_ManualInputColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPurchaseOrdersNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.PurchaseOrdersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPurchaseOrdersNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.PurchaseOrdersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstipoCompraNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.tipoCompraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettipoCompraNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.tipoCompraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModalidadCompraNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ModalidadCompraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModalidadCompraNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ModalidadCompraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_Product_FKNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Product_FKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_Product_FKNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.ID_Product_FKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuantityNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.QuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuantityNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.QuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumber_PurchaseNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Number_PurchaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumber_PurchaseNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Number_PurchaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsName_ProductNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Name_ProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetName_ProductNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Name_ProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstowagenameNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.stowagenameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstowagenameNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.stowagenameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateExpirationNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.DateExpirationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateExpirationNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.DateExpirationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriceProductNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.PriceProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriceProductNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.PriceProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrice_LastPpurchaseNull() As Boolean
            Return Me.IsNull(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Price_LastPpurchaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrice_LastPpurchaseNull()
            Me(Me.tableERP_SP_Inventory_EntryReport_Vencimiento.Price_LastPpurchaseColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_SP_Inventory_EntryReportRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_SP_Inventory_EntryReportRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_SP_Inventory_EntryReportRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_SP_Inventory_EntryReportRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_SP_Inventory_OutReportRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_SP_Inventory_OutReportRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_SP_Inventory_OutReportRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_SP_Inventory_OutReportRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_SP_Inventory_TranferReportRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_SP_Inventory_TranferReportRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_SP_Inventory_TranferReportRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_SP_Inventory_TranferReportRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ERP_SP_Inventory_EntryReport_VencimientoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ERP_SP_Inventory_EntryReport_VencimientoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ERP_SP_Inventory_EntryReport_VencimientoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ERP_SP_Inventory_EntryReport_VencimientoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace SatelliteERP_InventarioDS2TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_SP_Inventory_EntryReportTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_SP_Inventory_EntryReport"
            tableMapping.ColumnMappings.Add("ID_Header", "ID_Header")
            tableMapping.ColumnMappings.Add("ID_Company_FK", "ID_Company_FK")
            tableMapping.ColumnMappings.Add("ID_Customer_FK", "ID_Customer_FK")
            tableMapping.ColumnMappings.Add("ID_Stowage_FK", "ID_Stowage_FK")
            tableMapping.ColumnMappings.Add("ID_Output_FK", "ID_Output_FK")
            tableMapping.ColumnMappings.Add("InvoiceNumber", "InvoiceNumber")
            tableMapping.ColumnMappings.Add("WayToPay", "WayToPay")
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate")
            tableMapping.ColumnMappings.Add("IS_Lot", "IS_Lot")
            tableMapping.ColumnMappings.Add("ID_Lot_FK", "ID_Lot_FK")
            tableMapping.ColumnMappings.Add("UserOfMovement", "UserOfMovement")
            tableMapping.ColumnMappings.Add("DateOfMovement", "DateOfMovement")
            tableMapping.ColumnMappings.Add("IS_ManualInput", "IS_ManualInput")
            tableMapping.ColumnMappings.Add("ID_Product_FK", "ID_Product_FK")
            tableMapping.ColumnMappings.Add("Quantity", "Quantity")
            tableMapping.ColumnMappings.Add("Name_Product", "Name_Product")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.SatelliteERP_InventarioCS
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_SP_Inventory_EntryReport"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id_EntryHeader", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As SatelliteERP_InventarioDS2.ERP_SP_Inventory_EntryReportDataTable, ByVal id_EntryHeader As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (id_EntryHeader.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(id_EntryHeader.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal id_EntryHeader As Global.System.Nullable(Of Long)) As SatelliteERP_InventarioDS2.ERP_SP_Inventory_EntryReportDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (id_EntryHeader.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(id_EntryHeader.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As SatelliteERP_InventarioDS2.ERP_SP_Inventory_EntryReportDataTable = New SatelliteERP_InventarioDS2.ERP_SP_Inventory_EntryReportDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_SP_Inventory_OutReportTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_SP_Inventory_OutReport"
            tableMapping.ColumnMappings.Add("ID_Header", "ID_Header")
            tableMapping.ColumnMappings.Add("ID_Company_FK", "ID_Company_FK")
            tableMapping.ColumnMappings.Add("ID_Customer_FK", "ID_Customer_FK")
            tableMapping.ColumnMappings.Add("ID_Stowage_FK", "ID_Stowage_FK")
            tableMapping.ColumnMappings.Add("ID_Output_FK", "ID_Output_FK")
            tableMapping.ColumnMappings.Add("InvoiceNumber", "InvoiceNumber")
            tableMapping.ColumnMappings.Add("WayToPay", "WayToPay")
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate")
            tableMapping.ColumnMappings.Add("IS_Lot", "IS_Lot")
            tableMapping.ColumnMappings.Add("ID_Lot_FK", "ID_Lot_FK")
            tableMapping.ColumnMappings.Add("UserOfMovement", "UserOfMovement")
            tableMapping.ColumnMappings.Add("DateOfMovement", "DateOfMovement")
            tableMapping.ColumnMappings.Add("IS_ManualInput", "IS_ManualInput")
            tableMapping.ColumnMappings.Add("ID_Product_FK", "ID_Product_FK")
            tableMapping.ColumnMappings.Add("Quantity", "Quantity")
            tableMapping.ColumnMappings.Add("Name_Product", "Name_Product")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.SatelliteERP_InventarioCS
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_SP_Inventory_OutReport"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id_EntryHeader", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As SatelliteERP_InventarioDS2.ERP_SP_Inventory_OutReportDataTable, ByVal id_EntryHeader As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (id_EntryHeader.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(id_EntryHeader.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal id_EntryHeader As Global.System.Nullable(Of Long)) As SatelliteERP_InventarioDS2.ERP_SP_Inventory_OutReportDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (id_EntryHeader.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(id_EntryHeader.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As SatelliteERP_InventarioDS2.ERP_SP_Inventory_OutReportDataTable = New SatelliteERP_InventarioDS2.ERP_SP_Inventory_OutReportDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_SP_Inventory_TranferReportTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_SP_Inventory_TranferReport"
            tableMapping.ColumnMappings.Add("ID_Output", "ID_Output")
            tableMapping.ColumnMappings.Add("ID_Stowage_FK", "ID_Stowage_FK")
            tableMapping.ColumnMappings.Add("ID_Outlet_FK", "ID_Outlet_FK")
            tableMapping.ColumnMappings.Add("StowageOfDestination_FK", "StowageOfDestination_FK")
            tableMapping.ColumnMappings.Add("Comments", "Comments")
            tableMapping.ColumnMappings.Add("User_Authorized", "User_Authorized")
            tableMapping.ColumnMappings.Add("Date_Output", "Date_Output")
            tableMapping.ColumnMappings.Add("User_Output", "User_Output")
            tableMapping.ColumnMappings.Add("ID_Product_FK", "ID_Product_FK")
            tableMapping.ColumnMappings.Add("Quantity", "Quantity")
            tableMapping.ColumnMappings.Add("Name_Product", "Name_Product")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.SatelliteERP_InventarioCS
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_SP_Inventory_TranferReport"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id_OutputHeader", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As SatelliteERP_InventarioDS2.ERP_SP_Inventory_TranferReportDataTable, ByVal id_OutputHeader As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (id_OutputHeader.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(id_OutputHeader.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal id_OutputHeader As Global.System.Nullable(Of Long)) As SatelliteERP_InventarioDS2.ERP_SP_Inventory_TranferReportDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (id_OutputHeader.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(id_OutputHeader.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As SatelliteERP_InventarioDS2.ERP_SP_Inventory_TranferReportDataTable = New SatelliteERP_InventarioDS2.ERP_SP_Inventory_TranferReportDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ERP_SP_Inventory_EntryReport_VencimientoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ERP_SP_Inventory_EntryReport_Vencimiento"
            tableMapping.ColumnMappings.Add("ID_Header", "ID_Header")
            tableMapping.ColumnMappings.Add("ID_Company_FK", "ID_Company_FK")
            tableMapping.ColumnMappings.Add("ID_Customer_FK", "ID_Customer_FK")
            tableMapping.ColumnMappings.Add("ID_Stowage_FK", "ID_Stowage_FK")
            tableMapping.ColumnMappings.Add("ID_Output_FK", "ID_Output_FK")
            tableMapping.ColumnMappings.Add("ID_Outlet_FK", "ID_Outlet_FK")
            tableMapping.ColumnMappings.Add("InvoiceNumber", "InvoiceNumber")
            tableMapping.ColumnMappings.Add("WayToPay", "WayToPay")
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate")
            tableMapping.ColumnMappings.Add("IS_Lot", "IS_Lot")
            tableMapping.ColumnMappings.Add("ID_Lot_FK", "ID_Lot_FK")
            tableMapping.ColumnMappings.Add("UserOfMovement", "UserOfMovement")
            tableMapping.ColumnMappings.Add("DateOfMovement", "DateOfMovement")
            tableMapping.ColumnMappings.Add("IS_ManualInput", "IS_ManualInput")
            tableMapping.ColumnMappings.Add("PurchaseOrders", "PurchaseOrders")
            tableMapping.ColumnMappings.Add("tipoCompra", "tipoCompra")
            tableMapping.ColumnMappings.Add("ModalidadCompra", "ModalidadCompra")
            tableMapping.ColumnMappings.Add("Quantity", "Quantity")
            tableMapping.ColumnMappings.Add("Number_Purchase", "Number_Purchase")
            tableMapping.ColumnMappings.Add("Name_Product", "Name_Product")
            tableMapping.ColumnMappings.Add("stowagename", "stowagename")
            tableMapping.ColumnMappings.Add("DateExpiration", "DateExpiration")
            tableMapping.ColumnMappings.Add("ID_Product_FK", "ID_Product_FK1")
            tableMapping.ColumnMappings.Add("PriceProduct", "PriceProduct")
            tableMapping.ColumnMappings.Add("Price_LastPpurchase", "Price_LastPpurchase")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.epd_SatelliteERP.My.MySettings.Default.EPD_SatelliteERPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ERP_SP_Inventory_EntryReport"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id_EntryHeader", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 19, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As SatelliteERP_InventarioDS2.ERP_SP_Inventory_EntryReport_VencimientoDataTable, ByVal id_EntryHeader As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (id_EntryHeader.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(id_EntryHeader.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal id_EntryHeader As Global.System.Nullable(Of Long)) As SatelliteERP_InventarioDS2.ERP_SP_Inventory_EntryReport_VencimientoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (id_EntryHeader.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(id_EntryHeader.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As SatelliteERP_InventarioDS2.ERP_SP_Inventory_EntryReport_VencimientoDataTable = New SatelliteERP_InventarioDS2.ERP_SP_Inventory_EntryReport_VencimientoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As SatelliteERP_InventarioDS2, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As SatelliteERP_InventarioDS2, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As SatelliteERP_InventarioDS2, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As SatelliteERP_InventarioDS2) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
